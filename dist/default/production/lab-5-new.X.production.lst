

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Nov 17 11:10:57 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 05/05/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F67K40 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     _PIE4bits	set	3629
    57  0000                     _TX4REG	set	3812
    58  0000                     _RC4REG	set	3811
    59  0000                     _PIR4bits	set	3639
    60  0000                     _RC4STAbits	set	3815
    61  0000                     _SP4BRGH	set	3814
    62  0000                     _SP4BRGL	set	3813
    63  0000                     _TX4STAbits	set	3816
    64  0000                     _BAUD4CONbits	set	3817
    65  0000                     _RX4PPS	set	3605
    66  0000                     _RC0PPS	set	3682
    67  0000                     _TRISEbits	set	3973
    68  0000                     _TRISBbits	set	3970
    69  0000                     _TRISCbits	set	3971
    70  0000                     _LATEbits	set	3965
    71  0000                     _LATBbits	set	3962
    72  0000                     _LATCbits	set	3963
    73                           
    74                           ; #config settings
    75                           
    76                           	psect	cinit
    77  01FE80                     __pcinit:
    78                           	callstack 0
    79  01FE80                     start_initialization:
    80                           	callstack 0
    81  01FE80                     __initialization:
    82                           	callstack 0
    83                           
    84                           ; Clear objects allocated to BANK0 (60 bytes)
    85  01FE80  EE00  F060         	lfsr	0,__pbssBANK0
    86  01FE84  0E3C               	movlw	60
    87  01FE86                     clear_0:
    88  01FE86  6AEE               	clrf	postinc0,c
    89  01FE88  06E8               	decf	wreg,f,c
    90  01FE8A  E1FD               	bnz	clear_0
    91                           
    92                           ; Clear objects allocated to COMRAM (34 bytes)
    93  01FE8C  EE00  F001         	lfsr	0,__pbssCOMRAM
    94  01FE90  0E22               	movlw	34
    95  01FE92                     clear_1:
    96  01FE92  6AEE               	clrf	postinc0,c
    97  01FE94  06E8               	decf	wreg,f,c
    98  01FE96  E1FD               	bnz	clear_1
    99  01FE98                     end_of_initialization:
   100                           	callstack 0
   101  01FE98                     __end_of__initialization:
   102                           	callstack 0
   103  01FE98  0100               	movlb	0
   104  01FE9A  EF4F  F0FF         	goto	_main	;jump to C main() function
   105                           
   106                           	psect	bssCOMRAM
   107  000001                     __pbssCOMRAM:
   108                           	callstack 0
   109  000001                     _EUSART4RXbuf:
   110                           	callstack 0
   111  000001                     	ds	20
   112  000015                     _data:
   113                           	callstack 0
   114  000015                     	ds	2
   115  000017                     _frac_part:
   116                           	callstack 0
   117  000017                     	ds	2
   118  000019                     _int_part:
   119                           	callstack 0
   120  000019                     	ds	2
   121  00001B                     _lowbits:
   122                           	callstack 0
   123  00001B                     	ds	2
   124  00001D                     _highbits:
   125                           	callstack 0
   126  00001D                     	ds	2
   127  00001F                     _TxBufReadCnt:
   128                           	callstack 0
   129  00001F                     	ds	1
   130  000020                     _TxBufWriteCnt:
   131                           	callstack 0
   132  000020                     	ds	1
   133  000021                     _RxBufReadCnt:
   134                           	callstack 0
   135  000021                     	ds	1
   136  000022                     _RxBufWriteCnt:
   137                           	callstack 0
   138  000022                     	ds	1
   139                           
   140                           	psect	bssBANK0
   141  000060                     __pbssBANK0:
   142                           	callstack 0
   143  000060                     _EUSART4TXbuf:
   144                           	callstack 0
   145  000060                     	ds	60
   146                           
   147                           	psect	cstackCOMRAM
   148  000023                     __pcstackCOMRAM:
   149                           	callstack 0
   150  000023                     LCD_sendnibble@number:
   151                           	callstack 0
   152  000023                     sendCharSerial4@charToSend:
   153                           	callstack 0
   154                           
   155                           ; 1 bytes @ 0x0
   156  000023                     	ds	1
   157  000024                     LCD_sendbyte@type:
   158                           	callstack 0
   159                           
   160                           ; 1 bytes @ 0x1
   161  000024                     	ds	1
   162  000025                     LCD_sendbyte@highbits:
   163                           	callstack 0
   164                           
   165                           ; 1 bytes @ 0x2
   166  000025                     	ds	1
   167  000026                     LCD_sendbyte@Byte:
   168                           	callstack 0
   169                           
   170                           ; 1 bytes @ 0x3
   171  000026                     	ds	1
   172  000027                     ??_LCD_Init:
   173                           
   174                           ; 1 bytes @ 0x4
   175  000027                     	ds	2
   176  000029                     ??_main:
   177                           
   178                           ; 1 bytes @ 0x6
   179  000029                     	ds	1
   180                           
   181 ;;
   182 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   183 ;;
   184 ;; *************** function _main *****************
   185 ;; Defined at:
   186 ;;		line 17 in file "main.c"
   187 ;; Parameters:    Size  Location     Type
   188 ;;		None
   189 ;; Auto vars:     Size  Location     Type
   190 ;;		None
   191 ;; Return value:  Size  Location     Type
   192 ;;                  1    wreg      void 
   193 ;; Registers used:
   194 ;;		wreg, status,2, status,0, cstack
   195 ;; Tracked objects:
   196 ;;		On entry : 0/0
   197 ;;		On exit  : 0/0
   198 ;;		Unchanged: 0/0
   199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   203 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   204 ;;Total ram usage:        1 bytes
   205 ;; Hardware stack levels required when called: 4
   206 ;; This function calls:
   207 ;;		_LCD_Init
   208 ;;		_LCD_sendbyte
   209 ;;		_getCharSerial4
   210 ;;		_initUSART4
   211 ;;		_sendCharSerial4
   212 ;; This function is called by:
   213 ;;		Startup code after reset
   214 ;; This function uses a non-reentrant model
   215 ;;
   216                           
   217                           	psect	text0
   218  01FE9E                     __ptext0:
   219                           	callstack 0
   220  01FE9E                     _main:
   221                           	callstack 27
   222  01FE9E                     
   223                           ;main.c: 19:     LCD_Init();
   224  01FE9E  ECB4  F0FF         	call	_LCD_Init	;wreg free
   225  01FEA2                     
   226                           ;main.c: 20:     initUSART4();
   227  01FEA2  EC31  F0FF         	call	_initUSART4	;wreg free
   228  01FEA6                     l1102:
   229                           
   230                           ;main.c: 23:         data = getCharSerial4();
   231  01FEA6  EC1B  F0FF         	call	_getCharSerial4	;wreg free
   232  01FEAA  6E29               	movwf	??_main^0,c
   233  01FEAC  5029               	movf	??_main^0,w,c
   234  01FEAE  6E15               	movwf	_data^0,c
   235  01FEB0  6A16               	clrf	(_data+1)^0,c
   236                           
   237                           ;main.c: 24:         sendCharSerial4(data);
   238  01FEB2  5015               	movf	_data^0,w,c
   239  01FEB4  EC25  F0FF         	call	_sendCharSerial4
   240  01FEB8                     
   241                           ;main.c: 25:         LCD_sendbyte(data, 1);
   242  01FEB8  0E01               	movlw	1
   243  01FEBA  6E24               	movwf	LCD_sendbyte@type^0,c
   244  01FEBC  5015               	movf	_data^0,w,c
   245  01FEBE  EC65  F0FF         	call	_LCD_sendbyte
   246  01FEC2  EF53  F0FF         	goto	l1102
   247  01FEC6  EF00  F000         	goto	start
   248  01FECA                     __end_of_main:
   249                           	callstack 0
   250                           
   251 ;; *************** function _sendCharSerial4 *****************
   252 ;; Defined at:
   253 ;;		line 28 in file "serial.c"
   254 ;; Parameters:    Size  Location     Type
   255 ;;  charToSend      1    wreg     unsigned char 
   256 ;; Auto vars:     Size  Location     Type
   257 ;;  charToSend      1    0[COMRAM] unsigned char 
   258 ;; Return value:  Size  Location     Type
   259 ;;                  1    wreg      void 
   260 ;; Registers used:
   261 ;;		wreg
   262 ;; Tracked objects:
   263 ;;		On entry : 0/0
   264 ;;		On exit  : 0/0
   265 ;;		Unchanged: 0/0
   266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   270 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   271 ;;Total ram usage:        1 bytes
   272 ;; Hardware stack levels used: 1
   273 ;; This function calls:
   274 ;;		Nothing
   275 ;; This function is called by:
   276 ;;		_main
   277 ;; This function uses a non-reentrant model
   278 ;;
   279                           
   280                           	psect	text1
   281  01FE4A                     __ptext1:
   282                           	callstack 0
   283  01FE4A                     _sendCharSerial4:
   284                           	callstack 30
   285                           
   286                           ;incstack = 0
   287                           ;sendCharSerial4@charToSend stored from wreg
   288  01FE4A  6E23               	movwf	sendCharSerial4@charToSend^0,c
   289  01FE4C                     l141:
   290  01FE4C  010E               	movlb	14	; () banked
   291  01FE4E  A537               	btfss	55,2,b	;volatile
   292  01FE50  EF2C  F0FF         	goto	u71
   293  01FE54  EF2E  F0FF         	goto	u70
   294  01FE58                     u71:
   295  01FE58  EF26  F0FF         	goto	l141
   296  01FE5C                     u70:
   297  01FE5C                     
   298                           ; BSR set to: 14
   299                           ;serial.c: 30:     TX4REG = charToSend;
   300  01FE5C  C023  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
   301  01FE60                     
   302                           ; BSR set to: 14
   303  01FE60  0012               	return		;funcret
   304  01FE62                     __end_of_sendCharSerial4:
   305                           	callstack 0
   306                           
   307 ;; *************** function _initUSART4 *****************
   308 ;; Defined at:
   309 ;;		line 4 in file "serial.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;		None
   312 ;; Auto vars:     Size  Location     Type
   313 ;;		None
   314 ;; Return value:  Size  Location     Type
   315 ;;                  1    wreg      void 
   316 ;; Registers used:
   317 ;;		wreg, status,2
   318 ;; Tracked objects:
   319 ;;		On entry : 0/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   327 ;;Total ram usage:        0 bytes
   328 ;; Hardware stack levels used: 1
   329 ;; This function calls:
   330 ;;		Nothing
   331 ;; This function is called by:
   332 ;;		_main
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336                           	psect	text2
   337  01FE62                     __ptext2:
   338                           	callstack 0
   339  01FE62                     _initUSART4:
   340                           	callstack 30
   341  01FE62                     
   342                           ;serial.c: 8:     RC0PPS = 0x12;
   343  01FE62  0E12               	movlw	18
   344  01FE64  010E               	movlb	14	; () banked
   345  01FE66  6F62               	movwf	98,b	;volatile
   346                           
   347                           ;serial.c: 9:     RX4PPS = 0x11;
   348  01FE68  0E11               	movlw	17
   349  01FE6A  6F15               	movwf	21,b	;volatile
   350  01FE6C                     
   351                           ; BSR set to: 14
   352                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
   353  01FE6C  97E9               	bcf	233,3,b	;volatile
   354  01FE6E                     
   355                           ; BSR set to: 14
   356                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
   357  01FE6E  95E8               	bcf	232,2,b	;volatile
   358                           
   359                           ;serial.c: 13:     SP4BRGL = 51;
   360  01FE70  0E33               	movlw	51
   361  01FE72  6FE5               	movwf	229,b	;volatile
   362                           
   363                           ;serial.c: 14:     SP4BRGH = 0;
   364  01FE74  0E00               	movlw	0
   365  01FE76  6FE6               	movwf	230,b	;volatile
   366  01FE78                     
   367                           ; BSR set to: 14
   368                           ;serial.c: 16:     RC4STAbits.CREN = 1;
   369  01FE78  89E7               	bsf	231,4,b	;volatile
   370  01FE7A                     
   371                           ; BSR set to: 14
   372                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
   373  01FE7A  8BE8               	bsf	232,5,b	;volatile
   374  01FE7C                     
   375                           ; BSR set to: 14
   376                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
   377  01FE7C  8FE7               	bsf	231,7,b	;volatile
   378  01FE7E                     
   379                           ; BSR set to: 14
   380  01FE7E  0012               	return		;funcret
   381  01FE80                     __end_of_initUSART4:
   382                           	callstack 0
   383                           
   384 ;; *************** function _getCharSerial4 *****************
   385 ;; Defined at:
   386 ;;		line 22 in file "serial.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;		None
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      unsigned char 
   393 ;; Registers used:
   394 ;;		wreg, status,2
   395 ;; Tracked objects:
   396 ;;		On entry : 0/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   404 ;;Total ram usage:        0 bytes
   405 ;; Hardware stack levels used: 1
   406 ;; This function calls:
   407 ;;		Nothing
   408 ;; This function is called by:
   409 ;;		_main
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413                           	psect	text3
   414  01FE36                     __ptext3:
   415                           	callstack 0
   416  01FE36                     _getCharSerial4:
   417                           	callstack 30
   418  01FE36                     l135:
   419  01FE36  010E               	movlb	14	; () banked
   420  01FE38  A737               	btfss	55,3,b	;volatile
   421  01FE3A  EF21  F0FF         	goto	u61
   422  01FE3E  EF23  F0FF         	goto	u60
   423  01FE42                     u61:
   424  01FE42  EF1B  F0FF         	goto	l135
   425  01FE46                     u60:
   426  01FE46                     
   427                           ; BSR set to: 14
   428                           ;serial.c: 24:     return RC4REG;
   429  01FE46  51E3               	movf	227,w,b	;volatile
   430  01FE48                     
   431                           ; BSR set to: 14
   432  01FE48  0012               	return		;funcret
   433  01FE4A                     __end_of_getCharSerial4:
   434                           	callstack 0
   435                           
   436 ;; *************** function _LCD_Init *****************
   437 ;; Defined at:
   438 ;;		line 73 in file "LCD.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;		None
   441 ;; Auto vars:     Size  Location     Type
   442 ;;		None
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      void 
   445 ;; Registers used:
   446 ;;		wreg, status,2, status,0, cstack
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   454 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   455 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   456 ;;Total ram usage:        2 bytes
   457 ;; Hardware stack levels used: 1
   458 ;; Hardware stack levels required when called: 3
   459 ;; This function calls:
   460 ;;		_LCD_sendbyte
   461 ;;		_LCD_sendnibble
   462 ;; This function is called by:
   463 ;;		_main
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           	psect	text4
   468  01FF68                     __ptext4:
   469                           	callstack 0
   470  01FF68                     _LCD_Init:
   471                           	callstack 27
   472  01FF68                     
   473                           ;LCD.c: 80:     TRISCbits.TRISC6 = 0;
   474  01FF68  9C83               	bcf	131,6,c	;volatile
   475                           
   476                           ;LCD.c: 81:     TRISCbits.TRISC2 = 0;
   477  01FF6A  9483               	bcf	131,2,c	;volatile
   478                           
   479                           ;LCD.c: 82:     TRISBbits.TRISB3 = 0;
   480  01FF6C  9682               	bcf	130,3,c	;volatile
   481                           
   482                           ;LCD.c: 83:     TRISBbits.TRISB2 = 0;
   483  01FF6E  9482               	bcf	130,2,c	;volatile
   484                           
   485                           ;LCD.c: 84:     TRISEbits.TRISE3 = 0;
   486  01FF70  9685               	bcf	133,3,c	;volatile
   487                           
   488                           ;LCD.c: 85:     TRISEbits.TRISE1 = 0;
   489  01FF72  9285               	bcf	133,1,c	;volatile
   490                           
   491                           ;LCD.c: 88:     LATCbits.LATC6 = 0;
   492  01FF74  9C7B               	bcf	123,6,c	;volatile
   493                           
   494                           ;LCD.c: 89:     LATCbits.LATC2 = 0;
   495  01FF76  947B               	bcf	123,2,c	;volatile
   496                           
   497                           ;LCD.c: 90:     LATBbits.LATB3 = 0;
   498  01FF78  967A               	bcf	122,3,c	;volatile
   499                           
   500                           ;LCD.c: 91:     LATBbits.LATB2 = 0;
   501  01FF7A  947A               	bcf	122,2,c	;volatile
   502                           
   503                           ;LCD.c: 92:     LATEbits.LATE3 = 0;
   504  01FF7C  967D               	bcf	125,3,c	;volatile
   505                           
   506                           ;LCD.c: 93:     LATEbits.LATE1 = 0;
   507  01FF7E  927D               	bcf	125,1,c	;volatile
   508  01FF80                     
   509                           ;LCD.c: 102:     _delay((unsigned long)((41)*(64000000/4000.0)));
   510  01FF80  0E04               	movlw	4
   511  01FF82  6E28               	movwf	(??_LCD_Init+1)^0,c
   512  01FF84  0E54               	movlw	84
   513  01FF86  6E27               	movwf	??_LCD_Init^0,c
   514  01FF88  0EEE               	movlw	238
   515  01FF8A                     u267:
   516  01FF8A  2EE8               	decfsz	wreg,f,c
   517  01FF8C  D7FE               	bra	u267
   518  01FF8E  2E27               	decfsz	??_LCD_Init^0,f,c
   519  01FF90  D7FC               	bra	u267
   520  01FF92  2E28               	decfsz	(??_LCD_Init+1)^0,f,c
   521  01FF94  D7FA               	bra	u267
   522  01FF96  D000               	nop2	
   523  01FF98                     
   524                           ;LCD.c: 104:     LCD_sendnibble(0b0011);
   525  01FF98  0E03               	movlw	3
   526  01FF9A  EC80  F0FF         	call	_LCD_sendnibble
   527  01FF9E                     
   528                           ;LCD.c: 105:     _delay((unsigned long)((40)*(64000000/4000000.0)));
   529  01FF9E  0ED5               	movlw	213
   530  01FFA0                     u277:
   531  01FFA0  2EE8               	decfsz	wreg,f,c
   532  01FFA2  D7FE               	bra	u277
   533  01FFA4  F000               	nop	
   534  01FFA6                     
   535                           ;LCD.c: 106:     LCD_sendbyte(0b00101000,0);
   536  01FFA6  0E00               	movlw	0
   537  01FFA8  6E24               	movwf	LCD_sendbyte@type^0,c
   538  01FFAA  0E28               	movlw	40
   539  01FFAC  EC65  F0FF         	call	_LCD_sendbyte
   540  01FFB0                     
   541                           ;LCD.c: 107:     _delay((unsigned long)((40)*(64000000/4000000.0)));
   542  01FFB0  0ED5               	movlw	213
   543  01FFB2                     u287:
   544  01FFB2  2EE8               	decfsz	wreg,f,c
   545  01FFB4  D7FE               	bra	u287
   546  01FFB6  F000               	nop	
   547  01FFB8                     
   548                           ;LCD.c: 108:     LCD_sendbyte(0b00101000,0);
   549  01FFB8  0E00               	movlw	0
   550  01FFBA  6E24               	movwf	LCD_sendbyte@type^0,c
   551  01FFBC  0E28               	movlw	40
   552  01FFBE  EC65  F0FF         	call	_LCD_sendbyte
   553  01FFC2                     
   554                           ;LCD.c: 109:     _delay((unsigned long)((38)*(64000000/4000000.0)));
   555  01FFC2  0ECA               	movlw	202
   556  01FFC4                     u297:
   557  01FFC4  2EE8               	decfsz	wreg,f,c
   558  01FFC6  D7FE               	bra	u297
   559  01FFC8  D000               	nop2	
   560  01FFCA                     
   561                           ;LCD.c: 110:     LCD_sendbyte(0b00001110,0);
   562  01FFCA  0E00               	movlw	0
   563  01FFCC  6E24               	movwf	LCD_sendbyte@type^0,c
   564  01FFCE  0E0E               	movlw	14
   565  01FFD0  EC65  F0FF         	call	_LCD_sendbyte
   566  01FFD4                     
   567                           ;LCD.c: 111:     _delay((unsigned long)((38)*(64000000/4000000.0)));
   568  01FFD4  0ECA               	movlw	202
   569  01FFD6                     u307:
   570  01FFD6  2EE8               	decfsz	wreg,f,c
   571  01FFD8  D7FE               	bra	u307
   572  01FFDA  D000               	nop2	
   573  01FFDC                     
   574                           ;LCD.c: 112:     LCD_sendbyte(0b00000001,0);
   575  01FFDC  0E00               	movlw	0
   576  01FFDE  6E24               	movwf	LCD_sendbyte@type^0,c
   577  01FFE0  0E01               	movlw	1
   578  01FFE2  EC65  F0FF         	call	_LCD_sendbyte
   579  01FFE6                     
   580                           ;LCD.c: 113:     _delay((unsigned long)((1.55)*(64000000/4000.0)));
   581  01FFE6  0E21               	movlw	33
   582  01FFE8  6E27               	movwf	??_LCD_Init^0,c
   583  01FFEA  0E34               	movlw	52
   584  01FFEC                     u317:
   585  01FFEC  2EE8               	decfsz	wreg,f,c
   586  01FFEE  D7FE               	bra	u317
   587  01FFF0  2E27               	decfsz	??_LCD_Init^0,f,c
   588  01FFF2  D7FC               	bra	u317
   589  01FFF4                     
   590                           ;LCD.c: 114:     LCD_sendbyte(0b00000110,0);
   591  01FFF4  0E00               	movlw	0
   592  01FFF6  6E24               	movwf	LCD_sendbyte@type^0,c
   593  01FFF8  0E06               	movlw	6
   594  01FFFA  EC65  F0FF         	call	_LCD_sendbyte
   595  01FFFE  0012               	return		;funcret
   596  020000                     __end_of_LCD_Init:
   597                           	callstack 0
   598                           
   599 ;; *************** function _LCD_sendbyte *****************
   600 ;; Defined at:
   601 ;;		line 52 in file "LCD.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;  Byte            1    wreg     unsigned char 
   604 ;;  type            1    1[COMRAM] unsigned char 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  Byte            1    3[COMRAM] unsigned char 
   607 ;;  highbits        1    2[COMRAM] unsigned char 
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, status,2, status,0, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   617 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   618 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   620 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   621 ;;Total ram usage:        3 bytes
   622 ;; Hardware stack levels used: 1
   623 ;; Hardware stack levels required when called: 2
   624 ;; This function calls:
   625 ;;		_LCD_sendnibble
   626 ;; This function is called by:
   627 ;;		_LCD_Init
   628 ;;		_main
   629 ;;		_LCD_setline
   630 ;;		_LCD_sendstring
   631 ;;		_LCD_scroll
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text5
   636  01FECA                     __ptext5:
   637                           	callstack 0
   638  01FECA                     _LCD_sendbyte:
   639                           	callstack 28
   640                           
   641                           ;incstack = 0
   642                           ;LCD_sendbyte@Byte stored from wreg
   643  01FECA  6E26               	movwf	LCD_sendbyte@Byte^0,c
   644  01FECC                     
   645                           ;LCD.c: 52: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 53: {;LCD.c: 56:    
      +                           unsigned char highbits;;LCD.c: 58:     highbits = Byte >> 4;
   646  01FECC  3826               	swapf	LCD_sendbyte@Byte^0,w,c
   647  01FECE  0B0F               	andlw	15
   648  01FED0  6E25               	movwf	LCD_sendbyte@highbits^0,c
   649                           
   650                           ;LCD.c: 61:     if (type == 1) {LATCbits.LATC6 = 1;} else {LATCbits.LATC6 = 0;}
   651  01FED2  0424               	decf	LCD_sendbyte@type^0,w,c
   652  01FED4  A4D8               	btfss	status,2,c
   653  01FED6  EF6F  F0FF         	goto	u191
   654  01FEDA  EF71  F0FF         	goto	u190
   655  01FEDE                     u191:
   656  01FEDE  EF74  F0FF         	goto	l41
   657  01FEE2                     u190:
   658  01FEE2  8C7B               	bsf	123,6,c	;volatile
   659  01FEE4  EF75  F0FF         	goto	l1030
   660  01FEE8                     l41:
   661  01FEE8  9C7B               	bcf	123,6,c	;volatile
   662  01FEEA                     l1030:
   663                           
   664                           ;LCD.c: 64:     LCD_sendnibble(highbits);
   665  01FEEA  5025               	movf	LCD_sendbyte@highbits^0,w,c
   666  01FEEC  EC80  F0FF         	call	_LCD_sendnibble
   667                           
   668                           ;LCD.c: 65:     LCD_sendnibble(Byte);
   669  01FEF0  5026               	movf	LCD_sendbyte@Byte^0,w,c
   670  01FEF2  EC80  F0FF         	call	_LCD_sendnibble
   671  01FEF6                     
   672                           ;LCD.c: 67:     _delay((unsigned long)((50)*(64000000/4000000.0)));
   673  01FEF6  0EA0               	movlw	160
   674  01FEF8                     u327:
   675  01FEF8  D000               	nop2	
   676  01FEFA  2EE8               	decfsz	wreg,f,c
   677  01FEFC  D7FD               	bra	u327
   678  01FEFE  0012               	return		;funcret
   679  01FF00                     __end_of_LCD_sendbyte:
   680                           	callstack 0
   681                           
   682 ;; *************** function _LCD_sendnibble *****************
   683 ;; Defined at:
   684 ;;		line 34 in file "LCD.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;  number          1    wreg     unsigned char 
   687 ;; Auto vars:     Size  Location     Type
   688 ;;  number          1    0[COMRAM] unsigned char 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   699 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   701 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   702 ;;Total ram usage:        1 bytes
   703 ;; Hardware stack levels used: 1
   704 ;; Hardware stack levels required when called: 1
   705 ;; This function calls:
   706 ;;		_LCD_E_TOG
   707 ;; This function is called by:
   708 ;;		_LCD_sendbyte
   709 ;;		_LCD_Init
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713                           	psect	text6
   714  01FF00                     __ptext6:
   715                           	callstack 0
   716  01FF00                     _LCD_sendnibble:
   717                           	callstack 28
   718                           
   719                           ;incstack = 0
   720                           ;LCD_sendnibble@number stored from wreg
   721  01FF00  6E23               	movwf	LCD_sendnibble@number^0,c
   722  01FF02                     
   723                           ;LCD.c: 34: void LCD_sendnibble(unsigned char number);LCD.c: 35: {;LCD.c: 38:     if (nu
      +                          mber & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
   724  01FF02  A023               	btfss	LCD_sendnibble@number^0,0,c
   725  01FF04  EF86  F0FF         	goto	u11
   726  01FF08  EF88  F0FF         	goto	u10
   727  01FF0C                     u11:
   728  01FF0C  EF8B  F0FF         	goto	l30
   729  01FF10                     u10:
   730  01FF10  867A               	bsf	122,3,c	;volatile
   731  01FF12  EF8C  F0FF         	goto	l862
   732  01FF16                     l30:
   733  01FF16  967A               	bcf	122,3,c	;volatile
   734  01FF18                     l862:
   735                           
   736                           ;LCD.c: 39:     if (number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
   737  01FF18  A223               	btfss	LCD_sendnibble@number^0,1,c
   738  01FF1A  EF91  F0FF         	goto	u21
   739  01FF1E  EF93  F0FF         	goto	u20
   740  01FF22                     u21:
   741  01FF22  EF96  F0FF         	goto	l32
   742  01FF26                     u20:
   743  01FF26  847A               	bsf	122,2,c	;volatile
   744  01FF28  EF97  F0FF         	goto	l866
   745  01FF2C                     l32:
   746  01FF2C  947A               	bcf	122,2,c	;volatile
   747  01FF2E                     l866:
   748                           
   749                           ;LCD.c: 40:     if (number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
   750  01FF2E  A423               	btfss	LCD_sendnibble@number^0,2,c
   751  01FF30  EF9C  F0FF         	goto	u31
   752  01FF34  EF9E  F0FF         	goto	u30
   753  01FF38                     u31:
   754  01FF38  EFA1  F0FF         	goto	l34
   755  01FF3C                     u30:
   756  01FF3C  867D               	bsf	125,3,c	;volatile
   757  01FF3E  EFA2  F0FF         	goto	l870
   758  01FF42                     l34:
   759  01FF42  967D               	bcf	125,3,c	;volatile
   760  01FF44                     l870:
   761                           
   762                           ;LCD.c: 41:     if (number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
   763  01FF44  A623               	btfss	LCD_sendnibble@number^0,3,c
   764  01FF46  EFA7  F0FF         	goto	u41
   765  01FF4A  EFA9  F0FF         	goto	u40
   766  01FF4E                     u41:
   767  01FF4E  EFAC  F0FF         	goto	l36
   768  01FF52                     u40:
   769  01FF52  827D               	bsf	125,1,c	;volatile
   770  01FF54  EFAD  F0FF         	goto	l874
   771  01FF58                     l36:
   772  01FF58  927D               	bcf	125,1,c	;volatile
   773  01FF5A                     l874:
   774                           
   775                           ;LCD.c: 43:     LCD_E_TOG();
   776  01FF5A  EC14  F0FF         	call	_LCD_E_TOG	;wreg free
   777  01FF5E                     
   778                           ;LCD.c: 44:     _delay((unsigned long)((5)*(64000000/4000000.0)));
   779  01FF5E  0E1A               	movlw	26
   780  01FF60                     u337:
   781  01FF60  2EE8               	decfsz	wreg,f,c
   782  01FF62  D7FE               	bra	u337
   783  01FF64  D000               	nop2	
   784  01FF66  0012               	return		;funcret
   785  01FF68                     __end_of_LCD_sendnibble:
   786                           	callstack 0
   787                           
   788 ;; *************** function _LCD_E_TOG *****************
   789 ;; Defined at:
   790 ;;		line 21 in file "LCD.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;		None
   793 ;; Auto vars:     Size  Location     Type
   794 ;;		None
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   808 ;;Total ram usage:        0 bytes
   809 ;; Hardware stack levels used: 1
   810 ;; This function calls:
   811 ;;		Nothing
   812 ;; This function is called by:
   813 ;;		_LCD_sendnibble
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           	psect	text7
   818  01FE28                     __ptext7:
   819                           	callstack 0
   820  01FE28                     _LCD_E_TOG:
   821                           	callstack 28
   822  01FE28                     
   823                           ;LCD.c: 25:     LATCbits.LATC2 = 1;
   824  01FE28  847B               	bsf	123,2,c	;volatile
   825  01FE2A                     
   826                           ;LCD.c: 26:  _delay((unsigned long)((2)*(64000000/4000000.0)));
   827  01FE2A  0E0A               	movlw	10
   828  01FE2C                     u347:
   829  01FE2C  2EE8               	decfsz	wreg,f,c
   830  01FE2E  D7FE               	bra	u347
   831  01FE30  D000               	nop2	
   832  01FE32                     
   833                           ;LCD.c: 28:     LATCbits.LATC2 = 0;
   834  01FE32  947B               	bcf	123,2,c	;volatile
   835  01FE34  0012               	return		;funcret
   836  01FE36                     __end_of_LCD_E_TOG:
   837                           	callstack 0
   838  0000                     
   839                           	psect	rparam
   840  0000                     
   841                           	psect	idloc
   842                           
   843                           ;Config register IDLOC0 @ 0x200000
   844                           ;	unspecified, using default values
   845  200000                     	org	2097152
   846  200000  0FFF               	dw	4095
   847                           
   848                           ;Config register IDLOC1 @ 0x200002
   849                           ;	unspecified, using default values
   850  200002                     	org	2097154
   851  200002  0FFF               	dw	4095
   852                           
   853                           ;Config register IDLOC2 @ 0x200004
   854                           ;	unspecified, using default values
   855  200004                     	org	2097156
   856  200004  0FFF               	dw	4095
   857                           
   858                           ;Config register IDLOC3 @ 0x200006
   859                           ;	unspecified, using default values
   860  200006                     	org	2097158
   861  200006  0FFF               	dw	4095
   862                           
   863                           ;Config register IDLOC4 @ 0x200008
   864                           ;	unspecified, using default values
   865  200008                     	org	2097160
   866  200008  0FFF               	dw	4095
   867                           
   868                           ;Config register IDLOC5 @ 0x20000A
   869                           ;	unspecified, using default values
   870  20000A                     	org	2097162
   871  20000A  0FFF               	dw	4095
   872                           
   873                           ;Config register IDLOC6 @ 0x20000C
   874                           ;	unspecified, using default values
   875  20000C                     	org	2097164
   876  20000C  0FFF               	dw	4095
   877                           
   878                           ;Config register IDLOC7 @ 0x20000E
   879                           ;	unspecified, using default values
   880  20000E                     	org	2097166
   881  20000E  0FFF               	dw	4095
   882                           
   883                           	psect	config
   884                           
   885                           ;Config register CONFIG1L @ 0x300000
   886                           ;	External Oscillator mode Selection bits
   887                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
   888                           ;	Power-up default value for COSC bits
   889                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
   890  300000                     	org	3145728
   891  300000  AA                 	db	170
   892                           
   893                           ;Config register CONFIG1H @ 0x300001
   894                           ;	unspecified, using default values
   895                           ;	Clock Out Enable bit
   896                           ;	CLKOUTEN = 0x1, unprogrammed default
   897                           ;	Clock Switch Enable bit
   898                           ;	CSWEN = 0x1, unprogrammed default
   899                           ;	Fail-Safe Clock Monitor Enable bit
   900                           ;	FCMEN = 0x1, unprogrammed default
   901  300001                     	org	3145729
   902  300001  FF                 	db	255
   903                           
   904                           ;Config register CONFIG2L @ 0x300002
   905                           ;	unspecified, using default values
   906                           ;	Master Clear Enable bit
   907                           ;	MCLRE = 0x1, unprogrammed default
   908                           ;	Power-up Timer Enable bit
   909                           ;	PWRTE = 0x1, unprogrammed default
   910                           ;	Low-power BOR enable bit
   911                           ;	LPBOREN = 0x1, unprogrammed default
   912                           ;	Brown-out Reset Enable bits
   913                           ;	BOREN = 0x3, unprogrammed default
   914  300002                     	org	3145730
   915  300002  FF                 	db	255
   916                           
   917                           ;Config register CONFIG2H @ 0x300003
   918                           ;	unspecified, using default values
   919                           ;	Brown Out Reset Voltage selection bits
   920                           ;	BORV = 0x3, unprogrammed default
   921                           ;	ZCD Disable bit
   922                           ;	ZCD = 0x1, unprogrammed default
   923                           ;	PPSLOCK bit One-Way Set Enable bit
   924                           ;	PPS1WAY = 0x1, unprogrammed default
   925                           ;	Stack Full/Underflow Reset Enable bit
   926                           ;	STVREN = 0x1, unprogrammed default
   927                           ;	Debugger Enable bit
   928                           ;	DEBUG = 0x1, unprogrammed default
   929                           ;	Extended Instruction Set Enable bit
   930                           ;	XINST = 0x1, unprogrammed default
   931  300003                     	org	3145731
   932  300003  FF                 	db	255
   933                           
   934                           ;Config register CONFIG3L @ 0x300004
   935                           ;	WDT Period Select bits
   936                           ;	WDTCPS = 0x1F, unprogrammed default
   937                           ;	WDT operating mode
   938                           ;	WDTE = OFF, WDT Disabled
   939  300004                     	org	3145732
   940  300004  9F                 	db	159
   941                           
   942                           ;Config register CONFIG3H @ 0x300005
   943                           ;	unspecified, using default values
   944                           ;	WDT Window Select bits
   945                           ;	WDTCWS = 0x7, unprogrammed default
   946                           ;	WDT input clock selector
   947                           ;	WDTCCS = 0x7, unprogrammed default
   948  300005                     	org	3145733
   949  300005  FF                 	db	255
   950                           
   951                           ;Config register CONFIG4L @ 0x300006
   952                           ;	unspecified, using default values
   953                           ;	Write Protection Block 0
   954                           ;	WRT0 = 0x1, unprogrammed default
   955                           ;	Write Protection Block 1
   956                           ;	WRT1 = 0x1, unprogrammed default
   957                           ;	Write Protection Block 2
   958                           ;	WRT2 = 0x1, unprogrammed default
   959                           ;	Write Protection Block 3
   960                           ;	WRT3 = 0x1, unprogrammed default
   961                           ;	Write Protection Block 3
   962                           ;	WRT4 = 0x1, unprogrammed default
   963                           ;	Write Protection Block 3
   964                           ;	WRT5 = 0x1, unprogrammed default
   965                           ;	Write Protection Block 3
   966                           ;	WRT6 = 0x1, unprogrammed default
   967                           ;	Write Protection Block 3
   968                           ;	WRT7 = 0x1, unprogrammed default
   969  300006                     	org	3145734
   970  300006  FF                 	db	255
   971                           
   972                           ;Config register CONFIG4H @ 0x300007
   973                           ;	unspecified, using default values
   974                           ;	Configuration Register Write Protection bit
   975                           ;	WRTC = 0x1, unprogrammed default
   976                           ;	Boot Block Write Protection bit
   977                           ;	WRTB = 0x1, unprogrammed default
   978                           ;	Data EEPROM Write Protection bit
   979                           ;	WRTD = 0x1, unprogrammed default
   980                           ;	Scanner Enable bit
   981                           ;	SCANE = 0x1, unprogrammed default
   982                           ;	Low Voltage Programming Enable bit
   983                           ;	LVP = 0x1, unprogrammed default
   984  300007                     	org	3145735
   985  300007  FF                 	db	255
   986                           
   987                           ;Config register CONFIG5L @ 0x300008
   988                           ;	unspecified, using default values
   989                           ;	UserNVM Program Memory Code Protection bit
   990                           ;	CP = 0x1, unprogrammed default
   991                           ;	DataNVM Memory Code Protection bit
   992                           ;	CPD = 0x1, unprogrammed default
   993  300008                     	org	3145736
   994  300008  FF                 	db	255
   995                           
   996                           ;Config register CONFIG5H @ 0x300009
   997                           ;	unspecified, using default values
   998  300009                     	org	3145737
   999  300009  FF                 	db	255
  1000                           
  1001                           ;Config register CONFIG6L @ 0x30000A
  1002                           ;	unspecified, using default values
  1003                           ;	Table Read Protection Block 0
  1004                           ;	EBTR0 = 0x1, unprogrammed default
  1005                           ;	Table Read Protection Block 1
  1006                           ;	EBTR1 = 0x1, unprogrammed default
  1007                           ;	Table Read Protection Block 2
  1008                           ;	EBTR2 = 0x1, unprogrammed default
  1009                           ;	Table Read Protection Block 3
  1010                           ;	EBTR3 = 0x1, unprogrammed default
  1011                           ;	Table Read Protection Block 4
  1012                           ;	EBTR4 = 0x1, unprogrammed default
  1013                           ;	Table Read Protection Block 5
  1014                           ;	EBTR5 = 0x1, unprogrammed default
  1015                           ;	Table Read Protection Block 6
  1016                           ;	EBTR6 = 0x1, unprogrammed default
  1017                           ;	Table Read Protection Block 7
  1018                           ;	EBTR7 = 0x1, unprogrammed default
  1019  30000A                     	org	3145738
  1020  30000A  FF                 	db	255
  1021                           
  1022                           ;Config register CONFIG6H @ 0x30000B
  1023                           ;	unspecified, using default values
  1024                           ;	Boot Block Table Read Protection bit
  1025                           ;	EBTRB = 0x1, unprogrammed default
  1026  30000B                     	org	3145739
  1027  30000B  FF                 	db	255
  1028                           tosu	equ	0xFFF
  1029                           tosh	equ	0xFFE
  1030                           tosl	equ	0xFFD
  1031                           stkptr	equ	0xFFC
  1032                           pclatu	equ	0xFFB
  1033                           pclath	equ	0xFFA
  1034                           pcl	equ	0xFF9
  1035                           tblptru	equ	0xFF8
  1036                           tblptrh	equ	0xFF7
  1037                           tblptrl	equ	0xFF6
  1038                           tablat	equ	0xFF5
  1039                           prodh	equ	0xFF4
  1040                           prodl	equ	0xFF3
  1041                           indf0	equ	0xFEF
  1042                           postinc0	equ	0xFEE
  1043                           postdec0	equ	0xFED
  1044                           preinc0	equ	0xFEC
  1045                           plusw0	equ	0xFEB
  1046                           fsr0h	equ	0xFEA
  1047                           fsr0l	equ	0xFE9
  1048                           wreg	equ	0xFE8
  1049                           indf1	equ	0xFE7
  1050                           postinc1	equ	0xFE6
  1051                           postdec1	equ	0xFE5
  1052                           preinc1	equ	0xFE4
  1053                           plusw1	equ	0xFE3
  1054                           fsr1h	equ	0xFE2
  1055                           fsr1l	equ	0xFE1
  1056                           bsr	equ	0xFE0
  1057                           indf2	equ	0xFDF
  1058                           postinc2	equ	0xFDE
  1059                           postdec2	equ	0xFDD
  1060                           preinc2	equ	0xFDC
  1061                           plusw2	equ	0xFDB
  1062                           fsr2h	equ	0xFDA
  1063                           fsr2l	equ	0xFD9
  1064                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         94
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7      41
    BANK0           160      0      60
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LCD_Init
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1893
                                              6 COMRAM     1     1      0
                           _LCD_Init
                       _LCD_sendbyte
                     _getCharSerial4
                         _initUSART4
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (1) _sendCharSerial4                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getCharSerial4                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     969
                                              4 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (1) _LCD_sendbyte                                         3     2      1     909
                                              1 COMRAM     3     2      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendnibble                                       1     1      0      60
                                              0 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (3) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_sendbyte
   _getCharSerial4
   _initUSART4
   _sendCharSerial4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      3C       5       37.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      7      29       1       43.2%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      65       8        0.0%
DATA                 0      0      65       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Nov 17 11:10:57 2021

                       l30 FF16                         l32 FF2C                         l41 FEE8  
                       l34 FF42                         l27 FE34                         l43 FEFE  
                       l36 FF58                         l38 FF66                         l46 FFFE  
                       u10 FF10                         u11 FF0C                         u20 FF26  
                       u21 FF22                         u30 FF3C                         u31 FF38  
                       u40 FF52                         u41 FF4E                         u60 FE46  
                       u61 FE42                         u70 FE5C                         u71 FE58  
                      l132 FE7E                        l141 FE4C                        l135 FE36  
                      l144 FE60                        l138 FE48                        l920 FE7A  
                      l912 FE62                        l922 FE7C                        l914 FE6C  
                      l930 FE4C                        l852 FE28                        l860 FF10  
                      l924 FE36                        l916 FE6E                        l932 FE5C  
                      l854 FE2A                        l870 FF44                        l862 FF18  
                      l926 FE46                        l918 FE78                        l856 FE32  
                      l872 FF52                        l864 FF26                        l874 FF5A  
                      l866 FF2E                        l858 FF02                        l876 FF5E  
                      l868 FF3C                        u307 FFD6                        u317 FFEC  
                      u190 FEE2                        u327 FEF8                        u191 FEDE  
                      u337 FF60                        u347 FE2C                        u267 FF8A  
                      u277 FFA0                        u287 FFB2                        u297 FFC4  
                      wreg 000FE8                       l1100 FEA2                       l1030 FEEA  
                     l1102 FEA6                       l1032 FEF6                       l1040 FF9E  
                     l1104 FEB8                       l1026 FECC                       l1050 FFCA  
                     l1042 FFA6                       l1034 FF68                       l1028 FEE2  
                     l1052 FFD4                       l1044 FFB0                       l1036 FF80  
                     l1054 FFDC                       l1046 FFB8                       l1038 FF98  
                     l1056 FFE6                       l1048 FFC2                       l1058 FFF4  
                     l1098 FE9E               _BAUD4CONbits 000EE9         __size_of_LCD_E_TOG 000E  
                     _data 0015                       _main FE9E                       start 0000  
             ___param_bank 000000           __end_of_LCD_Init 0000                      ?_main 0023  
  __end_of_sendCharSerial4 FE62    __size_of_getCharSerial4 0014              ?_LCD_sendbyte 0024  
                    status 000FD8    __size_of_LCD_sendnibble 0068            __initialization FE80  
             __end_of_main FECA          __end_of_LCD_E_TOG FE36                     ??_main 0029  
            __activetblptr 000000             ??_LCD_sendbyte 0025                     _RC0PPS 000E62  
                   _RC4REG 000EE3                     _RX4PPS 000E15                     _TX4REG 000EE4  
                   clear_0 FE86                     clear_1 FE92                     isa$std 000001  
         ?_sendCharSerial4 0023                 __accesstop 0060    __end_of__initialization FE98  
                ?_LCD_Init 0023              ___rparam_used 000001             __pcstackCOMRAM 0023  
           _getCharSerial4 FE36                 __pbssBANK0 0060                 ??_LCD_Init 0027  
           _LCD_sendnibble FF00       __end_of_LCD_sendbyte FF00                    _SP4BRGH 000EE6  
                  _SP4BRGL 000EE5     __end_of_getCharSerial4 FE4A     __end_of_LCD_sendnibble FF68  
               _initUSART4 FE62                    __Hparam 0000                    __Lparam 0000  
                  __pcinit FE80                    __ramtop 0E00                    __ptext0 FE9E  
                  __ptext1 FE4A                    __ptext2 FE62                    __ptext3 FE36  
                  __ptext4 FF68                    __ptext5 FECA                    __ptext6 FF00  
                  __ptext7 FE28                  _LCD_E_TOG FE28                    _lowbits 001B  
          ?_getCharSerial4 0023              _RxBufWriteCnt 0022       end_of_initialization FE98  
          ?_LCD_sendnibble 0023       LCD_sendbyte@highbits 0025                    postinc0 000FEE  
               ?_LCD_E_TOG 0023                  _TRISBbits 000F82                  _TRISCbits 000F83  
                _TRISEbits 000F85               _EUSART4RXbuf 0001               _EUSART4TXbuf 0060  
              ?_initUSART4 0023  sendCharSerial4@charToSend 0023          __size_of_LCD_Init 0098  
    __size_of_LCD_sendbyte 0036       LCD_sendnibble@number 0023        start_initialization FE80  
            _TxBufWriteCnt 0020               _LCD_sendbyte FECA   __size_of_sendCharSerial4 0018  
              __pbssCOMRAM 0001                ??_LCD_E_TOG 0023        __size_of_initUSART4 001E  
                _frac_part 0017           ??_getCharSerial4 0023           ??_LCD_sendnibble 0023  
             _RxBufReadCnt 0021           LCD_sendbyte@Byte 0026                   _LCD_Init FF68  
         LCD_sendbyte@type 0024                   _LATBbits 000F7A                   _LATCbits 000F7B  
                 _LATEbits 000F7D                   _PIE4bits 000E2D                   _PIR4bits 000E37  
        ??_sendCharSerial4 0023               _TxBufReadCnt 001F               ??_initUSART4 0023  
                 __Hrparam 0000                   __Lrparam 0000         __end_of_initUSART4 FE80  
                 _highbits 001D              __size_of_main 002C                   _int_part 0019  
                 isa$xinst 000000                 _RC4STAbits 000EE7                 _TX4STAbits 000EE8  
          _sendCharSerial4 FE4A  
