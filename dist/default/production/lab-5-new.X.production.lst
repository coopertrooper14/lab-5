

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Nov 17 11:46:33 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 05/05/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F67K40 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     _ANSELAbits	set	3730
    78  0000                     _PIE4bits	set	3629
    79  0000                     _TX4REG	set	3812
    80  0000                     _RC4REG	set	3811
    81  0000                     _PIR4bits	set	3639
    82  0000                     _RC4STAbits	set	3815
    83  0000                     _SP4BRGH	set	3814
    84  0000                     _SP4BRGL	set	3813
    85  0000                     _TX4STAbits	set	3816
    86  0000                     _BAUD4CONbits	set	3817
    87  0000                     _RX4PPS	set	3605
    88  0000                     _RC0PPS	set	3682
    89  0000                     _ADPCH	set	3935
    90  0000                     _ADREFbits	set	3928
    91  0000                     _ADRESH	set	3940
    92  0000                     _ADCON0bits	set	3936
    93  0000                     _TRISAbits	set	3969
    94  0000                     _TRISEbits	set	3973
    95  0000                     _TRISBbits	set	3970
    96  0000                     _TRISCbits	set	3971
    97  0000                     _LATEbits	set	3965
    98  0000                     _LATBbits	set	3962
    99  0000                     _LATCbits	set	3963
   100                           
   101                           	psect	smallconst
   102  000E00                     __psmallconst:
   103                           	callstack 0
   104  000E00  00                 	db	0
   105  000E01                     STR_1:
   106  000E01  25                 	db	37
   107  000E02  64                 	db	100	;'d'
   108  000E03  2E                 	db	46
   109  000E04  25                 	db	37
   110  000E05  30                 	db	48	;'0'
   111  000E06  32                 	db	50	;'2'
   112  000E07  64                 	db	100	;'d'
   113  000E08  00                 	db	0
   114  000E09  00                 	db	0	; dummy byte at the end
   115  0000                     
   116                           ; #config settings
   117                           
   118                           	psect	cinit
   119  002052                     __pcinit:
   120                           	callstack 0
   121  002052                     start_initialization:
   122                           	callstack 0
   123  002052                     __initialization:
   124                           	callstack 0
   125                           
   126                           ; Clear objects allocated to BANK0 (134 bytes)
   127  002052  EE00  F060         	lfsr	0,__pbssBANK0
   128  002056  0E86               	movlw	134
   129  002058                     clear_0:
   130  002058  6AEE               	clrf	postinc0,c
   131  00205A  06E8               	decf	wreg,f,c
   132  00205C  E1FD               	bnz	clear_0
   133  00205E                     end_of_initialization:
   134                           	callstack 0
   135  00205E                     __end_of__initialization:
   136                           	callstack 0
   137  00205E  0100               	movlb	0
   138  002060  EF89  F00C         	goto	_main	;jump to C main() function
   139                           
   140                           	psect	bssBANK0
   141  000060                     __pbssBANK0:
   142                           	callstack 0
   143  000060                     _EUSART4TXbuf:
   144                           	callstack 0
   145  000060                     	ds	60
   146  00009C                     _EUSART4RXbuf:
   147                           	callstack 0
   148  00009C                     	ds	20
   149  0000B0                     _nout:
   150                           	callstack 0
   151  0000B0                     	ds	2
   152  0000B2                     _width:
   153                           	callstack 0
   154  0000B2                     	ds	2
   155  0000B4                     _prec:
   156                           	callstack 0
   157  0000B4                     	ds	2
   158  0000B6                     _flags:
   159                           	callstack 0
   160  0000B6                     	ds	2
   161  0000B8                     _data:
   162                           	callstack 0
   163  0000B8                     	ds	2
   164  0000BA                     _frac_part:
   165                           	callstack 0
   166  0000BA                     	ds	2
   167  0000BC                     _int_part:
   168                           	callstack 0
   169  0000BC                     	ds	2
   170  0000BE                     _lowbits:
   171                           	callstack 0
   172  0000BE                     	ds	2
   173  0000C0                     _highbits:
   174                           	callstack 0
   175  0000C0                     	ds	2
   176  0000C2                     _TxBufReadCnt:
   177                           	callstack 0
   178  0000C2                     	ds	1
   179  0000C3                     _TxBufWriteCnt:
   180                           	callstack 0
   181  0000C3                     	ds	1
   182  0000C4                     _RxBufReadCnt:
   183                           	callstack 0
   184  0000C4                     	ds	1
   185  0000C5                     _RxBufWriteCnt:
   186                           	callstack 0
   187  0000C5                     	ds	1
   188  0000C6                     _dbuf:
   189                           	callstack 0
   190  0000C6                     	ds	32
   191                           
   192                           	psect	cstackBANK0
   193  0000E6                     __pcstackBANK0:
   194                           	callstack 0
   195  0000E6                     ?_sprintf:
   196                           	callstack 0
   197  0000E6                     sprintf@s:
   198                           	callstack 0
   199                           
   200                           ; 2 bytes @ 0x0
   201  0000E6                     	ds	2
   202  0000E8                     sprintf@fmt:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0x2
   206  0000E8                     	ds	6
   207  0000EE                     sprintf@ap:
   208                           	callstack 0
   209                           
   210                           ; 2 bytes @ 0x8
   211  0000EE                     	ds	2
   212  0000F0                     sprintf@f:
   213                           	callstack 0
   214                           
   215                           ; 6 bytes @ 0xA
   216  0000F0                     	ds	6
   217  0000F6                     main@buf:
   218                           	callstack 0
   219                           
   220                           ; 10 bytes @ 0x10
   221  0000F6                     	ds	10
   222                           
   223                           	psect	cstackCOMRAM
   224  000001                     __pcstackCOMRAM:
   225                           	callstack 0
   226  000001                     ?_ADC_getval:
   227                           	callstack 0
   228  000001                     ?_strlen:
   229                           	callstack 0
   230  000001                     ?_isdigit:
   231                           	callstack 0
   232  000001                     ?_isspace:
   233                           	callstack 0
   234  000001                     ?___aodiv:
   235                           	callstack 0
   236  000001                     ?___aomod:
   237                           	callstack 0
   238  000001                     LCD_sendnibble@number:
   239                           	callstack 0
   240  000001                     sendCharSerial4@charToSend:
   241                           	callstack 0
   242  000001                     isdigit@c:
   243                           	callstack 0
   244  000001                     isspace@c:
   245                           	callstack 0
   246  000001                     fputc@c:
   247                           	callstack 0
   248  000001                     strlen@s:
   249                           	callstack 0
   250  000001                     ___aodiv@dividend:
   251                           	callstack 0
   252  000001                     ___aomod@dividend:
   253                           	callstack 0
   254                           
   255                           ; 8 bytes @ 0x0
   256  000001                     	ds	1
   257  000002                     LCD_sendbyte@type:
   258                           	callstack 0
   259  000002                     sendStringSerial4@string:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x1
   263  000002                     	ds	1
   264  000003                     ??_isdigit:
   265  000003                     ??_isspace:
   266  000003                     LCD_sendbyte@highbits:
   267                           	callstack 0
   268  000003                     ADC_getval@tmpval:
   269                           	callstack 0
   270  000003                     fputc@fp:
   271                           	callstack 0
   272  000003                     strlen@a:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0x2
   276  000003                     	ds	1
   277  000004                     LCD_sendbyte@Byte:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x3
   281  000004                     	ds	1
   282  000005                     ??_fputc:
   283  000005                     ??_LCD_Init:
   284  000005                     ?___wmul:
   285                           	callstack 0
   286  000005                     LCD_sendstring@string:
   287                           	callstack 0
   288  000005                     ___wmul@multiplier:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x4
   292  000005                     	ds	2
   293  000007                     _isspace$1213:
   294                           	callstack 0
   295  000007                     ___wmul@multiplicand:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x6
   299  000007                     	ds	2
   300  000009                     ___wmul@product:
   301                           	callstack 0
   302  000009                     ___aodiv@divisor:
   303                           	callstack 0
   304  000009                     ___aomod@divisor:
   305                           	callstack 0
   306                           
   307                           ; 8 bytes @ 0x8
   308  000009                     	ds	1
   309  00000A                     fputs@s:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x9
   313  00000A                     	ds	1
   314  00000B                     ?_atoi:
   315                           	callstack 0
   316  00000B                     ?___lwdiv:
   317                           	callstack 0
   318  00000B                     ___lwdiv@dividend:
   319                           	callstack 0
   320  00000B                     atoi@s:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0xA
   324  00000B                     	ds	1
   325  00000C                     fputs@fp:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0xB
   329  00000C                     	ds	1
   330  00000D                     ??_atoi:
   331  00000D                     ___lwdiv@divisor:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0xC
   335  00000D                     	ds	1
   336  00000E                     fputs@c:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0xD
   340  00000E                     	ds	1
   341  00000F                     ___lwdiv@quotient:
   342                           	callstack 0
   343  00000F                     fputs@i:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0xE
   347  00000F                     	ds	2
   348  000011                     ?_pad:
   349                           	callstack 0
   350  000011                     ___aodiv@counter:
   351                           	callstack 0
   352  000011                     ___aomod@counter:
   353                           	callstack 0
   354  000011                     ___lwdiv@counter:
   355                           	callstack 0
   356  000011                     pad@fp:
   357                           	callstack 0
   358  000011                     atoi@neg:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x10
   362  000011                     	ds	1
   363  000012                     ___aodiv@sign:
   364                           	callstack 0
   365  000012                     ___aomod@sign:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x11
   369  000012                     	ds	1
   370  000013                     ?_abs:
   371                           	callstack 0
   372  000013                     pad@buf:
   373                           	callstack 0
   374  000013                     abs@a:
   375                           	callstack 0
   376  000013                     _atoi$1195:
   377                           	callstack 0
   378  000013                     ___aodiv@quotient:
   379                           	callstack 0
   380                           
   381                           ; 8 bytes @ 0x12
   382  000013                     	ds	2
   383  000015                     ??_abs:
   384  000015                     pad@p:
   385                           	callstack 0
   386  000015                     _atoi$1197:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x14
   390  000015                     	ds	2
   391  000017                     ??_pad:
   392  000017                     _atoi$1196:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0x16
   396  000017                     	ds	1
   397  000018                     pad@i:
   398                           	callstack 0
   399  000018                     atoi@n:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x17
   403  000018                     	ds	2
   404  00001A                     pad@w:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x19
   408  00001A                     	ds	2
   409  00001C                     ?_dtoa:
   410                           	callstack 0
   411  00001C                     dtoa@fp:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x1B
   415  00001C                     	ds	2
   416  00001E                     dtoa@d:
   417                           	callstack 0
   418                           
   419                           ; 8 bytes @ 0x1D
   420  00001E                     	ds	8
   421  000026                     ??_dtoa:
   422                           
   423                           ; 1 bytes @ 0x25
   424  000026                     	ds	8
   425  00002E                     _dtoa$1160:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x2D
   429  00002E                     	ds	2
   430  000030                     dtoa@p:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x2F
   434  000030                     	ds	2
   435  000032                     dtoa@w:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x31
   439  000032                     	ds	2
   440  000034                     dtoa@s:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x33
   444  000034                     	ds	2
   445  000036                     dtoa@n:
   446                           	callstack 0
   447                           
   448                           ; 8 bytes @ 0x35
   449  000036                     	ds	8
   450  00003E                     dtoa@i:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x3D
   454  00003E                     	ds	2
   455  000040                     ?_vfpfcnvrt:
   456                           	callstack 0
   457  000040                     vfpfcnvrt@fp:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x3F
   461  000040                     	ds	2
   462  000042                     vfpfcnvrt@fmt:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x41
   466  000042                     	ds	2
   467  000044                     vfpfcnvrt@ap:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x43
   471  000044                     	ds	2
   472  000046                     ??_vfpfcnvrt:
   473                           
   474                           ; 1 bytes @ 0x45
   475  000046                     	ds	4
   476  00004A                     vfpfcnvrt@ll:
   477                           	callstack 0
   478                           
   479                           ; 8 bytes @ 0x49
   480  00004A                     	ds	8
   481  000052                     vfpfcnvrt@done:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x51
   485  000052                     	ds	2
   486  000054                     _vfpfcnvrt$1175:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x53
   490  000054                     	ds	2
   491  000056                     ?_vfprintf:
   492                           	callstack 0
   493  000056                     vfprintf@fp:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x55
   497  000056                     	ds	2
   498  000058                     vfprintf@fmt:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x57
   502  000058                     	ds	2
   503  00005A                     vfprintf@ap:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x59
   507  00005A                     	ds	2
   508  00005C                     vfprintf@cfmt:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x5B
   512  00005C                     	ds	2
   513  00005E                     ??_main:
   514                           
   515                           ; 1 bytes @ 0x5D
   516  00005E                     	ds	2
   517                           
   518 ;;
   519 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   520 ;;
   521 ;; *************** function _main *****************
   522 ;; Defined at:
   523 ;;		line 20 in file "main.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;  buf            10   16[BANK0 ] unsigned char [10]
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   538 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   539 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   540 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   541 ;;Total ram usage:       12 bytes
   542 ;; Hardware stack levels required when called: 8
   543 ;; This function calls:
   544 ;;		_ADC_getval
   545 ;;		_ADC_init
   546 ;;		_LCD_Init
   547 ;;		_LCD_sendbyte
   548 ;;		_LCD_sendstring
   549 ;;		___lwdiv
   550 ;;		___wmul
   551 ;;		_initUSART4
   552 ;;		_sendStringSerial4
   553 ;;		_sprintf
   554 ;; This function is called by:
   555 ;;		Startup code after reset
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           	psect	text0
   560  001912                     __ptext0:
   561                           	callstack 0
   562  001912                     _main:
   563                           	callstack 23
   564  001912                     
   565                           ;main.c: 22:     LCD_Init();
   566  001912  ECD1  F00D         	call	_LCD_Init	;wreg free
   567  001916                     
   568                           ;main.c: 23:     initUSART4();
   569  001916  EC01  F010         	call	_initUSART4	;wreg free
   570  00191A                     
   571                           ;main.c: 24:     ADC_init();
   572  00191A  EC10  F010         	call	_ADC_init	;wreg free
   573  00191E                     l99:
   574                           
   575                           ;main.c: 38:         int_part=ADC_getval()/77;
   576  00191E  ECD6  F00F         	call	_ADC_getval	;wreg free
   577  001922  C001  F00B         	movff	?_ADC_getval,___lwdiv@dividend
   578  001926  C002  F00C         	movff	?_ADC_getval+1,___lwdiv@dividend+1
   579  00192A  0E00               	movlw	0
   580  00192C  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
   581  00192E  0E4D               	movlw	77
   582  001930  6E0D               	movwf	___lwdiv@divisor^0,c
   583  001932  EC1D  F00E         	call	___lwdiv	;wreg free
   584  001936  C00B  F0BC         	movff	?___lwdiv,_int_part
   585  00193A  C00C  F0BD         	movff	?___lwdiv+1,_int_part+1
   586  00193E                     
   587                           ;main.c: 39:         frac_part=(ADC_getval()*100)/77 - int_part*100;
   588  00193E  ECD6  F00F         	call	_ADC_getval	;wreg free
   589  001942  C001  F005         	movff	?_ADC_getval,___wmul@multiplier
   590  001946  C002  F006         	movff	?_ADC_getval+1,___wmul@multiplier+1
   591  00194A  0E00               	movlw	0
   592  00194C  6E08               	movwf	(___wmul@multiplicand+1)^0,c
   593  00194E  0E64               	movlw	100
   594  001950  6E07               	movwf	___wmul@multiplicand^0,c
   595  001952  ECEE  F00F         	call	___wmul	;wreg free
   596  001956  C005  F00B         	movff	?___wmul,___lwdiv@dividend
   597  00195A  C006  F00C         	movff	?___wmul+1,___lwdiv@dividend+1
   598  00195E  0E00               	movlw	0
   599  001960  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
   600  001962  0E4D               	movlw	77
   601  001964  6E0D               	movwf	___lwdiv@divisor^0,c
   602  001966  EC1D  F00E         	call	___lwdiv	;wreg free
   603  00196A  C00B  F05E         	movff	?___lwdiv,??_main
   604  00196E  C00C  F05F         	movff	?___lwdiv+1,??_main+1
   605  001972  C0BC  F005         	movff	_int_part,___wmul@multiplier
   606  001976  C0BD  F006         	movff	_int_part+1,___wmul@multiplier+1
   607  00197A  0EFF               	movlw	255
   608  00197C  6E08               	movwf	(___wmul@multiplicand+1)^0,c
   609  00197E  0E9C               	movlw	156
   610  001980  6E07               	movwf	___wmul@multiplicand^0,c
   611  001982  ECEE  F00F         	call	___wmul	;wreg free
   612  001986  5005               	movf	?___wmul^0,w,c
   613  001988  245E               	addwf	??_main^0,w,c
   614  00198A  0100               	movlb	0	; () banked
   615  00198C  6FBA               	movwf	_frac_part& (0+255),b
   616  00198E  5006               	movf	(?___wmul+1)^0,w,c
   617  001990  205F               	addwfc	(??_main+1)^0,w,c
   618  001992  6FBB               	movwf	(_frac_part+1)& (0+255),b
   619  001994                     
   620                           ; BSR set to: 0
   621                           ;main.c: 40:         sprintf(buf,"%d.%02d",int_part,frac_part);
   622  001994  0EF6               	movlw	low main@buf
   623  001996  6FE6               	movwf	sprintf@s& (0+255),b
   624  001998  0E00               	movlw	high main@buf
   625  00199A  6FE7               	movwf	(sprintf@s+1)& (0+255),b
   626  00199C  0E01               	movlw	low STR_1
   627  00199E  6FE8               	movwf	sprintf@fmt& (0+255),b
   628  0019A0  0E0E               	movlw	high STR_1
   629  0019A2  6FE9               	movwf	(sprintf@fmt+1)& (0+255),b
   630  0019A4  C0BC  F0EA         	movff	_int_part,?_sprintf+4
   631  0019A8  C0BD  F0EB         	movff	_int_part+1,?_sprintf+5
   632  0019AC  C0BA  F0EC         	movff	_frac_part,?_sprintf+6
   633  0019B0  C0BB  F0ED         	movff	_frac_part+1,?_sprintf+7
   634  0019B4  ECBE  F00E         	call	_sprintf	;wreg free
   635  0019B8                     
   636                           ;main.c: 41:         LCD_sendstring(buf);
   637  0019B8  0EF6               	movlw	low main@buf
   638  0019BA  6E05               	movwf	LCD_sendstring@string^0,c
   639  0019BC  0E00               	movlw	high main@buf
   640  0019BE  6E06               	movwf	(LCD_sendstring@string+1)^0,c
   641  0019C0  ECA4  F00F         	call	_LCD_sendstring	;wreg free
   642  0019C4                     
   643                           ;main.c: 42:         sendStringSerial4(buf);
   644  0019C4  0EF6               	movlw	low main@buf
   645  0019C6  6E02               	movwf	sendStringSerial4@string^0,c
   646  0019C8  0E00               	movlw	high main@buf
   647  0019CA  6E03               	movwf	(sendStringSerial4@string+1)^0,c
   648  0019CC  ECBE  F00F         	call	_sendStringSerial4	;wreg free
   649  0019D0                     
   650                           ;main.c: 44:         _delay((unsigned long)((200)*(64000000/4000.0)));
   651  0019D0  0E11               	movlw	17
   652  0019D2  6E5F               	movwf	(??_main+1)^0,c
   653  0019D4  0E3C               	movlw	60
   654  0019D6  6E5E               	movwf	??_main^0,c
   655  0019D8  0ECB               	movlw	203
   656  0019DA                     u1687:
   657  0019DA  2EE8               	decfsz	wreg,f,c
   658  0019DC  D7FE               	bra	u1687
   659  0019DE  2E5E               	decfsz	??_main^0,f,c
   660  0019E0  D7FC               	bra	u1687
   661  0019E2  2E5F               	decfsz	(??_main+1)^0,f,c
   662  0019E4  D7FA               	bra	u1687
   663  0019E6  F000               	nop	
   664  0019E8                     
   665                           ;main.c: 46:         LCD_sendbyte(0b00000001, 0);
   666  0019E8  0E00               	movlw	0
   667  0019EA  6E02               	movwf	LCD_sendbyte@type^0,c
   668  0019EC  0E01               	movlw	1
   669  0019EE  EC89  F00F         	call	_LCD_sendbyte
   670  0019F2                     
   671                           ;main.c: 48:         _delay((unsigned long)((200)*(64000000/4000.0)));
   672  0019F2  0E11               	movlw	17
   673  0019F4  6E5F               	movwf	(??_main+1)^0,c
   674  0019F6  0E3C               	movlw	60
   675  0019F8  6E5E               	movwf	??_main^0,c
   676  0019FA  0ECB               	movlw	203
   677  0019FC                     u1697:
   678  0019FC  2EE8               	decfsz	wreg,f,c
   679  0019FE  D7FE               	bra	u1697
   680  001A00  2E5E               	decfsz	??_main^0,f,c
   681  001A02  D7FC               	bra	u1697
   682  001A04  2E5F               	decfsz	(??_main+1)^0,f,c
   683  001A06  D7FA               	bra	u1697
   684  001A08  F000               	nop	
   685  001A0A  EF8F  F00C         	goto	l99
   686  001A0E  EF00  F000         	goto	start
   687  001A12                     __end_of_main:
   688                           	callstack 0
   689                           
   690 ;; *************** function _sprintf *****************
   691 ;; Defined at:
   692 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;  s               2    0[BANK0 ] PTR unsigned char 
   695 ;;		 -> main@buf(10), 
   696 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   697 ;;		 -> STR_1(8), 
   698 ;; Auto vars:     Size  Location     Type
   699 ;;  f               6   10[BANK0 ] struct _IO_FILE
   700 ;;  ap              2    8[BANK0 ] PTR void [1]
   701 ;;		 -> ?_sprintf(2), 
   702 ;;  ret             2    0        int 
   703 ;; Return value:  Size  Location     Type
   704 ;;                  2    0[BANK0 ] int 
   705 ;; Registers used:
   706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   712 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   713 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   715 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   716 ;;Total ram usage:       16 bytes
   717 ;; Hardware stack levels used: 1
   718 ;; Hardware stack levels required when called: 7
   719 ;; This function calls:
   720 ;;		_vfprintf
   721 ;; This function is called by:
   722 ;;		_main
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           	psect	text1
   727  001D7C                     __ptext1:
   728                           	callstack 0
   729  001D7C                     _sprintf:
   730                           	callstack 23
   731  001D7C  0EEA               	movlw	low (?_sprintf+4)
   732  001D7E  0100               	movlb	0	; () banked
   733  001D80  6FEE               	movwf	sprintf@ap& (0+255),b
   734  001D82  0E00               	movlw	high (?_sprintf+4)
   735  001D84  6FEF               	movwf	(sprintf@ap+1)& (0+255),b
   736  001D86  C0E6  F0F0         	movff	sprintf@s,sprintf@f
   737  001D8A  C0E7  F0F1         	movff	sprintf@s+1,sprintf@f+1
   738  001D8E                     
   739                           ; BSR set to: 0
   740  001D8E  0E00               	movlw	0
   741  001D90  6FF3               	movwf	(sprintf@f+3)& (0+255),b
   742  001D92  0E00               	movlw	0
   743  001D94  6FF2               	movwf	(sprintf@f+2)& (0+255),b
   744  001D96                     
   745                           ; BSR set to: 0
   746  001D96  0E00               	movlw	0
   747  001D98  6FF5               	movwf	(sprintf@f+5)& (0+255),b
   748  001D9A  0E00               	movlw	0
   749  001D9C  6FF4               	movwf	(sprintf@f+4)& (0+255),b
   750  001D9E                     
   751                           ; BSR set to: 0
   752  001D9E  0EF0               	movlw	low sprintf@f
   753  001DA0  6E56               	movwf	vfprintf@fp^0,c
   754  001DA2  0E00               	movlw	high sprintf@f
   755  001DA4  6E57               	movwf	(vfprintf@fp+1)^0,c
   756  001DA6  C0E8  F058         	movff	sprintf@fmt,vfprintf@fmt
   757  001DAA  C0E9  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
   758  001DAE  0EEE               	movlw	low sprintf@ap
   759  001DB0  6E5A               	movwf	vfprintf@ap^0,c
   760  001DB2  0E00               	movlw	high sprintf@ap
   761  001DB4  6E5B               	movwf	(vfprintf@ap+1)^0,c
   762  001DB6  EC8B  F00E         	call	_vfprintf	;wreg free
   763  001DBA  0100               	movlb	0	; () banked
   764  001DBC  51F2               	movf	(sprintf@f+2)& (0+255),w,b
   765  001DBE  25E6               	addwf	sprintf@s& (0+255),w,b
   766  001DC0  6ED9               	movwf	fsr2l,c
   767  001DC2  51F3               	movf	(sprintf@f+3)& (0+255),w,b
   768  001DC4  21E7               	addwfc	(sprintf@s+1)& (0+255),w,b
   769  001DC6  6EDA               	movwf	fsr2h,c
   770  001DC8  0E00               	movlw	0
   771  001DCA  6EDF               	movwf	indf2,c
   772  001DCC                     
   773                           ; BSR set to: 0
   774  001DCC  0012               	return		;funcret
   775  001DCE                     __end_of_sprintf:
   776                           	callstack 0
   777                           
   778 ;; *************** function _vfprintf *****************
   779 ;; Defined at:
   780 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
   783 ;;		 -> sprintf@f(6), 
   784 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
   785 ;;		 -> STR_1(8), 
   786 ;;  ap              2   89[COMRAM] PTR PTR void 
   787 ;;		 -> sprintf@ap(2), 
   788 ;; Auto vars:     Size  Location     Type
   789 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
   790 ;;		 -> STR_1(8), 
   791 ;; Return value:  Size  Location     Type
   792 ;;                  2   85[COMRAM] int 
   793 ;; Registers used:
   794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   800 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   801 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   803 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   804 ;;Total ram usage:        8 bytes
   805 ;; Hardware stack levels used: 1
   806 ;; Hardware stack levels required when called: 6
   807 ;; This function calls:
   808 ;;		_vfpfcnvrt
   809 ;; This function is called by:
   810 ;;		_sprintf
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text2
   815  001D16                     __ptext2:
   816                           	callstack 0
   817  001D16                     _vfprintf:
   818                           	callstack 23
   819  001D16                     
   820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   821  001D16  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
   822  001D1A  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   823  001D1E                     
   824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   825  001D1E  0E00               	movlw	0
   826  001D20  0100               	movlb	0	; () banked
   827  001D22  6FB1               	movwf	(_nout+1)& (0+255),b
   828  001D24  0E00               	movlw	0
   829  001D26  6FB0               	movwf	_nout& (0+255),b
   830                           
   831                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   832  001D28  EFA9  F00E         	goto	l2121
   833  001D2C                     l2119:
   834                           
   835                           ; BSR set to: 0
   836                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   837  001D2C  C056  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
   838  001D30  C057  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   839  001D34  0E5C               	movlw	low vfprintf@cfmt
   840  001D36  6E42               	movwf	vfpfcnvrt@fmt^0,c
   841  001D38  0E00               	movlw	high vfprintf@cfmt
   842  001D3A  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
   843  001D3C  C05A  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
   844  001D40  C05B  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   845  001D44  EC05  F007         	call	_vfpfcnvrt	;wreg free
   846  001D48  5040               	movf	?_vfpfcnvrt^0,w,c
   847  001D4A  0100               	movlb	0	; () banked
   848  001D4C  27B0               	addwf	_nout& (0+255),f,b
   849  001D4E  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
   850  001D50  23B1               	addwfc	(_nout+1)& (0+255),f,b
   851  001D52                     l2121:
   852                           
   853                           ; BSR set to: 0
   854                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   855  001D52  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
   856  001D56  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   857  001D5A                     	if	0	;tblptru may be non-zero
   858  001D5A                     	endif
   859  001D5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   860  001D5A  0E00               	movlw	low (__mediumconst shr (0+16))
   861  001D5C  6EF8               	movwf	tblptru,c
   862  001D5E                     	endif
   863  001D5E  0008               	tblrd		*
   864  001D60  50F5               	movf	tablat,w,c
   865  001D62  0900               	iorlw	0
   866  001D64  A4D8               	btfss	status,2,c
   867  001D66  EFB7  F00E         	goto	u1521
   868  001D6A  EFB9  F00E         	goto	u1520
   869  001D6E                     u1521:
   870  001D6E  EF96  F00E         	goto	l2119
   871  001D72                     u1520:
   872  001D72                     
   873                           ; BSR set to: 0
   874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   875  001D72  C0B0  F056         	movff	_nout,?_vfprintf
   876  001D76  C0B1  F057         	movff	_nout+1,?_vfprintf+1
   877  001D7A                     
   878                           ; BSR set to: 0
   879  001D7A  0012               	return		;funcret
   880  001D7C                     __end_of_vfprintf:
   881                           	callstack 0
   882                           
   883 ;; *************** function _vfpfcnvrt *****************
   884 ;; Defined at:
   885 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
   888 ;;		 -> sprintf@f(6), 
   889 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
   890 ;;		 -> vfprintf@cfmt(2), 
   891 ;;  ap              2   67[COMRAM] PTR PTR void 
   892 ;;		 -> sprintf@ap(2), 
   893 ;; Auto vars:     Size  Location     Type
   894 ;;  ll              8   73[COMRAM] long long 
   895 ;;  llu             8    0        unsigned long long 
   896 ;;  f               4    0        unsigned long long 
   897 ;;  vp              3    0        PTR void 
   898 ;;  ct              3    0        unsigned char [3]
   899 ;;  cp              3    0        PTR unsigned char 
   900 ;;  done            2   81[COMRAM] int 
   901 ;;  i               2    0        int 
   902 ;;  c               1    0        unsigned char 
   903 ;; Return value:  Size  Location     Type
   904 ;;                  2   63[COMRAM] int 
   905 ;; Registers used:
   906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   912 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   913 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   914 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   915 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   916 ;;Total ram usage:       22 bytes
   917 ;; Hardware stack levels used: 1
   918 ;; Hardware stack levels required when called: 5
   919 ;; This function calls:
   920 ;;		_atoi
   921 ;;		_dtoa
   922 ;;		_fputc
   923 ;;		_isdigit
   924 ;; This function is called by:
   925 ;;		_vfprintf
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text3
   930  000E0A                     __ptext3:
   931                           	callstack 0
   932  000E0A                     _vfpfcnvrt:
   933                           	callstack 23
   934  000E0A                     
   935                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
   936  000E0A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   937  000E0E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   938  000E12  CFDE FFF6          	movff	postinc2,tblptrl
   939  000E16  CFDD FFF7          	movff	postdec2,tblptrh
   940  000E1A                     	if	0	;tblptru may be non-zero
   941  000E1A                     	endif
   942  000E1A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   943  000E1A  0E00               	movlw	low (__mediumconst shr (0+16))
   944  000E1C  6EF8               	movwf	tblptru,c
   945  000E1E                     	endif
   946  000E1E  0008               	tblrd		*
   947  000E20  50F5               	movf	tablat,w,c
   948  000E22  0A25               	xorlw	37
   949  000E24  A4D8               	btfss	status,2,c
   950  000E26  EF17  F007         	goto	u1391
   951  000E2A  EF19  F007         	goto	u1390
   952  000E2E                     u1391:
   953  000E2E  EFB2  F008         	goto	l2089
   954  000E32                     u1390:
   955  000E32                     
   956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
   957  000E32  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   958  000E36  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   959  000E3A  2ADE               	incf	postinc2,f,c
   960  000E3C  0E00               	movlw	0
   961  000E3E  22DD               	addwfc	postdec2,f,c
   962  000E40                     
   963                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
   964  000E40  0E00               	movlw	0
   965  000E42  0100               	movlb	0	; () banked
   966  000E44  6FB3               	movwf	(_width+1)& (0+255),b
   967  000E46  0E00               	movlw	0
   968  000E48  6FB2               	movwf	_width& (0+255),b
   969  000E4A  C0B2  F0B6         	movff	_width,_flags
   970  000E4E  C0B3  F0B7         	movff	_width+1,_flags+1
   971  000E52                     
   972                           ; BSR set to: 0
   973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
   974  000E52  69B4               	setf	_prec& (0+255),b
   975  000E54  69B5               	setf	(_prec+1)& (0+255),b
   976  000E56                     
   977                           ; BSR set to: 0
   978                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
   979  000E56  0E00               	movlw	0
   980  000E58  6E53               	movwf	(vfpfcnvrt@done+1)^0,c
   981  000E5A  0E00               	movlw	0
   982  000E5C  6E52               	movwf	vfpfcnvrt@done^0,c
   983                           
   984                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
   985  000E5E  EF7E  F007         	goto	l2041
   986  000E62                     l2015:
   987                           
   988                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
   989  000E62  0100               	movlb	0	; () banked
   990  000E64  81B6               	bsf	_flags& (0+255),0,b
   991  000E66                     l2017:
   992                           
   993                           ; BSR set to: 0
   994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
   995  000E66  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   996  000E6A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   997  000E6E  2ADE               	incf	postinc2,f,c
   998  000E70  0E00               	movlw	0
   999  000E72  22DD               	addwfc	postdec2,f,c
  1000                           
  1001                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1002  000E74  EF7E  F007         	goto	l2041
  1003  000E78                     l2019:
  1004                           
  1005                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1006  000E78  0100               	movlb	0	; () banked
  1007  000E7A  83B6               	bsf	_flags& (0+255),1,b
  1008  000E7C  EF33  F007         	goto	l2017
  1009  000E80                     l2023:
  1010                           
  1011                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1012  000E80  0100               	movlb	0	; () banked
  1013  000E82  85B6               	bsf	_flags& (0+255),2,b
  1014  000E84  EF33  F007         	goto	l2017
  1015  000E88                     l2027:
  1016                           
  1017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1018  000E88  0100               	movlb	0	; () banked
  1019  000E8A  87B6               	bsf	_flags& (0+255),3,b
  1020  000E8C  EF33  F007         	goto	l2017
  1021  000E90                     l2031:
  1022                           
  1023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1024  000E90  0100               	movlb	0	; () banked
  1025  000E92  89B6               	bsf	_flags& (0+255),4,b
  1026  000E94  EF33  F007         	goto	l2017
  1027  000E98                     l2035:
  1028                           
  1029                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1030  000E98  0E00               	movlw	0
  1031  000E9A  6E53               	movwf	(vfpfcnvrt@done+1)^0,c
  1032  000E9C  0E01               	movlw	1
  1033  000E9E  6E52               	movwf	vfpfcnvrt@done^0,c
  1034                           
  1035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1036  000EA0  EF7E  F007         	goto	l2041
  1037  000EA4                     l2039:
  1038  000EA4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1039  000EA8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1040  000EAC  CFDE FFF6          	movff	postinc2,tblptrl
  1041  000EB0  CFDD FFF7          	movff	postdec2,tblptrh
  1042  000EB4                     	if	0	;tblptru may be non-zero
  1043  000EB4                     	endif
  1044  000EB4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1045  000EB4  0E00               	movlw	low (__mediumconst shr (0+16))
  1046  000EB6  6EF8               	movwf	tblptru,c
  1047  000EB8                     	endif
  1048  000EB8  0008               	tblrd		*
  1049  000EBA  50F5               	movf	tablat,w,c
  1050  000EBC  6E46               	movwf	??_vfpfcnvrt^0,c
  1051  000EBE  6A47               	clrf	(??_vfpfcnvrt+1)^0,c
  1052                           
  1053                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1054                           ; Switch size 1, requested type "simple"
  1055                           ; Number of cases is 1, Range of values is 0 to 0
  1056                           ; switch strategies available:
  1057                           ; Name         Instructions Cycles
  1058                           ; simple_byte            4     3 (average)
  1059                           ;	Chosen strategy is simple_byte
  1060  000EC0  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  1061  000EC2  0A00               	xorlw	0	; case 0
  1062  000EC4  B4D8               	btfsc	status,2,c
  1063  000EC6  EF67  F007         	goto	l2365
  1064  000ECA  EF4C  F007         	goto	l2035
  1065  000ECE                     l2365:
  1066                           
  1067                           ; Switch size 1, requested type "simple"
  1068                           ; Number of cases is 5, Range of values is 32 to 48
  1069                           ; switch strategies available:
  1070                           ; Name         Instructions Cycles
  1071                           ; simple_byte           16     9 (average)
  1072                           ;	Chosen strategy is simple_byte
  1073  000ECE  5046               	movf	??_vfpfcnvrt^0,w,c
  1074  000ED0  0A20               	xorlw	32	; case 32
  1075  000ED2  B4D8               	btfsc	status,2,c
  1076  000ED4  EF44  F007         	goto	l2027
  1077  000ED8  0A03               	xorlw	3	; case 35
  1078  000EDA  B4D8               	btfsc	status,2,c
  1079  000EDC  EF48  F007         	goto	l2031
  1080  000EE0  0A08               	xorlw	8	; case 43
  1081  000EE2  B4D8               	btfsc	status,2,c
  1082  000EE4  EF40  F007         	goto	l2023
  1083  000EE8  0A06               	xorlw	6	; case 45
  1084  000EEA  B4D8               	btfsc	status,2,c
  1085  000EEC  EF31  F007         	goto	l2015
  1086  000EF0  0A1D               	xorlw	29	; case 48
  1087  000EF2  B4D8               	btfsc	status,2,c
  1088  000EF4  EF3C  F007         	goto	l2019
  1089  000EF8  EF4C  F007         	goto	l2035
  1090  000EFC                     l2041:
  1091                           
  1092                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1093  000EFC  5052               	movf	vfpfcnvrt@done^0,w,c
  1094  000EFE  1053               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1095  000F00  B4D8               	btfsc	status,2,c
  1096  000F02  EF85  F007         	goto	u1401
  1097  000F06  EF87  F007         	goto	u1400
  1098  000F0A                     u1401:
  1099  000F0A  EF52  F007         	goto	l2039
  1100  000F0E                     u1400:
  1101  000F0E                     
  1102                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1103  000F0E  0100               	movlb	0	; () banked
  1104  000F10  A1B6               	btfss	_flags& (0+255),0,b
  1105  000F12  EF8D  F007         	goto	u1411
  1106  000F16  EF8F  F007         	goto	u1410
  1107  000F1A                     u1411:
  1108  000F1A  EF90  F007         	goto	l2045
  1109  000F1E                     u1410:
  1110  000F1E                     
  1111                           ; BSR set to: 0
  1112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1113  000F1E  93B6               	bcf	_flags& (0+255),1,b
  1114  000F20                     l2045:
  1115                           
  1116                           ; BSR set to: 0
  1117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1118  000F20  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1119  000F24  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1120  000F28  CFDE FFF6          	movff	postinc2,tblptrl
  1121  000F2C  CFDD FFF7          	movff	postdec2,tblptrh
  1122  000F30                     	if	0	;tblptru may be non-zero
  1123  000F30                     	endif
  1124  000F30                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1125  000F30  0E00               	movlw	low (__mediumconst shr (0+16))
  1126  000F32  6EF8               	movwf	tblptru,c
  1127  000F34                     	endif
  1128  000F34  0008               	tblrd		*
  1129  000F36  50F5               	movf	tablat,w,c
  1130  000F38  0A2A               	xorlw	42
  1131  000F3A  A4D8               	btfss	status,2,c
  1132  000F3C  EFA2  F007         	goto	u1421
  1133  000F40  EFA4  F007         	goto	u1420
  1134  000F44                     u1421:
  1135  000F44  EFCD  F007         	goto	l2053
  1136  000F48                     u1420:
  1137  000F48                     
  1138                           ; BSR set to: 0
  1139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1140  000F48  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1141  000F4C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1142  000F50  2ADE               	incf	postinc2,f,c
  1143  000F52  0E00               	movlw	0
  1144  000F54  22DD               	addwfc	postdec2,f,c
  1145                           
  1146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1147  000F56  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1148  000F5A  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1149  000F5E  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1150  000F62  0E02               	movlw	2
  1151  000F64  26DE               	addwf	postinc2,f,c
  1152  000F66  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1153  000F6A  0E00               	movlw	0
  1154  000F6C  22DD               	addwfc	postdec2,f,c
  1155  000F6E  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1156  000F72  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1157  000F76  CFDE F0B2          	movff	postinc2,_width
  1158  000F7A  CFDD F0B3          	movff	postdec2,_width+1
  1159  000F7E                     
  1160                           ; BSR set to: 0
  1161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1162  000F7E  BFB3               	btfsc	(_width+1)& (0+255),7,b
  1163  000F80  EFC6  F007         	goto	u1430
  1164  000F84  EFC4  F007         	goto	u1431
  1165  000F88                     u1431:
  1166  000F88  EF12  F008         	goto	l2063
  1167  000F8C                     u1430:
  1168  000F8C                     
  1169                           ; BSR set to: 0
  1170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1171  000F8C  81B6               	bsf	_flags& (0+255),0,b
  1172                           
  1173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1174  000F8E  6DB2               	negf	_width& (0+255),b
  1175  000F90  1FB3               	comf	(_width+1)& (0+255),f,b
  1176  000F92  B0D8               	btfsc	status,0,c
  1177  000F94  2BB3               	incf	(_width+1)& (0+255),f,b
  1178  000F96  EF12  F008         	goto	l2063
  1179  000F9A                     l2053:
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1183  000F9A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1184  000F9E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1185  000FA2  CFDE F00B          	movff	postinc2,atoi@s
  1186  000FA6  CFDD F00C          	movff	postdec2,atoi@s+1
  1187  000FAA  EC41  F00A         	call	_atoi	;wreg free
  1188  000FAE  C00B  F0B2         	movff	?_atoi,_width
  1189  000FB2  C00C  F0B3         	movff	?_atoi+1,_width+1
  1190                           
  1191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1192  000FB6  EFE4  F007         	goto	l2057
  1193  000FBA                     l2055:
  1194                           
  1195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1196  000FBA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1197  000FBE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1198  000FC2  2ADE               	incf	postinc2,f,c
  1199  000FC4  0E00               	movlw	0
  1200  000FC6  22DD               	addwfc	postdec2,f,c
  1201  000FC8                     l2057:
  1202  000FC8  0ED0               	movlw	208
  1203  000FCA  6E46               	movwf	??_vfpfcnvrt^0,c
  1204  000FCC  0EFF               	movlw	255
  1205  000FCE  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  1206  000FD0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1207  000FD4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1208  000FD8  CFDE FFF6          	movff	postinc2,tblptrl
  1209  000FDC  CFDD FFF7          	movff	postdec2,tblptrh
  1210  000FE0                     	if	0	;tblptru may be non-zero
  1211  000FE0                     	endif
  1212  000FE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1213  000FE0  0E00               	movlw	low (__mediumconst shr (0+16))
  1214  000FE2  6EF8               	movwf	tblptru,c
  1215  000FE4                     	endif
  1216  000FE4  0008               	tblrd		*
  1217  000FE6  50F5               	movf	tablat,w,c
  1218  000FE8  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  1219  000FEA  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  1220  000FEC  5046               	movf	??_vfpfcnvrt^0,w,c
  1221  000FEE  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1222  000FF0  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  1223  000FF2  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1224  000FF4  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  1225  000FF6  E10A               	bnz	u1440
  1226  000FF8  0E0A               	movlw	10
  1227  000FFA  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1228  000FFC  A0D8               	btfss	status,0,c
  1229  000FFE  EF03  F008         	goto	u1441
  1230  001002  EF06  F008         	goto	u1440
  1231  001006                     u1441:
  1232  001006  0E01               	movlw	1
  1233  001008  EF07  F008         	goto	u1450
  1234  00100C                     u1440:
  1235  00100C  0E00               	movlw	0
  1236  00100E                     u1450:
  1237  00100E  6E54               	movwf	_vfpfcnvrt$1175^0,c
  1238  001010  6A55               	clrf	(_vfpfcnvrt$1175+1)^0,c
  1239  001012  5054               	movf	_vfpfcnvrt$1175^0,w,c
  1240  001014  1055               	iorwf	(_vfpfcnvrt$1175+1)^0,w,c
  1241  001016  A4D8               	btfss	status,2,c
  1242  001018  EF10  F008         	goto	u1461
  1243  00101C  EF12  F008         	goto	u1460
  1244  001020                     u1461:
  1245  001020  EFDD  F007         	goto	l2055
  1246  001024                     u1460:
  1247  001024                     l2063:
  1248                           
  1249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1250  001024  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1251  001028  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1252  00102C  CFDE FFF6          	movff	postinc2,tblptrl
  1253  001030  CFDD FFF7          	movff	postdec2,tblptrh
  1254  001034                     	if	0	;tblptru may be non-zero
  1255  001034                     	endif
  1256  001034                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1257  001034  0E00               	movlw	low (__mediumconst shr (0+16))
  1258  001036  6EF8               	movwf	tblptru,c
  1259  001038                     	endif
  1260  001038  0008               	tblrd		*
  1261  00103A  50F5               	movf	tablat,w,c
  1262  00103C  0A64               	xorlw	100
  1263  00103E  B4D8               	btfsc	status,2,c
  1264  001040  EF24  F008         	goto	u1471
  1265  001044  EF26  F008         	goto	u1470
  1266  001048                     u1471:
  1267  001048  EF3A  F008         	goto	l2067
  1268  00104C                     u1470:
  1269  00104C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1270  001050  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1271  001054  CFDE FFF6          	movff	postinc2,tblptrl
  1272  001058  CFDD FFF7          	movff	postdec2,tblptrh
  1273  00105C                     	if	0	;tblptru may be non-zero
  1274  00105C                     	endif
  1275  00105C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1276  00105C  0E00               	movlw	low (__mediumconst shr (0+16))
  1277  00105E  6EF8               	movwf	tblptru,c
  1278  001060                     	endif
  1279  001060  0008               	tblrd		*
  1280  001062  50F5               	movf	tablat,w,c
  1281  001064  0A69               	xorlw	105
  1282  001066  A4D8               	btfss	status,2,c
  1283  001068  EF38  F008         	goto	u1481
  1284  00106C  EF3A  F008         	goto	u1480
  1285  001070                     u1481:
  1286  001070  EF7A  F008         	goto	l2073
  1287  001074                     u1480:
  1288  001074                     l2067:
  1289                           
  1290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1291  001074  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1292  001078  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1293  00107C  2ADE               	incf	postinc2,f,c
  1294  00107E  0E00               	movlw	0
  1295  001080  22DD               	addwfc	postdec2,f,c
  1296                           
  1297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1298  001082  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1299  001086  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1300  00108A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1301  00108E  0E02               	movlw	2
  1302  001090  26DE               	addwf	postinc2,f,c
  1303  001092  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1304  001096  0E00               	movlw	0
  1305  001098  22DD               	addwfc	postdec2,f,c
  1306  00109A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1307  00109E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1308  0010A2  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  1309  0010A6  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  1310  0010AA  0E00               	movlw	0
  1311  0010AC  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1312  0010AE  0EFF               	movlw	-1
  1313  0010B0  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  1314  0010B2  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  1315  0010B4  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  1316  0010B6  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  1317  0010B8  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  1318  0010BA  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  1319  0010BC                     
  1320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1321  0010BC  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1322  0010C0  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1323  0010C4  C04A  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1324  0010C8  C04B  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1325  0010CC  C04C  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1326  0010D0  C04D  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1327  0010D4  C04E  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1328  0010D8  C04F  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1329  0010DC  C050  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1330  0010E0  C051  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1331  0010E4  ECD0  F008         	call	_dtoa	;wreg free
  1332  0010E8  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1333  0010EC  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1334  0010F0  EFCF  F008         	goto	l979
  1335  0010F4                     l2073:
  1336                           
  1337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1338  0010F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1339  0010F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1340  0010FC  CFDE FFF6          	movff	postinc2,tblptrl
  1341  001100  CFDD FFF7          	movff	postdec2,tblptrh
  1342  001104                     	if	0	;tblptru may be non-zero
  1343  001104                     	endif
  1344  001104                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1345  001104  0E00               	movlw	low (__mediumconst shr (0+16))
  1346  001106  6EF8               	movwf	tblptru,c
  1347  001108                     	endif
  1348  001108  0008               	tblrd		*
  1349  00110A  50F5               	movf	tablat,w,c
  1350  00110C  0A25               	xorlw	37
  1351  00110E  A4D8               	btfss	status,2,c
  1352  001110  EF8C  F008         	goto	u1491
  1353  001114  EF8E  F008         	goto	u1490
  1354  001118                     u1491:
  1355  001118  EFA5  F008         	goto	l2083
  1356  00111C                     u1490:
  1357  00111C                     
  1358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1359  00111C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1360  001120  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1361  001124  2ADE               	incf	postinc2,f,c
  1362  001126  0E00               	movlw	0
  1363  001128  22DD               	addwfc	postdec2,f,c
  1364  00112A                     
  1365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1366  00112A  0E00               	movlw	0
  1367  00112C  6E02               	movwf	(fputc@c+1)^0,c
  1368  00112E  0E25               	movlw	37
  1369  001130  6E01               	movwf	fputc@c^0,c
  1370  001132  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1371  001136  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1372  00113A  EC09  F00D         	call	_fputc	;wreg free
  1373  00113E                     l2079:
  1374                           
  1375                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1376  00113E  0E00               	movlw	0
  1377  001140  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1378  001142  0E01               	movlw	1
  1379  001144  6E40               	movwf	?_vfpfcnvrt^0,c
  1380  001146  EFCF  F008         	goto	l979
  1381  00114A                     l2083:
  1382                           
  1383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1384  00114A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1385  00114E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1386  001152  2ADE               	incf	postinc2,f,c
  1387  001154  0E00               	movlw	0
  1388  001156  22DD               	addwfc	postdec2,f,c
  1389  001158                     
  1390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1391  001158  0E00               	movlw	0
  1392  00115A  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1393  00115C  0E00               	movlw	0
  1394  00115E  6E40               	movwf	?_vfpfcnvrt^0,c
  1395  001160  EFCF  F008         	goto	l979
  1396  001164                     l2089:
  1397                           
  1398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1399  001164  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1400  001168  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1401  00116C  CFDE FFF6          	movff	postinc2,tblptrl
  1402  001170  CFDD FFF7          	movff	postdec2,tblptrh
  1403  001174                     	if	0	;tblptru may be non-zero
  1404  001174                     	endif
  1405  001174                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1406  001174  0E00               	movlw	low (__mediumconst shr (0+16))
  1407  001176  6EF8               	movwf	tblptru,c
  1408  001178                     	endif
  1409  001178  0008               	tblrd		*
  1410  00117A  50F5               	movf	tablat,w,c
  1411  00117C  6E01               	movwf	fputc@c^0,c
  1412  00117E  6A02               	clrf	(fputc@c+1)^0,c
  1413  001180  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1414  001184  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1415  001188  EC09  F00D         	call	_fputc	;wreg free
  1416  00118C                     
  1417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1418  00118C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1419  001190  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1420  001194  2ADE               	incf	postinc2,f,c
  1421  001196  0E00               	movlw	0
  1422  001198  22DD               	addwfc	postdec2,f,c
  1423  00119A  EF9F  F008         	goto	l2079
  1424  00119E                     l979:
  1425  00119E  0012               	return		;funcret
  1426  0011A0                     __end_of_vfpfcnvrt:
  1427                           	callstack 0
  1428                           
  1429 ;; *************** function _dtoa *****************
  1430 ;; Defined at:
  1431 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1434 ;;		 -> sprintf@f(6), 
  1435 ;;  d               8   29[COMRAM] long long 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  n               8   53[COMRAM] long long 
  1438 ;;  i               2   61[COMRAM] int 
  1439 ;;  s               2   51[COMRAM] int 
  1440 ;;  w               2   49[COMRAM] int 
  1441 ;;  p               2   47[COMRAM] int 
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  2   27[COMRAM] int 
  1444 ;; Registers used:
  1445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1451 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1452 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1453 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1454 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1455 ;;Total ram usage:       36 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 4
  1458 ;; This function calls:
  1459 ;;		___aodiv
  1460 ;;		___aomod
  1461 ;;		_abs
  1462 ;;		_pad
  1463 ;; This function is called by:
  1464 ;;		_vfpfcnvrt
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text4
  1469  0011A0                     __ptext4:
  1470                           	callstack 0
  1471  0011A0                     _dtoa:
  1472                           	callstack 23
  1473  0011A0                     
  1474                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1475  0011A0  C01E  F036         	movff	dtoa@d,dtoa@n
  1476  0011A4  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1477  0011A8  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1478  0011AC  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1479  0011B0  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1480  0011B4  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1481  0011B8  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1482  0011BC  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1483  0011C0                     
  1484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1485  0011C0  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1486  0011C2  EFE5  F008         	goto	u1131
  1487  0011C6  EFE8  F008         	goto	u1130
  1488  0011CA                     u1131:
  1489  0011CA  0E01               	movlw	1
  1490  0011CC  EFE9  F008         	goto	u1140
  1491  0011D0                     u1130:
  1492  0011D0  0E00               	movlw	0
  1493  0011D2                     u1140:
  1494  0011D2  6E34               	movwf	dtoa@s^0,c
  1495  0011D4  6A35               	clrf	(dtoa@s+1)^0,c
  1496                           
  1497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1498  0011D6  5034               	movf	dtoa@s^0,w,c
  1499  0011D8  1035               	iorwf	(dtoa@s+1)^0,w,c
  1500  0011DA  B4D8               	btfsc	status,2,c
  1501  0011DC  EFF2  F008         	goto	u1151
  1502  0011E0  EFF4  F008         	goto	u1150
  1503  0011E4                     u1151:
  1504  0011E4  EF04  F009         	goto	l1887
  1505  0011E8                     u1150:
  1506  0011E8                     
  1507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1508  0011E8  1E3D               	comf	(dtoa@n+7)^0,f,c
  1509  0011EA  1E3C               	comf	(dtoa@n+6)^0,f,c
  1510  0011EC  1E3B               	comf	(dtoa@n+5)^0,f,c
  1511  0011EE  1E3A               	comf	(dtoa@n+4)^0,f,c
  1512  0011F0  1E39               	comf	(dtoa@n+3)^0,f,c
  1513  0011F2  1E38               	comf	(dtoa@n+2)^0,f,c
  1514  0011F4  1E37               	comf	(dtoa@n+1)^0,f,c
  1515  0011F6  6C36               	negf	dtoa@n^0,c
  1516  0011F8  0E00               	movlw	0
  1517  0011FA  2237               	addwfc	(dtoa@n+1)^0,f,c
  1518  0011FC  2238               	addwfc	(dtoa@n+2)^0,f,c
  1519  0011FE  2239               	addwfc	(dtoa@n+3)^0,f,c
  1520  001200  223A               	addwfc	(dtoa@n+4)^0,f,c
  1521  001202  223B               	addwfc	(dtoa@n+5)^0,f,c
  1522  001204  223C               	addwfc	(dtoa@n+6)^0,f,c
  1523  001206  223D               	addwfc	(dtoa@n+7)^0,f,c
  1524  001208                     l1887:
  1525                           
  1526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1527  001208  0100               	movlb	0	; () banked
  1528  00120A  BFB5               	btfsc	(_prec+1)& (0+255),7,b
  1529  00120C  EF0A  F009         	goto	u1161
  1530  001210  EF0C  F009         	goto	u1160
  1531  001214                     u1161:
  1532  001214  EF0D  F009         	goto	l1891
  1533  001218                     u1160:
  1534  001218                     
  1535                           ; BSR set to: 0
  1536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1537  001218  93B6               	bcf	_flags& (0+255),1,b
  1538  00121A                     l1891:
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1542  00121A  BFB5               	btfsc	(_prec+1)& (0+255),7,b
  1543  00121C  EF1A  F009         	goto	u1170
  1544  001220  51B5               	movf	(_prec+1)& (0+255),w,b
  1545  001222  E106               	bnz	u1171
  1546  001224  05B4               	decf	_prec& (0+255),w,b
  1547  001226  B0D8               	btfsc	status,0,c
  1548  001228  EF18  F009         	goto	u1171
  1549  00122C  EF1A  F009         	goto	u1170
  1550  001230                     u1171:
  1551  001230  EF20  F009         	goto	l930
  1552  001234                     u1170:
  1553  001234                     
  1554                           ; BSR set to: 0
  1555  001234  0E00               	movlw	0
  1556  001236  6E31               	movwf	(dtoa@p+1)^0,c
  1557  001238  0E01               	movlw	1
  1558  00123A  6E30               	movwf	dtoa@p^0,c
  1559  00123C  EF24  F009         	goto	l932
  1560  001240                     l930:
  1561                           
  1562                           ; BSR set to: 0
  1563  001240  C0B4  F030         	movff	_prec,dtoa@p
  1564  001244  C0B5  F031         	movff	_prec+1,dtoa@p+1
  1565  001248                     l932:
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1569  001248  C0B2  F032         	movff	_width,dtoa@w
  1570  00124C  C0B3  F033         	movff	_width+1,dtoa@w+1
  1571  001250                     
  1572                           ; BSR set to: 0
  1573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1574  001250  5034               	movf	dtoa@s^0,w,c
  1575  001252  1035               	iorwf	(dtoa@s+1)^0,w,c
  1576  001254  A4D8               	btfss	status,2,c
  1577  001256  EF2F  F009         	goto	u1181
  1578  00125A  EF31  F009         	goto	u1180
  1579  00125E                     u1181:
  1580  00125E  EF38  F009         	goto	l1899
  1581  001262                     u1180:
  1582  001262                     
  1583                           ; BSR set to: 0
  1584  001262  A5B6               	btfss	_flags& (0+255),2,b
  1585  001264  EF36  F009         	goto	u1191
  1586  001268  EF38  F009         	goto	u1190
  1587  00126C                     u1191:
  1588  00126C  EF3B  F009         	goto	l1901
  1589  001270                     u1190:
  1590  001270                     l1899:
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  1594  001270  0632               	decf	dtoa@w^0,f,c
  1595  001272  A0D8               	btfss	status,0,c
  1596  001274  0633               	decf	(dtoa@w+1)^0,f,c
  1597  001276                     l1901:
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1601  001276  0E00               	movlw	0
  1602  001278  6E3F               	movwf	(dtoa@i+1)^0,c
  1603  00127A  0E1F               	movlw	31
  1604  00127C  6E3E               	movwf	dtoa@i^0,c
  1605  00127E                     
  1606                           ; BSR set to: 0
  1607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1608  00127E  0E00               	movlw	0
  1609  001280  6FE5               	movwf	(_dbuf+31)& (0+255),b
  1610                           
  1611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1612  001282  EFBF  F009         	goto	l1915
  1613  001286                     l1905:
  1614                           
  1615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  1616  001286  063E               	decf	dtoa@i^0,f,c
  1617  001288  A0D8               	btfss	status,0,c
  1618  00128A  063F               	decf	(dtoa@i+1)^0,f,c
  1619  00128C                     
  1620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1621  00128C  0EC6               	movlw	low _dbuf
  1622  00128E  243E               	addwf	dtoa@i^0,w,c
  1623  001290  6ED9               	movwf	fsr2l,c
  1624  001292  0E00               	movlw	high _dbuf
  1625  001294  203F               	addwfc	(dtoa@i+1)^0,w,c
  1626  001296  6EDA               	movwf	fsr2h,c
  1627  001298  C036  F001         	movff	dtoa@n,___aomod@dividend
  1628  00129C  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1629  0012A0  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1630  0012A4  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1631  0012A8  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1632  0012AC  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1633  0012B0  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1634  0012B4  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1635  0012B8  0E0A               	movlw	10
  1636  0012BA  6E09               	movwf	___aomod@divisor^0,c
  1637  0012BC  0E00               	movlw	0
  1638  0012BE  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1639  0012C0  0E00               	movlw	0
  1640  0012C2  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1641  0012C4  0E00               	movlw	0
  1642  0012C6  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1643  0012C8  0E00               	movlw	0
  1644  0012CA  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1645  0012CC  0E00               	movlw	0
  1646  0012CE  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1647  0012D0  0E00               	movlw	0
  1648  0012D2  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1649  0012D4  0E00               	movlw	0
  1650  0012D6  6E10               	movwf	(___aomod@divisor+7)^0,c
  1651  0012D8  ECD7  F00B         	call	___aomod	;wreg free
  1652  0012DC  C001  F026         	movff	?___aomod,??_dtoa
  1653  0012E0  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1654  0012E4  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1655  0012E8  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1656  0012EC  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1657  0012F0  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1658  0012F4  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1659  0012F8  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1660  0012FC  C026  F013         	movff	??_dtoa,abs@a
  1661  001300  C028  F014         	movff	??_dtoa+2,abs@a+1
  1662  001304  EC32  F00F         	call	_abs	;wreg free
  1663  001308  5013               	movf	?_abs^0,w,c
  1664  00130A  0F30               	addlw	48
  1665  00130C  6EDF               	movwf	indf2,c
  1666  00130E                     
  1667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  1668  00130E  0630               	decf	dtoa@p^0,f,c
  1669  001310  A0D8               	btfss	status,0,c
  1670  001312  0631               	decf	(dtoa@p+1)^0,f,c
  1671  001314                     
  1672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  1673  001314  0632               	decf	dtoa@w^0,f,c
  1674  001316  A0D8               	btfss	status,0,c
  1675  001318  0633               	decf	(dtoa@w+1)^0,f,c
  1676  00131A                     
  1677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1678  00131A  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1679  00131E  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1680  001322  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1681  001326  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1682  00132A  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1683  00132E  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1684  001332  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1685  001336  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1686  00133A  0E0A               	movlw	10
  1687  00133C  6E09               	movwf	___aodiv@divisor^0,c
  1688  00133E  0E00               	movlw	0
  1689  001340  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1690  001342  0E00               	movlw	0
  1691  001344  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1692  001346  0E00               	movlw	0
  1693  001348  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1694  00134A  0E00               	movlw	0
  1695  00134C  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1696  00134E  0E00               	movlw	0
  1697  001350  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1698  001352  0E00               	movlw	0
  1699  001354  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1700  001356  0E00               	movlw	0
  1701  001358  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1702  00135A  EC13  F00B         	call	___aodiv	;wreg free
  1703  00135E  C001  F036         	movff	?___aodiv,dtoa@n
  1704  001362  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1705  001366  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1706  00136A  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1707  00136E  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1708  001372  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1709  001376  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1710  00137A  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1711  00137E                     l1915:
  1712                           
  1713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1714  00137E  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1715  001380  EFCA  F009         	goto	u1201
  1716  001384  503F               	movf	(dtoa@i+1)^0,w,c
  1717  001386  E108               	bnz	u1200
  1718  001388  043E               	decf	dtoa@i^0,w,c
  1719  00138A  A0D8               	btfss	status,0,c
  1720  00138C  EFCA  F009         	goto	u1201
  1721  001390  EFCC  F009         	goto	u1200
  1722  001394                     u1201:
  1723  001394  EFFD  F009         	goto	l1925
  1724  001398                     u1200:
  1725  001398  5036               	movf	dtoa@n^0,w,c
  1726  00139A  1037               	iorwf	(dtoa@n+1)^0,w,c
  1727  00139C  1038               	iorwf	(dtoa@n+2)^0,w,c
  1728  00139E  1039               	iorwf	(dtoa@n+3)^0,w,c
  1729  0013A0  103A               	iorwf	(dtoa@n+4)^0,w,c
  1730  0013A2  103B               	iorwf	(dtoa@n+5)^0,w,c
  1731  0013A4  103C               	iorwf	(dtoa@n+6)^0,w,c
  1732  0013A6  103D               	iorwf	(dtoa@n+7)^0,w,c
  1733  0013A8  A4D8               	btfss	status,2,c
  1734  0013AA  EFD9  F009         	goto	u1211
  1735  0013AE  EFDB  F009         	goto	u1210
  1736  0013B2                     u1211:
  1737  0013B2  EF43  F009         	goto	l1905
  1738  0013B6                     u1210:
  1739  0013B6  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1740  0013B8  EFE8  F009         	goto	u1220
  1741  0013BC  5031               	movf	(dtoa@p+1)^0,w,c
  1742  0013BE  E106               	bnz	u1221
  1743  0013C0  0430               	decf	dtoa@p^0,w,c
  1744  0013C2  B0D8               	btfsc	status,0,c
  1745  0013C4  EFE6  F009         	goto	u1221
  1746  0013C8  EFE8  F009         	goto	u1220
  1747  0013CC                     u1221:
  1748  0013CC  EF43  F009         	goto	l1905
  1749  0013D0                     u1220:
  1750  0013D0  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1751  0013D2  EFF3  F009         	goto	u1231
  1752  0013D6  5033               	movf	(dtoa@w+1)^0,w,c
  1753  0013D8  E108               	bnz	u1230
  1754  0013DA  0432               	decf	dtoa@w^0,w,c
  1755  0013DC  A0D8               	btfss	status,0,c
  1756  0013DE  EFF3  F009         	goto	u1231
  1757  0013E2  EFF5  F009         	goto	u1230
  1758  0013E6                     u1231:
  1759  0013E6  EFFD  F009         	goto	l1925
  1760  0013EA                     u1230:
  1761  0013EA  0100               	movlb	0	; () banked
  1762  0013EC  B3B6               	btfsc	_flags& (0+255),1,b
  1763  0013EE  EFFB  F009         	goto	u1241
  1764  0013F2  EFFD  F009         	goto	u1240
  1765  0013F6                     u1241:
  1766  0013F6  EF43  F009         	goto	l1905
  1767  0013FA                     u1240:
  1768  0013FA                     l1925:
  1769                           
  1770                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1771  0013FA  5034               	movf	dtoa@s^0,w,c
  1772  0013FC  1035               	iorwf	(dtoa@s+1)^0,w,c
  1773  0013FE  A4D8               	btfss	status,2,c
  1774  001400  EF04  F00A         	goto	u1251
  1775  001404  EF06  F00A         	goto	u1250
  1776  001408                     u1251:
  1777  001408  EF0E  F00A         	goto	l1929
  1778  00140C                     u1250:
  1779  00140C  0100               	movlb	0	; () banked
  1780  00140E  A5B6               	btfss	_flags& (0+255),2,b
  1781  001410  EF0C  F00A         	goto	u1261
  1782  001414  EF0E  F00A         	goto	u1260
  1783  001418                     u1261:
  1784  001418  EF2C  F00A         	goto	l1939
  1785  00141C                     u1260:
  1786  00141C                     l1929:
  1787                           
  1788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  1789  00141C  063E               	decf	dtoa@i^0,f,c
  1790  00141E  A0D8               	btfss	status,0,c
  1791  001420  063F               	decf	(dtoa@i+1)^0,f,c
  1792  001422                     
  1793                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1794  001422  5034               	movf	dtoa@s^0,w,c
  1795  001424  1035               	iorwf	(dtoa@s+1)^0,w,c
  1796  001426  A4D8               	btfss	status,2,c
  1797  001428  EF18  F00A         	goto	u1271
  1798  00142C  EF1A  F00A         	goto	u1270
  1799  001430                     u1271:
  1800  001430  EF20  F00A         	goto	l1935
  1801  001434                     u1270:
  1802  001434  0E00               	movlw	0
  1803  001436  6E2F               	movwf	(_dtoa$1160+1)^0,c
  1804  001438  0E2B               	movlw	43
  1805  00143A  6E2E               	movwf	_dtoa$1160^0,c
  1806  00143C  EF24  F00A         	goto	l1937
  1807  001440                     l1935:
  1808  001440  0E00               	movlw	0
  1809  001442  6E2F               	movwf	(_dtoa$1160+1)^0,c
  1810  001444  0E2D               	movlw	45
  1811  001446  6E2E               	movwf	_dtoa$1160^0,c
  1812  001448                     l1937:
  1813  001448  0EC6               	movlw	low _dbuf
  1814  00144A  243E               	addwf	dtoa@i^0,w,c
  1815  00144C  6ED9               	movwf	fsr2l,c
  1816  00144E  0E00               	movlw	high _dbuf
  1817  001450  203F               	addwfc	(dtoa@i+1)^0,w,c
  1818  001452  6EDA               	movwf	fsr2h,c
  1819  001454  C02E  FFDF         	movff	_dtoa$1160,indf2
  1820  001458                     l1939:
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1823  001458  C01C  F011         	movff	dtoa@fp,pad@fp
  1824  00145C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1825  001460  0EC6               	movlw	low _dbuf
  1826  001462  243E               	addwf	dtoa@i^0,w,c
  1827  001464  6E13               	movwf	pad@buf^0,c
  1828  001466  0E00               	movlw	high _dbuf
  1829  001468  203F               	addwfc	(dtoa@i+1)^0,w,c
  1830  00146A  6E14               	movwf	(pad@buf+1)^0,c
  1831  00146C  C032  F015         	movff	dtoa@w,pad@p
  1832  001470  C033  F016         	movff	dtoa@w+1,pad@p+1
  1833  001474  EC6E  F00D         	call	_pad	;wreg free
  1834  001478  C011  F01C         	movff	?_pad,?_dtoa
  1835  00147C  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1836  001480  0012               	return		;funcret
  1837  001482                     __end_of_dtoa:
  1838                           	callstack 0
  1839                           
  1840 ;; *************** function _pad *****************
  1841 ;; Defined at:
  1842 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1845 ;;		 -> sprintf@f(6), 
  1846 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1847 ;;		 -> dbuf(32), 
  1848 ;;  p               2   20[COMRAM] int 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;  w               2   25[COMRAM] int 
  1851 ;;  i               2   23[COMRAM] int 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  2   16[COMRAM] int 
  1854 ;; Registers used:
  1855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1861 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1862 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1863 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1864 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1865 ;;Total ram usage:       11 bytes
  1866 ;; Hardware stack levels used: 1
  1867 ;; Hardware stack levels required when called: 3
  1868 ;; This function calls:
  1869 ;;		_fputc
  1870 ;;		_fputs
  1871 ;;		_strlen
  1872 ;; This function is called by:
  1873 ;;		_dtoa
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	text5
  1878  001ADC                     __ptext5:
  1879                           	callstack 0
  1880  001ADC                     _pad:
  1881                           	callstack 23
  1882  001ADC                     
  1883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1884  001ADC  0100               	movlb	0	; () banked
  1885  001ADE  A1B6               	btfss	_flags& (0+255),0,b
  1886  001AE0  EF74  F00D         	goto	u1041
  1887  001AE4  EF76  F00D         	goto	u1040
  1888  001AE8                     u1041:
  1889  001AE8  EF80  F00D         	goto	l1837
  1890  001AEC                     u1040:
  1891  001AEC                     
  1892                           ; BSR set to: 0
  1893                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1894  001AEC  C013  F00A         	movff	pad@buf,fputs@s
  1895  001AF0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1896  001AF4  C011  F00C         	movff	pad@fp,fputs@fp
  1897  001AF8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1898  001AFC  EC10  F00F         	call	_fputs	;wreg free
  1899  001B00                     l1837:
  1900                           
  1901                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1902  001B00  BE16               	btfsc	(pad@p+1)^0,7,c
  1903  001B02  EF85  F00D         	goto	u1051
  1904  001B06  EF87  F00D         	goto	u1050
  1905  001B0A                     u1051:
  1906  001B0A  EF8D  F00D         	goto	l1841
  1907  001B0E                     u1050:
  1908  001B0E  C015  F01A         	movff	pad@p,pad@w
  1909  001B12  C016  F01B         	movff	pad@p+1,pad@w+1
  1910  001B16  EF91  F00D         	goto	l919
  1911  001B1A                     l1841:
  1912  001B1A  0E00               	movlw	0
  1913  001B1C  6E1B               	movwf	(pad@w+1)^0,c
  1914  001B1E  0E00               	movlw	0
  1915  001B20  6E1A               	movwf	pad@w^0,c
  1916  001B22                     l919:
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1919  001B22  0E00               	movlw	0
  1920  001B24  6E19               	movwf	(pad@i+1)^0,c
  1921  001B26  0E00               	movlw	0
  1922  001B28  6E18               	movwf	pad@i^0,c
  1923                           
  1924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1925  001B2A  EFA3  F00D         	goto	l1847
  1926  001B2E                     l1843:
  1927                           
  1928                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1929  001B2E  0E00               	movlw	0
  1930  001B30  6E02               	movwf	(fputc@c+1)^0,c
  1931  001B32  0E20               	movlw	32
  1932  001B34  6E01               	movwf	fputc@c^0,c
  1933  001B36  C011  F003         	movff	pad@fp,fputc@fp
  1934  001B3A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1935  001B3E  EC09  F00D         	call	_fputc	;wreg free
  1936  001B42                     
  1937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1938  001B42  4A18               	infsnz	pad@i^0,f,c
  1939  001B44  2A19               	incf	(pad@i+1)^0,f,c
  1940  001B46                     l1847:
  1941                           
  1942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1943  001B46  501A               	movf	pad@w^0,w,c
  1944  001B48  5C18               	subwf	pad@i^0,w,c
  1945  001B4A  5019               	movf	(pad@i+1)^0,w,c
  1946  001B4C  0A80               	xorlw	128
  1947  001B4E  6E17               	movwf	??_pad^0,c
  1948  001B50  501B               	movf	(pad@w+1)^0,w,c
  1949  001B52  0A80               	xorlw	128
  1950  001B54  5817               	subwfb	??_pad^0,w,c
  1951  001B56  A0D8               	btfss	status,0,c
  1952  001B58  EFB0  F00D         	goto	u1061
  1953  001B5C  EFB2  F00D         	goto	u1060
  1954  001B60                     u1061:
  1955  001B60  EF97  F00D         	goto	l1843
  1956  001B64                     u1060:
  1957  001B64                     
  1958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1959  001B64  0100               	movlb	0	; () banked
  1960  001B66  B1B6               	btfsc	_flags& (0+255),0,b
  1961  001B68  EFB8  F00D         	goto	u1071
  1962  001B6C  EFBA  F00D         	goto	u1070
  1963  001B70                     u1071:
  1964  001B70  EFC4  F00D         	goto	l1851
  1965  001B74                     u1070:
  1966  001B74                     
  1967                           ; BSR set to: 0
  1968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1969  001B74  C013  F00A         	movff	pad@buf,fputs@s
  1970  001B78  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1971  001B7C  C011  F00C         	movff	pad@fp,fputs@fp
  1972  001B80  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1973  001B84  EC10  F00F         	call	_fputs	;wreg free
  1974  001B88                     l1851:
  1975                           
  1976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1977  001B88  C013  F001         	movff	pad@buf,strlen@s
  1978  001B8C  C014  F002         	movff	pad@buf+1,strlen@s+1
  1979  001B90  EC6E  F00F         	call	_strlen	;wreg free
  1980  001B94  501A               	movf	pad@w^0,w,c
  1981  001B96  2401               	addwf	?_strlen^0,w,c
  1982  001B98  6E11               	movwf	?_pad^0,c
  1983  001B9A  501B               	movf	(pad@w+1)^0,w,c
  1984  001B9C  2002               	addwfc	(?_strlen+1)^0,w,c
  1985  001B9E  6E12               	movwf	(?_pad+1)^0,c
  1986  001BA0  0012               	return		;funcret
  1987  001BA2                     __end_of_pad:
  1988                           	callstack 0
  1989                           
  1990 ;; *************** function _strlen *****************
  1991 ;; Defined at:
  1992 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1995 ;;		 -> dbuf(32), 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1998 ;;		 -> dbuf(32), 
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  2    0[COMRAM] unsigned int 
  2001 ;; Registers used:
  2002 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2009 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2011 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2012 ;;Total ram usage:        4 bytes
  2013 ;; Hardware stack levels used: 1
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_pad
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text6
  2022  001EDC                     __ptext6:
  2023                           	callstack 0
  2024  001EDC                     _strlen:
  2025                           	callstack 25
  2026  001EDC  C001  F003         	movff	strlen@s,strlen@a
  2027  001EE0  C002  F004         	movff	strlen@s+1,strlen@a+1
  2028  001EE4  EF76  F00F         	goto	l1741
  2029  001EE8                     l1739:
  2030  001EE8  4A01               	infsnz	strlen@s^0,f,c
  2031  001EEA  2A02               	incf	(strlen@s+1)^0,f,c
  2032  001EEC                     l1741:
  2033  001EEC  C001  FFD9         	movff	strlen@s,fsr2l
  2034  001EF0  C002  FFDA         	movff	strlen@s+1,fsr2h
  2035  001EF4  50DF               	movf	indf2,w,c
  2036  001EF6  A4D8               	btfss	status,2,c
  2037  001EF8  EF80  F00F         	goto	u901
  2038  001EFC  EF82  F00F         	goto	u900
  2039  001F00                     u901:
  2040  001F00  EF74  F00F         	goto	l1739
  2041  001F04                     u900:
  2042  001F04  5003               	movf	strlen@a^0,w,c
  2043  001F06  5C01               	subwf	strlen@s^0,w,c
  2044  001F08  6E01               	movwf	?_strlen^0,c
  2045  001F0A  5004               	movf	(strlen@a+1)^0,w,c
  2046  001F0C  5802               	subwfb	(strlen@s+1)^0,w,c
  2047  001F0E  6E02               	movwf	(?_strlen+1)^0,c
  2048  001F10  0012               	return		;funcret
  2049  001F12                     __end_of_strlen:
  2050                           	callstack 0
  2051                           
  2052 ;; *************** function _fputs *****************
  2053 ;; Defined at:
  2054 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2057 ;;		 -> dbuf(32), 
  2058 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2059 ;;		 -> sprintf@f(6), 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  i               2   14[COMRAM] int 
  2062 ;;  c               1   13[COMRAM] unsigned char 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  2    9[COMRAM] int 
  2065 ;; Registers used:
  2066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2072 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2073 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2075 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2076 ;;Total ram usage:        7 bytes
  2077 ;; Hardware stack levels used: 1
  2078 ;; Hardware stack levels required when called: 2
  2079 ;; This function calls:
  2080 ;;		_fputc
  2081 ;; This function is called by:
  2082 ;;		_pad
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           	psect	text7
  2087  001E20                     __ptext7:
  2088                           	callstack 0
  2089  001E20                     _fputs:
  2090                           	callstack 23
  2091  001E20  0E00               	movlw	0
  2092  001E22  6E10               	movwf	(fputs@i+1)^0,c
  2093  001E24  0E00               	movlw	0
  2094  001E26  6E0F               	movwf	fputs@i^0,c
  2095  001E28  EF21  F00F         	goto	l1735
  2096  001E2C                     l1731:
  2097  001E2C  C00E  F001         	movff	fputs@c,fputc@c
  2098  001E30  6A02               	clrf	(fputc@c+1)^0,c
  2099  001E32  C00C  F003         	movff	fputs@fp,fputc@fp
  2100  001E36  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2101  001E3A  EC09  F00D         	call	_fputc	;wreg free
  2102  001E3E  4A0F               	infsnz	fputs@i^0,f,c
  2103  001E40  2A10               	incf	(fputs@i+1)^0,f,c
  2104  001E42                     l1735:
  2105  001E42  500F               	movf	fputs@i^0,w,c
  2106  001E44  240A               	addwf	fputs@s^0,w,c
  2107  001E46  6ED9               	movwf	fsr2l,c
  2108  001E48  5010               	movf	(fputs@i+1)^0,w,c
  2109  001E4A  200B               	addwfc	(fputs@s+1)^0,w,c
  2110  001E4C  6EDA               	movwf	fsr2h,c
  2111  001E4E  50DF               	movf	indf2,w,c
  2112  001E50  6E0E               	movwf	fputs@c^0,c
  2113  001E52  500E               	movf	fputs@c^0,w,c
  2114  001E54  A4D8               	btfss	status,2,c
  2115  001E56  EF2F  F00F         	goto	u891
  2116  001E5A  EF31  F00F         	goto	u890
  2117  001E5E                     u891:
  2118  001E5E  EF16  F00F         	goto	l1731
  2119  001E62                     u890:
  2120  001E62  0012               	return		;funcret
  2121  001E64                     __end_of_fputs:
  2122                           	callstack 0
  2123                           
  2124 ;; *************** function _fputc *****************
  2125 ;; Defined at:
  2126 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  c               2    0[COMRAM] int 
  2129 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2130 ;;		 -> sprintf@f(6), 
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;		None
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  2    0[COMRAM] int 
  2135 ;; Registers used:
  2136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2142 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2144 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2145 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2146 ;;Total ram usage:        9 bytes
  2147 ;; Hardware stack levels used: 1
  2148 ;; Hardware stack levels required when called: 1
  2149 ;; This function calls:
  2150 ;;		_putch
  2151 ;; This function is called by:
  2152 ;;		_pad
  2153 ;;		_vfpfcnvrt
  2154 ;;		_fputs
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           	psect	text8
  2159  001A12                     __ptext8:
  2160                           	callstack 0
  2161  001A12                     _fputc:
  2162                           	callstack 26
  2163  001A12  5003               	movf	fputc@fp^0,w,c
  2164  001A14  1004               	iorwf	(fputc@fp+1)^0,w,c
  2165  001A16  B4D8               	btfsc	status,2,c
  2166  001A18  EF10  F00D         	goto	u851
  2167  001A1C  EF12  F00D         	goto	u850
  2168  001A20                     u851:
  2169  001A20  EF1B  F00D         	goto	l1719
  2170  001A24                     u850:
  2171  001A24  5003               	movf	fputc@fp^0,w,c
  2172  001A26  1004               	iorwf	(fputc@fp+1)^0,w,c
  2173  001A28  A4D8               	btfss	status,2,c
  2174  001A2A  EF19  F00D         	goto	u861
  2175  001A2E  EF1B  F00D         	goto	u860
  2176  001A32                     u861:
  2177  001A32  EF20  F00D         	goto	l1721
  2178  001A36                     u860:
  2179  001A36                     l1719:
  2180  001A36  5001               	movf	fputc@c^0,w,c
  2181  001A38  EC39  F010         	call	_putch
  2182  001A3C  EF6D  F00D         	goto	l1050
  2183  001A40                     l1721:
  2184  001A40  EE20 F004          	lfsr	2,4
  2185  001A44  5003               	movf	fputc@fp^0,w,c
  2186  001A46  26D9               	addwf	fsr2l,f,c
  2187  001A48  5004               	movf	(fputc@fp+1)^0,w,c
  2188  001A4A  22DA               	addwfc	fsr2h,f,c
  2189  001A4C  50DE               	movf	postinc2,w,c
  2190  001A4E  10DE               	iorwf	postinc2,w,c
  2191  001A50  B4D8               	btfsc	status,2,c
  2192  001A52  EF2D  F00D         	goto	u871
  2193  001A56  EF2F  F00D         	goto	u870
  2194  001A5A                     u871:
  2195  001A5A  EF4A  F00D         	goto	l1725
  2196  001A5E                     u870:
  2197  001A5E  EE20 F004          	lfsr	2,4
  2198  001A62  5003               	movf	fputc@fp^0,w,c
  2199  001A64  26D9               	addwf	fsr2l,f,c
  2200  001A66  5004               	movf	(fputc@fp+1)^0,w,c
  2201  001A68  22DA               	addwfc	fsr2h,f,c
  2202  001A6A  EE10 F002          	lfsr	1,2
  2203  001A6E  5003               	movf	fputc@fp^0,w,c
  2204  001A70  26E1               	addwf	fsr1l,f,c
  2205  001A72  5004               	movf	(fputc@fp+1)^0,w,c
  2206  001A74  22E2               	addwfc	fsr1h,f,c
  2207  001A76  50DE               	movf	postinc2,w,c
  2208  001A78  5CE6               	subwf	postinc1,w,c
  2209  001A7A  50E6               	movf	postinc1,w,c
  2210  001A7C  0A80               	xorlw	128
  2211  001A7E  6E09               	movwf	(??_fputc+4)^0,c
  2212  001A80  50DE               	movf	postinc2,w,c
  2213  001A82  0A80               	xorlw	128
  2214  001A84  5809               	subwfb	(??_fputc+4)^0,w,c
  2215  001A86  B0D8               	btfsc	status,0,c
  2216  001A88  EF48  F00D         	goto	u881
  2217  001A8C  EF4A  F00D         	goto	u880
  2218  001A90                     u881:
  2219  001A90  EF6D  F00D         	goto	l1050
  2220  001A94                     u880:
  2221  001A94                     l1725:
  2222  001A94  EE20 F002          	lfsr	2,2
  2223  001A98  5003               	movf	fputc@fp^0,w,c
  2224  001A9A  26D9               	addwf	fsr2l,f,c
  2225  001A9C  5004               	movf	(fputc@fp+1)^0,w,c
  2226  001A9E  22DA               	addwfc	fsr2h,f,c
  2227  001AA0  CFDE F005          	movff	postinc2,??_fputc
  2228  001AA4  CFDD F006          	movff	postdec2,??_fputc+1
  2229  001AA8  C003  FFD9         	movff	fputc@fp,fsr2l
  2230  001AAC  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2231  001AB0  CFDE F007          	movff	postinc2,??_fputc+2
  2232  001AB4  CFDD F008          	movff	postdec2,??_fputc+3
  2233  001AB8  5005               	movf	??_fputc^0,w,c
  2234  001ABA  2407               	addwf	(??_fputc+2)^0,w,c
  2235  001ABC  6ED9               	movwf	fsr2l,c
  2236  001ABE  5006               	movf	(??_fputc+1)^0,w,c
  2237  001AC0  2008               	addwfc	(??_fputc+3)^0,w,c
  2238  001AC2  6EDA               	movwf	fsr2h,c
  2239  001AC4  C001  FFDF         	movff	fputc@c,indf2
  2240  001AC8  EE20 F002          	lfsr	2,2
  2241  001ACC  5003               	movf	fputc@fp^0,w,c
  2242  001ACE  26D9               	addwf	fsr2l,f,c
  2243  001AD0  5004               	movf	(fputc@fp+1)^0,w,c
  2244  001AD2  22DA               	addwfc	fsr2h,f,c
  2245  001AD4  2ADE               	incf	postinc2,f,c
  2246  001AD6  0E00               	movlw	0
  2247  001AD8  22DD               	addwfc	postdec2,f,c
  2248  001ADA                     l1050:
  2249  001ADA  0012               	return		;funcret
  2250  001ADC                     __end_of_fputc:
  2251                           	callstack 0
  2252                           
  2253 ;; *************** function _putch *****************
  2254 ;; Defined at:
  2255 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  c               1    wreg     unsigned char 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  c               1    0[COMRAM] unsigned char 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      void 
  2262 ;; Registers used:
  2263 ;;		wreg
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2273 ;;Total ram usage:        0 bytes
  2274 ;; Hardware stack levels used: 1
  2275 ;; This function calls:
  2276 ;;		Nothing
  2277 ;; This function is called by:
  2278 ;;		_fputc
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text9
  2283  002072                     __ptext9:
  2284                           	callstack 0
  2285  002072                     _putch:
  2286                           	callstack 26
  2287  002072  0012               	return		;funcret
  2288  002074                     __end_of_putch:
  2289                           	callstack 0
  2290                           
  2291 ;; *************** function _abs *****************
  2292 ;; Defined at:
  2293 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;  a               2   18[COMRAM] int 
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;		None
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  2   18[COMRAM] int 
  2300 ;; Registers used:
  2301 ;;		wreg, status,2, status,0
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2307 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2309 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2310 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2311 ;;Total ram usage:        4 bytes
  2312 ;; Hardware stack levels used: 1
  2313 ;; This function calls:
  2314 ;;		Nothing
  2315 ;; This function is called by:
  2316 ;;		_dtoa
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text10
  2321  001E64                     __ptext10:
  2322                           	callstack 0
  2323  001E64                     _abs:
  2324                           	callstack 26
  2325  001E64  BE14               	btfsc	(abs@a+1)^0,7,c
  2326  001E66  EF3F  F00F         	goto	u1080
  2327  001E6A  5014               	movf	(abs@a+1)^0,w,c
  2328  001E6C  E106               	bnz	u1081
  2329  001E6E  0413               	decf	abs@a^0,w,c
  2330  001E70  B0D8               	btfsc	status,0,c
  2331  001E72  EF3D  F00F         	goto	u1081
  2332  001E76  EF3F  F00F         	goto	u1080
  2333  001E7A                     u1081:
  2334  001E7A  EF4D  F00F         	goto	l990
  2335  001E7E                     u1080:
  2336  001E7E  C013  F015         	movff	abs@a,??_abs
  2337  001E82  C014  F016         	movff	abs@a+1,??_abs+1
  2338  001E86  1E15               	comf	??_abs^0,f,c
  2339  001E88  1E16               	comf	(??_abs+1)^0,f,c
  2340  001E8A  4A15               	infsnz	??_abs^0,f,c
  2341  001E8C  2A16               	incf	(??_abs+1)^0,f,c
  2342  001E8E  C015  F013         	movff	??_abs,?_abs
  2343  001E92  C016  F014         	movff	??_abs+1,?_abs+1
  2344  001E96  EF51  F00F         	goto	l993
  2345  001E9A                     l990:
  2346  001E9A  C013  F013         	movff	abs@a,?_abs
  2347  001E9E  C014  F014         	movff	abs@a+1,?_abs+1
  2348  001EA2                     l993:
  2349  001EA2  0012               	return		;funcret
  2350  001EA4                     __end_of_abs:
  2351                           	callstack 0
  2352                           
  2353 ;; *************** function ___aomod *****************
  2354 ;; Defined at:
  2355 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  dividend        8    0[COMRAM] long long 
  2358 ;;  divisor         8    8[COMRAM] long long 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  sign            1   17[COMRAM] unsigned char 
  2361 ;;  counter         1   16[COMRAM] unsigned char 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  8    0[COMRAM] long long 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2, status,0
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2371 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2372 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2374 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2375 ;;Total ram usage:       18 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		_dtoa
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           	psect	text11
  2385  0017AE                     __ptext11:
  2386                           	callstack 0
  2387  0017AE                     ___aomod:
  2388                           	callstack 26
  2389  0017AE  0E00               	movlw	0
  2390  0017B0  6E12               	movwf	___aomod@sign^0,c
  2391  0017B2  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2392  0017B4  EFE0  F00B         	goto	u980
  2393  0017B8  EFDE  F00B         	goto	u981
  2394  0017BC                     u981:
  2395  0017BC  EFF2  F00B         	goto	l1805
  2396  0017C0                     u980:
  2397  0017C0  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2398  0017C2  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2399  0017C4  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2400  0017C6  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2401  0017C8  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2402  0017CA  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2403  0017CC  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2404  0017CE  6C01               	negf	___aomod@dividend^0,c
  2405  0017D0  0E00               	movlw	0
  2406  0017D2  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2407  0017D4  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2408  0017D6  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2409  0017D8  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2410  0017DA  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2411  0017DC  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2412  0017DE  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2413  0017E0  0E01               	movlw	1
  2414  0017E2  6E12               	movwf	___aomod@sign^0,c
  2415  0017E4                     l1805:
  2416  0017E4  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2417  0017E6  EFF9  F00B         	goto	u990
  2418  0017EA  EFF7  F00B         	goto	u991
  2419  0017EE                     u991:
  2420  0017EE  EF09  F00C         	goto	l1809
  2421  0017F2                     u990:
  2422  0017F2  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2423  0017F4  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2424  0017F6  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2425  0017F8  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2426  0017FA  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2427  0017FC  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2428  0017FE  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2429  001800  6C09               	negf	___aomod@divisor^0,c
  2430  001802  0E00               	movlw	0
  2431  001804  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2432  001806  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2433  001808  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2434  00180A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2435  00180C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2436  00180E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2437  001810  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2438  001812                     l1809:
  2439  001812  5009               	movf	___aomod@divisor^0,w,c
  2440  001814  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2441  001816  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2442  001818  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2443  00181A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2444  00181C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2445  00181E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2446  001820  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2447  001822  B4D8               	btfsc	status,2,c
  2448  001824  EF16  F00C         	goto	u1001
  2449  001828  EF18  F00C         	goto	u1000
  2450  00182C                     u1001:
  2451  00182C  EF60  F00C         	goto	l1825
  2452  001830                     u1000:
  2453  001830  0E01               	movlw	1
  2454  001832  6E11               	movwf	___aomod@counter^0,c
  2455  001834  EF26  F00C         	goto	l1815
  2456  001838                     l1813:
  2457  001838  90D8               	bcf	status,0,c
  2458  00183A  3609               	rlcf	___aomod@divisor^0,f,c
  2459  00183C  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2460  00183E  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2461  001840  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2462  001842  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2463  001844  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2464  001846  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2465  001848  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2466  00184A  2A11               	incf	___aomod@counter^0,f,c
  2467  00184C                     l1815:
  2468  00184C  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2469  00184E  EF2B  F00C         	goto	u1011
  2470  001852  EF2D  F00C         	goto	u1010
  2471  001856                     u1011:
  2472  001856  EF1C  F00C         	goto	l1813
  2473  00185A                     u1010:
  2474  00185A                     l1817:
  2475  00185A  5009               	movf	___aomod@divisor^0,w,c
  2476  00185C  5C01               	subwf	___aomod@dividend^0,w,c
  2477  00185E  500A               	movf	(___aomod@divisor+1)^0,w,c
  2478  001860  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2479  001862  500B               	movf	(___aomod@divisor+2)^0,w,c
  2480  001864  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2481  001866  500C               	movf	(___aomod@divisor+3)^0,w,c
  2482  001868  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2483  00186A  500D               	movf	(___aomod@divisor+4)^0,w,c
  2484  00186C  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2485  00186E  500E               	movf	(___aomod@divisor+5)^0,w,c
  2486  001870  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2487  001872  500F               	movf	(___aomod@divisor+6)^0,w,c
  2488  001874  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2489  001876  5010               	movf	(___aomod@divisor+7)^0,w,c
  2490  001878  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2491  00187A  A0D8               	btfss	status,0,c
  2492  00187C  EF42  F00C         	goto	u1021
  2493  001880  EF44  F00C         	goto	u1020
  2494  001884                     u1021:
  2495  001884  EF54  F00C         	goto	l1821
  2496  001888                     u1020:
  2497  001888  5009               	movf	___aomod@divisor^0,w,c
  2498  00188A  5E01               	subwf	___aomod@dividend^0,f,c
  2499  00188C  500A               	movf	(___aomod@divisor+1)^0,w,c
  2500  00188E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2501  001890  500B               	movf	(___aomod@divisor+2)^0,w,c
  2502  001892  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2503  001894  500C               	movf	(___aomod@divisor+3)^0,w,c
  2504  001896  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2505  001898  500D               	movf	(___aomod@divisor+4)^0,w,c
  2506  00189A  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2507  00189C  500E               	movf	(___aomod@divisor+5)^0,w,c
  2508  00189E  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2509  0018A0  500F               	movf	(___aomod@divisor+6)^0,w,c
  2510  0018A2  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2511  0018A4  5010               	movf	(___aomod@divisor+7)^0,w,c
  2512  0018A6  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2513  0018A8                     l1821:
  2514  0018A8  90D8               	bcf	status,0,c
  2515  0018AA  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2516  0018AC  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2517  0018AE  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2518  0018B0  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2519  0018B2  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2520  0018B4  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2521  0018B6  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2522  0018B8  3209               	rrcf	___aomod@divisor^0,f,c
  2523  0018BA  2E11               	decfsz	___aomod@counter^0,f,c
  2524  0018BC  EF2D  F00C         	goto	l1817
  2525  0018C0                     l1825:
  2526  0018C0  5012               	movf	___aomod@sign^0,w,c
  2527  0018C2  B4D8               	btfsc	status,2,c
  2528  0018C4  EF66  F00C         	goto	u1031
  2529  0018C8  EF68  F00C         	goto	u1030
  2530  0018CC                     u1031:
  2531  0018CC  EF78  F00C         	goto	l1829
  2532  0018D0                     u1030:
  2533  0018D0  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2534  0018D2  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2535  0018D4  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2536  0018D6  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2537  0018D8  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2538  0018DA  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2539  0018DC  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2540  0018DE  6C01               	negf	___aomod@dividend^0,c
  2541  0018E0  0E00               	movlw	0
  2542  0018E2  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2543  0018E4  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2544  0018E6  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2545  0018E8  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2546  0018EA  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2547  0018EC  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2548  0018EE  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2549  0018F0                     l1829:
  2550  0018F0  C001  F001         	movff	___aomod@dividend,?___aomod
  2551  0018F4  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2552  0018F8  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2553  0018FC  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2554  001900  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2555  001904  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2556  001908  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2557  00190C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2558  001910  0012               	return		;funcret
  2559  001912                     __end_of___aomod:
  2560                           	callstack 0
  2561                           
  2562 ;; *************** function ___aodiv *****************
  2563 ;; Defined at:
  2564 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;  dividend        8    0[COMRAM] long long 
  2567 ;;  divisor         8    8[COMRAM] long long 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  quotient        8   18[COMRAM] long long 
  2570 ;;  sign            1   17[COMRAM] unsigned char 
  2571 ;;  counter         1   16[COMRAM] unsigned char 
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  8    0[COMRAM] long long 
  2574 ;; Registers used:
  2575 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2581 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2582 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2584 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2585 ;;Total ram usage:       26 bytes
  2586 ;; Hardware stack levels used: 1
  2587 ;; This function calls:
  2588 ;;		Nothing
  2589 ;; This function is called by:
  2590 ;;		_dtoa
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text12
  2595  001626                     __ptext12:
  2596                           	callstack 0
  2597  001626                     ___aodiv:
  2598                           	callstack 26
  2599  001626  0E00               	movlw	0
  2600  001628  6E12               	movwf	___aodiv@sign^0,c
  2601  00162A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2602  00162C  EF1C  F00B         	goto	u910
  2603  001630  EF1A  F00B         	goto	u911
  2604  001634                     u911:
  2605  001634  EF2E  F00B         	goto	l1761
  2606  001638                     u910:
  2607  001638  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2608  00163A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2609  00163C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2610  00163E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2611  001640  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2612  001642  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2613  001644  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2614  001646  6C09               	negf	___aodiv@divisor^0,c
  2615  001648  0E00               	movlw	0
  2616  00164A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2617  00164C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2618  00164E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2619  001650  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2620  001652  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2621  001654  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2622  001656  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2623  001658  0E01               	movlw	1
  2624  00165A  6E12               	movwf	___aodiv@sign^0,c
  2625  00165C                     l1761:
  2626  00165C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2627  00165E  EF35  F00B         	goto	u920
  2628  001662  EF33  F00B         	goto	u921
  2629  001666                     u921:
  2630  001666  EF47  F00B         	goto	l1767
  2631  00166A                     u920:
  2632  00166A  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2633  00166C  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2634  00166E  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2635  001670  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2636  001672  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2637  001674  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2638  001676  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2639  001678  6C01               	negf	___aodiv@dividend^0,c
  2640  00167A  0E00               	movlw	0
  2641  00167C  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2642  00167E  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2643  001680  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2644  001682  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2645  001684  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2646  001686  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2647  001688  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2648  00168A  0E01               	movlw	1
  2649  00168C  1A12               	xorwf	___aodiv@sign^0,f,c
  2650  00168E                     l1767:
  2651  00168E  EE20  F013         	lfsr	2,___aodiv@quotient
  2652  001692  0E07               	movlw	7
  2653  001694                     u931:
  2654  001694  6ADE               	clrf	postinc2,c
  2655  001696  06E8               	decf	wreg,f,c
  2656  001698  E2FD               	bc	u931
  2657  00169A  5009               	movf	___aodiv@divisor^0,w,c
  2658  00169C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2659  00169E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2660  0016A0  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2661  0016A2  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2662  0016A4  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2663  0016A6  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2664  0016A8  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2665  0016AA  B4D8               	btfsc	status,2,c
  2666  0016AC  EF5A  F00B         	goto	u941
  2667  0016B0  EF5C  F00B         	goto	u940
  2668  0016B4                     u941:
  2669  0016B4  EFAE  F00B         	goto	l1789
  2670  0016B8                     u940:
  2671  0016B8  0E01               	movlw	1
  2672  0016BA  6E11               	movwf	___aodiv@counter^0,c
  2673  0016BC  EF6A  F00B         	goto	l1775
  2674  0016C0                     l1773:
  2675  0016C0  90D8               	bcf	status,0,c
  2676  0016C2  3609               	rlcf	___aodiv@divisor^0,f,c
  2677  0016C4  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2678  0016C6  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2679  0016C8  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2680  0016CA  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2681  0016CC  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2682  0016CE  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2683  0016D0  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2684  0016D2  2A11               	incf	___aodiv@counter^0,f,c
  2685  0016D4                     l1775:
  2686  0016D4  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2687  0016D6  EF6F  F00B         	goto	u951
  2688  0016DA  EF71  F00B         	goto	u950
  2689  0016DE                     u951:
  2690  0016DE  EF60  F00B         	goto	l1773
  2691  0016E2                     u950:
  2692  0016E2                     l1777:
  2693  0016E2  90D8               	bcf	status,0,c
  2694  0016E4  3613               	rlcf	___aodiv@quotient^0,f,c
  2695  0016E6  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2696  0016E8  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2697  0016EA  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2698  0016EC  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2699  0016EE  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2700  0016F0  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2701  0016F2  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2702  0016F4  5009               	movf	___aodiv@divisor^0,w,c
  2703  0016F6  5C01               	subwf	___aodiv@dividend^0,w,c
  2704  0016F8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2705  0016FA  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2706  0016FC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2707  0016FE  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2708  001700  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2709  001702  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2710  001704  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2711  001706  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2712  001708  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2713  00170A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2714  00170C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2715  00170E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2716  001710  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2717  001712  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2718  001714  A0D8               	btfss	status,0,c
  2719  001716  EF8F  F00B         	goto	u961
  2720  00171A  EF91  F00B         	goto	u960
  2721  00171E                     u961:
  2722  00171E  EFA2  F00B         	goto	l1785
  2723  001722                     u960:
  2724  001722  5009               	movf	___aodiv@divisor^0,w,c
  2725  001724  5E01               	subwf	___aodiv@dividend^0,f,c
  2726  001726  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2727  001728  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2728  00172A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2729  00172C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2730  00172E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2731  001730  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2732  001732  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2733  001734  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2734  001736  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2735  001738  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2736  00173A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2737  00173C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2738  00173E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2739  001740  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2740  001742  8013               	bsf	___aodiv@quotient^0,0,c
  2741  001744                     l1785:
  2742  001744  90D8               	bcf	status,0,c
  2743  001746  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2744  001748  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2745  00174A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2746  00174C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2747  00174E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2748  001750  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2749  001752  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2750  001754  3209               	rrcf	___aodiv@divisor^0,f,c
  2751  001756  2E11               	decfsz	___aodiv@counter^0,f,c
  2752  001758  EF71  F00B         	goto	l1777
  2753  00175C                     l1789:
  2754  00175C  5012               	movf	___aodiv@sign^0,w,c
  2755  00175E  B4D8               	btfsc	status,2,c
  2756  001760  EFB4  F00B         	goto	u971
  2757  001764  EFB6  F00B         	goto	u970
  2758  001768                     u971:
  2759  001768  EFC6  F00B         	goto	l1793
  2760  00176C                     u970:
  2761  00176C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2762  00176E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2763  001770  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2764  001772  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2765  001774  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2766  001776  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2767  001778  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2768  00177A  6C13               	negf	___aodiv@quotient^0,c
  2769  00177C  0E00               	movlw	0
  2770  00177E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2771  001780  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2772  001782  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2773  001784  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2774  001786  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2775  001788  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2776  00178A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2777  00178C                     l1793:
  2778  00178C  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2779  001790  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2780  001794  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2781  001798  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2782  00179C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2783  0017A0  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2784  0017A4  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2785  0017A8  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2786  0017AC  0012               	return		;funcret
  2787  0017AE                     __end_of___aodiv:
  2788                           	callstack 0
  2789                           
  2790 ;; *************** function _atoi *****************
  2791 ;; Defined at:
  2792 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;  s               2   10[COMRAM] PTR const unsigned char 
  2795 ;;		 -> STR_1(8), 
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  n               2   23[COMRAM] int 
  2798 ;;  neg             2   16[COMRAM] int 
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  2   10[COMRAM] int 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2808 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2809 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2810 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2811 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2812 ;;Total ram usage:       15 bytes
  2813 ;; Hardware stack levels used: 1
  2814 ;; Hardware stack levels required when called: 1
  2815 ;; This function calls:
  2816 ;;		___wmul
  2817 ;;		_isdigit
  2818 ;;		_isspace
  2819 ;; This function is called by:
  2820 ;;		_vfpfcnvrt
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text13
  2825  001482                     __ptext13:
  2826                           	callstack 0
  2827  001482                     _atoi:
  2828                           	callstack 26
  2829  001482  0E00               	movlw	0
  2830  001484  6E19               	movwf	(atoi@n+1)^0,c
  2831  001486  0E00               	movlw	0
  2832  001488  6E18               	movwf	atoi@n^0,c
  2833  00148A  0E00               	movlw	0
  2834  00148C  6E12               	movwf	(atoi@neg+1)^0,c
  2835  00148E  0E00               	movlw	0
  2836  001490  6E11               	movwf	atoi@neg^0,c
  2837  001492  EF4D  F00A         	goto	l1947
  2838  001496                     l1945:
  2839  001496  4A0B               	infsnz	atoi@s^0,f,c
  2840  001498  2A0C               	incf	(atoi@s+1)^0,f,c
  2841  00149A                     l1947:
  2842  00149A  0E01               	movlw	1
  2843  00149C  6E17               	movwf	_atoi$1196^0,c
  2844  00149E  C00B  FFF6         	movff	atoi@s,tblptrl
  2845  0014A2  C00C  FFF7         	movff	atoi@s+1,tblptrh
  2846  0014A6                     	if	0	;tblptru may be non-zero
  2847  0014A6                     	endif
  2848  0014A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2849  0014A6  0E00               	movlw	low (__mediumconst shr (0+16))
  2850  0014A8  6EF8               	movwf	tblptru,c
  2851  0014AA                     	endif
  2852  0014AA  0008               	tblrd		*
  2853  0014AC  50F5               	movf	tablat,w,c
  2854  0014AE  0A20               	xorlw	32
  2855  0014B0  B4D8               	btfsc	status,2,c
  2856  0014B2  EF5D  F00A         	goto	u1281
  2857  0014B6  EF5F  F00A         	goto	u1280
  2858  0014BA                     u1281:
  2859  0014BA  EF7E  F00A         	goto	l1955
  2860  0014BE                     u1280:
  2861  0014BE  0EF7               	movlw	247
  2862  0014C0  6E0D               	movwf	??_atoi^0,c
  2863  0014C2  0EFF               	movlw	255
  2864  0014C4  6E0E               	movwf	(??_atoi+1)^0,c
  2865  0014C6  C00B  FFF6         	movff	atoi@s,tblptrl
  2866  0014CA  C00C  FFF7         	movff	atoi@s+1,tblptrh
  2867  0014CE                     	if	0	;tblptru may be non-zero
  2868  0014CE                     	endif
  2869  0014CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2870  0014CE  0E00               	movlw	low (__mediumconst shr (0+16))
  2871  0014D0  6EF8               	movwf	tblptru,c
  2872  0014D2                     	endif
  2873  0014D2  0008               	tblrd		*
  2874  0014D4  50F5               	movf	tablat,w,c
  2875  0014D6  6E0F               	movwf	(??_atoi+2)^0,c
  2876  0014D8  6A10               	clrf	(??_atoi+3)^0,c
  2877  0014DA  500D               	movf	??_atoi^0,w,c
  2878  0014DC  260F               	addwf	(??_atoi+2)^0,f,c
  2879  0014DE  500E               	movf	(??_atoi+1)^0,w,c
  2880  0014E0  2210               	addwfc	(??_atoi+3)^0,f,c
  2881  0014E2  5010               	movf	(??_atoi+3)^0,w,c
  2882  0014E4  E109               	bnz	u1290
  2883  0014E6  0E05               	movlw	5
  2884  0014E8  5C0F               	subwf	(??_atoi+2)^0,w,c
  2885  0014EA  A0D8               	btfss	status,0,c
  2886  0014EC  EF7A  F00A         	goto	u1291
  2887  0014F0  EF7C  F00A         	goto	u1290
  2888  0014F4                     u1291:
  2889  0014F4  EF7E  F00A         	goto	l1955
  2890  0014F8                     u1290:
  2891  0014F8  0E00               	movlw	0
  2892  0014FA  6E17               	movwf	_atoi$1196^0,c
  2893  0014FC                     l1955:
  2894  0014FC  C017  F013         	movff	_atoi$1196,_atoi$1195
  2895  001500  6A14               	clrf	(_atoi$1195+1)^0,c
  2896  001502  5013               	movf	_atoi$1195^0,w,c
  2897  001504  1014               	iorwf	(_atoi$1195+1)^0,w,c
  2898  001506  A4D8               	btfss	status,2,c
  2899  001508  EF88  F00A         	goto	u1301
  2900  00150C  EF8A  F00A         	goto	u1300
  2901  001510                     u1301:
  2902  001510  EF4B  F00A         	goto	l1945
  2903  001514                     u1300:
  2904  001514  EF94  F00A         	goto	l1965
  2905  001518                     l1961:
  2906  001518  0E00               	movlw	0
  2907  00151A  6E12               	movwf	(atoi@neg+1)^0,c
  2908  00151C  0E01               	movlw	1
  2909  00151E  6E11               	movwf	atoi@neg^0,c
  2910  001520                     l1963:
  2911  001520  4A0B               	infsnz	atoi@s^0,f,c
  2912  001522  2A0C               	incf	(atoi@s+1)^0,f,c
  2913  001524  EFCD  F00A         	goto	l1971
  2914  001528                     l1965:
  2915  001528  C00B  FFF6         	movff	atoi@s,tblptrl
  2916  00152C  C00C  FFF7         	movff	atoi@s+1,tblptrh
  2917  001530                     	if	0	;tblptru may be non-zero
  2918  001530                     	endif
  2919  001530                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2920  001530  0E00               	movlw	low (__mediumconst shr (0+16))
  2921  001532  6EF8               	movwf	tblptru,c
  2922  001534                     	endif
  2923  001534  0008               	tblrd		*
  2924  001536  50F5               	movf	tablat,w,c
  2925  001538  6E0D               	movwf	??_atoi^0,c
  2926  00153A  6A0E               	clrf	(??_atoi+1)^0,c
  2927                           
  2928                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2929                           ; Switch size 1, requested type "simple"
  2930                           ; Number of cases is 1, Range of values is 0 to 0
  2931                           ; switch strategies available:
  2932                           ; Name         Instructions Cycles
  2933                           ; simple_byte            4     3 (average)
  2934                           ;	Chosen strategy is simple_byte
  2935  00153C  500E               	movf	(??_atoi+1)^0,w,c
  2936  00153E  0A00               	xorlw	0	; case 0
  2937  001540  B4D8               	btfsc	status,2,c
  2938  001542  EFA5  F00A         	goto	l2367
  2939  001546  EFCD  F00A         	goto	l1971
  2940  00154A                     l2367:
  2941                           
  2942                           ; Switch size 1, requested type "simple"
  2943                           ; Number of cases is 2, Range of values is 43 to 45
  2944                           ; switch strategies available:
  2945                           ; Name         Instructions Cycles
  2946                           ; simple_byte            7     4 (average)
  2947                           ;	Chosen strategy is simple_byte
  2948  00154A  500D               	movf	??_atoi^0,w,c
  2949  00154C  0A2B               	xorlw	43	; case 43
  2950  00154E  B4D8               	btfsc	status,2,c
  2951  001550  EF90  F00A         	goto	l1963
  2952  001554  0A06               	xorlw	6	; case 45
  2953  001556  B4D8               	btfsc	status,2,c
  2954  001558  EF8C  F00A         	goto	l1961
  2955  00155C  EFCD  F00A         	goto	l1971
  2956  001560                     l1967:
  2957  001560  C018  F005         	movff	atoi@n,___wmul@multiplier
  2958  001564  C019  F006         	movff	atoi@n+1,___wmul@multiplier+1
  2959  001568  0E00               	movlw	0
  2960  00156A  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  2961  00156C  0E0A               	movlw	10
  2962  00156E  6E07               	movwf	___wmul@multiplicand^0,c
  2963  001570  ECEE  F00F         	call	___wmul	;wreg free
  2964  001574  C00B  FFF6         	movff	atoi@s,tblptrl
  2965  001578  C00C  FFF7         	movff	atoi@s+1,tblptrh
  2966  00157C                     	if	0	;tblptru may be non-zero
  2967  00157C                     	endif
  2968  00157C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2969  00157C  0E00               	movlw	low (__mediumconst shr (0+16))
  2970  00157E  6EF8               	movwf	tblptru,c
  2971  001580                     	endif
  2972  001580  0008               	tblrd		*
  2973  001582  50F5               	movf	tablat,w,c
  2974  001584  5E05               	subwf	?___wmul^0,f,c
  2975  001586  0E00               	movlw	0
  2976  001588  5A06               	subwfb	(?___wmul+1)^0,f,c
  2977  00158A  0E30               	movlw	48
  2978  00158C  2405               	addwf	?___wmul^0,w,c
  2979  00158E  6E18               	movwf	atoi@n^0,c
  2980  001590  0E00               	movlw	0
  2981  001592  2006               	addwfc	(?___wmul+1)^0,w,c
  2982  001594  6E19               	movwf	(atoi@n+1)^0,c
  2983  001596  EF90  F00A         	goto	l1963
  2984  00159A                     l1971:
  2985  00159A  0ED0               	movlw	208
  2986  00159C  6E0D               	movwf	??_atoi^0,c
  2987  00159E  0EFF               	movlw	255
  2988  0015A0  6E0E               	movwf	(??_atoi+1)^0,c
  2989  0015A2  C00B  FFF6         	movff	atoi@s,tblptrl
  2990  0015A6  C00C  FFF7         	movff	atoi@s+1,tblptrh
  2991  0015AA                     	if	0	;tblptru may be non-zero
  2992  0015AA                     	endif
  2993  0015AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2994  0015AA  0E00               	movlw	low (__mediumconst shr (0+16))
  2995  0015AC  6EF8               	movwf	tblptru,c
  2996  0015AE                     	endif
  2997  0015AE  0008               	tblrd		*
  2998  0015B0  50F5               	movf	tablat,w,c
  2999  0015B2  6E0F               	movwf	(??_atoi+2)^0,c
  3000  0015B4  6A10               	clrf	(??_atoi+3)^0,c
  3001  0015B6  500D               	movf	??_atoi^0,w,c
  3002  0015B8  260F               	addwf	(??_atoi+2)^0,f,c
  3003  0015BA  500E               	movf	(??_atoi+1)^0,w,c
  3004  0015BC  2210               	addwfc	(??_atoi+3)^0,f,c
  3005  0015BE  5010               	movf	(??_atoi+3)^0,w,c
  3006  0015C0  E10A               	bnz	u1310
  3007  0015C2  0E0A               	movlw	10
  3008  0015C4  5C0F               	subwf	(??_atoi+2)^0,w,c
  3009  0015C6  A0D8               	btfss	status,0,c
  3010  0015C8  EFE8  F00A         	goto	u1311
  3011  0015CC  EFEB  F00A         	goto	u1310
  3012  0015D0                     u1311:
  3013  0015D0  0E01               	movlw	1
  3014  0015D2  EFEC  F00A         	goto	u1320
  3015  0015D6                     u1310:
  3016  0015D6  0E00               	movlw	0
  3017  0015D8                     u1320:
  3018  0015D8  6E15               	movwf	_atoi$1197^0,c
  3019  0015DA  6A16               	clrf	(_atoi$1197+1)^0,c
  3020  0015DC  5015               	movf	_atoi$1197^0,w,c
  3021  0015DE  1016               	iorwf	(_atoi$1197+1)^0,w,c
  3022  0015E0  A4D8               	btfss	status,2,c
  3023  0015E2  EFF5  F00A         	goto	u1331
  3024  0015E6  EFF7  F00A         	goto	u1330
  3025  0015EA                     u1331:
  3026  0015EA  EFB0  F00A         	goto	l1967
  3027  0015EE                     u1330:
  3028  0015EE  5011               	movf	atoi@neg^0,w,c
  3029  0015F0  1012               	iorwf	(atoi@neg+1)^0,w,c
  3030  0015F2  A4D8               	btfss	status,2,c
  3031  0015F4  EFFE  F00A         	goto	u1341
  3032  0015F8  EF00  F00B         	goto	u1340
  3033  0015FC                     u1341:
  3034  0015FC  EF0E  F00B         	goto	l1021
  3035  001600                     u1340:
  3036  001600  C018  F00D         	movff	atoi@n,??_atoi
  3037  001604  C019  F00E         	movff	atoi@n+1,??_atoi+1
  3038  001608  1E0D               	comf	??_atoi^0,f,c
  3039  00160A  1E0E               	comf	(??_atoi+1)^0,f,c
  3040  00160C  4A0D               	infsnz	??_atoi^0,f,c
  3041  00160E  2A0E               	incf	(??_atoi+1)^0,f,c
  3042  001610  C00D  F00B         	movff	??_atoi,?_atoi
  3043  001614  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  3044  001618  EF12  F00B         	goto	l1024
  3045  00161C                     l1021:
  3046  00161C  C018  F00B         	movff	atoi@n,?_atoi
  3047  001620  C019  F00C         	movff	atoi@n+1,?_atoi+1
  3048  001624                     l1024:
  3049  001624  0012               	return		;funcret
  3050  001626                     __end_of_atoi:
  3051                           	callstack 0
  3052                           
  3053 ;; *************** function _isspace *****************
  3054 ;; Defined at:
  3055 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  c               2    0[COMRAM] int 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;		None
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  2    0[COMRAM] int 
  3062 ;; Registers used:
  3063 ;;		wreg, status,2, status,0
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3069 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3071 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3072 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3073 ;;Total ram usage:        7 bytes
  3074 ;; Hardware stack levels used: 1
  3075 ;; This function calls:
  3076 ;;		Nothing
  3077 ;; This function is called by:
  3078 ;;		_atoi
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           	psect	text14
  3083  001DCE                     __ptext14:
  3084                           	callstack 0
  3085  001DCE                     _isspace:
  3086                           	callstack 26
  3087  001DCE  0E01               	movlw	1
  3088  001DD0  6E07               	movwf	_isspace$1213^0,c
  3089  001DD2  0E20               	movlw	32
  3090  001DD4  1801               	xorwf	isspace@c^0,w,c
  3091  001DD6  1002               	iorwf	(isspace@c+1)^0,w,c
  3092  001DD8  B4D8               	btfsc	status,2,c
  3093  001DDA  EFF1  F00E         	goto	u1111
  3094  001DDE  EFF3  F00E         	goto	u1110
  3095  001DE2                     u1111:
  3096  001DE2  EF0C  F00F         	goto	l1871
  3097  001DE6                     u1110:
  3098  001DE6  0EF7               	movlw	247
  3099  001DE8  6E03               	movwf	??_isspace^0,c
  3100  001DEA  0EFF               	movlw	255
  3101  001DEC  6E04               	movwf	(??_isspace+1)^0,c
  3102  001DEE  C001  F005         	movff	isspace@c,??_isspace+2
  3103  001DF2  C002  F006         	movff	isspace@c+1,??_isspace+3
  3104  001DF6  5003               	movf	??_isspace^0,w,c
  3105  001DF8  2605               	addwf	(??_isspace+2)^0,f,c
  3106  001DFA  5004               	movf	(??_isspace+1)^0,w,c
  3107  001DFC  2206               	addwfc	(??_isspace+3)^0,f,c
  3108  001DFE  5006               	movf	(??_isspace+3)^0,w,c
  3109  001E00  E109               	bnz	u1120
  3110  001E02  0E05               	movlw	5
  3111  001E04  5C05               	subwf	(??_isspace+2)^0,w,c
  3112  001E06  A0D8               	btfss	status,0,c
  3113  001E08  EF08  F00F         	goto	u1121
  3114  001E0C  EF0A  F00F         	goto	u1120
  3115  001E10                     u1121:
  3116  001E10  EF0C  F00F         	goto	l1871
  3117  001E14                     u1120:
  3118  001E14  0E00               	movlw	0
  3119  001E16  6E07               	movwf	_isspace$1213^0,c
  3120  001E18                     l1871:
  3121  001E18  C007  F001         	movff	_isspace$1213,?_isspace
  3122  001E1C  6A02               	clrf	(?_isspace+1)^0,c
  3123  001E1E  0012               	return		;funcret
  3124  001E20                     __end_of_isspace:
  3125                           	callstack 0
  3126                           
  3127 ;; *************** function _isdigit *****************
  3128 ;; Defined at:
  3129 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  c               2    0[COMRAM] int 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  2    0[COMRAM] int 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3145 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3146 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3147 ;;Total ram usage:        6 bytes
  3148 ;; Hardware stack levels used: 1
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_vfpfcnvrt
  3153 ;;		_atoi
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text15
  3158  001EA4                     __ptext15:
  3159                           	callstack 0
  3160  001EA4                     _isdigit:
  3161                           	callstack 27
  3162  001EA4  0ED0               	movlw	208
  3163  001EA6  6E03               	movwf	??_isdigit^0,c
  3164  001EA8  0EFF               	movlw	255
  3165  001EAA  6E04               	movwf	(??_isdigit+1)^0,c
  3166  001EAC  C001  F005         	movff	isdigit@c,??_isdigit+2
  3167  001EB0  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  3168  001EB4  5003               	movf	??_isdigit^0,w,c
  3169  001EB6  2605               	addwf	(??_isdigit+2)^0,f,c
  3170  001EB8  5004               	movf	(??_isdigit+1)^0,w,c
  3171  001EBA  2206               	addwfc	(??_isdigit+3)^0,f,c
  3172  001EBC  5006               	movf	(??_isdigit+3)^0,w,c
  3173  001EBE  E10A               	bnz	u1090
  3174  001EC0  0E0A               	movlw	10
  3175  001EC2  5C05               	subwf	(??_isdigit+2)^0,w,c
  3176  001EC4  A0D8               	btfss	status,0,c
  3177  001EC6  EF67  F00F         	goto	u1091
  3178  001ECA  EF6A  F00F         	goto	u1090
  3179  001ECE                     u1091:
  3180  001ECE  0E01               	movlw	1
  3181  001ED0  EF6B  F00F         	goto	u1100
  3182  001ED4                     u1090:
  3183  001ED4  0E00               	movlw	0
  3184  001ED6                     u1100:
  3185  001ED6  6E01               	movwf	?_isdigit^0,c
  3186  001ED8  6A02               	clrf	(?_isdigit+1)^0,c
  3187  001EDA  0012               	return		;funcret
  3188  001EDC                     __end_of_isdigit:
  3189                           	callstack 0
  3190                           
  3191 ;; *************** function ___wmul *****************
  3192 ;; Defined at:
  3193 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  multiplier      2    4[COMRAM] unsigned int 
  3196 ;;  multiplicand    2    6[COMRAM] unsigned int 
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;  product         2    8[COMRAM] unsigned int 
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  2    4[COMRAM] unsigned int 
  3201 ;; Registers used:
  3202 ;;		wreg, status,2, status,0, prodl, prodh
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3208 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3209 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3211 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3212 ;;Total ram usage:        6 bytes
  3213 ;; Hardware stack levels used: 1
  3214 ;; This function calls:
  3215 ;;		Nothing
  3216 ;; This function is called by:
  3217 ;;		_main
  3218 ;;		_atoi
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text16
  3223  001FDC                     __ptext16:
  3224                           	callstack 0
  3225  001FDC                     ___wmul:
  3226                           	callstack 26
  3227  001FDC  5005               	movf	___wmul@multiplier^0,w,c
  3228  001FDE  0207               	mulwf	___wmul@multiplicand^0,c
  3229  001FE0  CFF3 F009          	movff	prodl,___wmul@product
  3230  001FE4  CFF4 F00A          	movff	prodh,___wmul@product+1
  3231  001FE8  5005               	movf	___wmul@multiplier^0,w,c
  3232  001FEA  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  3233  001FEC  50F3               	movf	243,w,c
  3234  001FEE  260A               	addwf	(___wmul@product+1)^0,f,c
  3235  001FF0  5006               	movf	(___wmul@multiplier+1)^0,w,c
  3236  001FF2  0207               	mulwf	___wmul@multiplicand^0,c
  3237  001FF4  50F3               	movf	243,w,c
  3238  001FF6  260A               	addwf	(___wmul@product+1)^0,f,c
  3239  001FF8  C009  F005         	movff	___wmul@product,?___wmul
  3240  001FFC  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  3241  002000  0012               	return		;funcret
  3242  002002                     __end_of___wmul:
  3243                           	callstack 0
  3244                           
  3245 ;; *************** function _sendStringSerial4 *****************
  3246 ;; Defined at:
  3247 ;;		line 36 in file "serial.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  string          2    1[COMRAM] PTR unsigned char 
  3250 ;;		 -> main@buf(10), 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;		None
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  1    wreg      void 
  3255 ;; Registers used:
  3256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3262 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3265 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3266 ;;Total ram usage:        2 bytes
  3267 ;; Hardware stack levels used: 1
  3268 ;; Hardware stack levels required when called: 1
  3269 ;; This function calls:
  3270 ;;		_sendCharSerial4
  3271 ;; This function is called by:
  3272 ;;		_main
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text17
  3277  001F7C                     __ptext17:
  3278                           	callstack 0
  3279  001F7C                     _sendStringSerial4:
  3280                           	callstack 29
  3281  001F7C                     
  3282                           ;serial.c: 39:     while(*string != 0){
  3283  001F7C  EFC9  F00F         	goto	l2207
  3284  001F80                     l2203:
  3285                           
  3286                           ;serial.c: 40:         sendCharSerial4(*string++);
  3287  001F80  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3288  001F84  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3289  001F88  50DF               	movf	indf2,w,c
  3290  001F8A  EC1D  F010         	call	_sendCharSerial4
  3291  001F8E  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3292  001F90  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3293  001F92                     l2207:
  3294                           
  3295                           ;serial.c: 39:     while(*string != 0){
  3296  001F92  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3297  001F96  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3298  001F9A  50DF               	movf	indf2,w,c
  3299  001F9C  A4D8               	btfss	status,2,c
  3300  001F9E  EFD3  F00F         	goto	u1551
  3301  001FA2  EFD5  F00F         	goto	u1550
  3302  001FA6                     u1551:
  3303  001FA6  EFC0  F00F         	goto	l2203
  3304  001FAA                     u1550:
  3305  001FAA  0012               	return		;funcret
  3306  001FAC                     __end_of_sendStringSerial4:
  3307                           	callstack 0
  3308                           
  3309 ;; *************** function _sendCharSerial4 *****************
  3310 ;; Defined at:
  3311 ;;		line 29 in file "serial.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  charToSend      1    wreg     unsigned char 
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;  charToSend      1    0[COMRAM] unsigned char 
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      void 
  3318 ;; Registers used:
  3319 ;;		wreg
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3328 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3329 ;;Total ram usage:        1 bytes
  3330 ;; Hardware stack levels used: 1
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_sendStringSerial4
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text18
  3339  00203A                     __ptext18:
  3340                           	callstack 0
  3341  00203A                     _sendCharSerial4:
  3342                           	callstack 29
  3343                           
  3344                           ;incstack = 0
  3345                           ;sendCharSerial4@charToSend stored from wreg
  3346  00203A  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3347  00203C                     l148:
  3348  00203C  010E               	movlb	14	; () banked
  3349  00203E  A537               	btfss	55,2,b	;volatile
  3350  002040  EF24  F010         	goto	u1511
  3351  002044  EF26  F010         	goto	u1510
  3352  002048                     u1511:
  3353  002048  EF1E  F010         	goto	l148
  3354  00204C                     u1510:
  3355  00204C                     
  3356                           ; BSR set to: 14
  3357                           ;serial.c: 31:     TX4REG = charToSend;
  3358  00204C  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3359  002050                     
  3360                           ; BSR set to: 14
  3361  002050  0012               	return		;funcret
  3362  002052                     __end_of_sendCharSerial4:
  3363                           	callstack 0
  3364                           
  3365 ;; *************** function _initUSART4 *****************
  3366 ;; Defined at:
  3367 ;;		line 5 in file "serial.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;		None
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3385 ;;Total ram usage:        0 bytes
  3386 ;; Hardware stack levels used: 1
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_main
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text19
  3395  002002                     __ptext19:
  3396                           	callstack 0
  3397  002002                     _initUSART4:
  3398                           	callstack 30
  3399  002002                     
  3400                           ;serial.c: 9:     RC0PPS = 0x12;
  3401  002002  0E12               	movlw	18
  3402  002004  010E               	movlb	14	; () banked
  3403  002006  6F62               	movwf	98,b	;volatile
  3404                           
  3405                           ;serial.c: 10:     RX4PPS = 0x11;
  3406  002008  0E11               	movlw	17
  3407  00200A  6F15               	movwf	21,b	;volatile
  3408  00200C                     
  3409                           ; BSR set to: 14
  3410                           ;serial.c: 12:     BAUD4CONbits.BRG16 = 0;
  3411  00200C  97E9               	bcf	233,3,b	;volatile
  3412  00200E                     
  3413                           ; BSR set to: 14
  3414                           ;serial.c: 13:     TX4STAbits.BRGH = 0;
  3415  00200E  95E8               	bcf	232,2,b	;volatile
  3416                           
  3417                           ;serial.c: 14:     SP4BRGL = 51;
  3418  002010  0E33               	movlw	51
  3419  002012  6FE5               	movwf	229,b	;volatile
  3420                           
  3421                           ;serial.c: 15:     SP4BRGH = 0;
  3422  002014  0E00               	movlw	0
  3423  002016  6FE6               	movwf	230,b	;volatile
  3424  002018                     
  3425                           ; BSR set to: 14
  3426                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  3427  002018  89E7               	bsf	231,4,b	;volatile
  3428  00201A                     
  3429                           ; BSR set to: 14
  3430                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  3431  00201A  8BE8               	bsf	232,5,b	;volatile
  3432  00201C                     
  3433                           ; BSR set to: 14
  3434                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  3435  00201C  8FE7               	bsf	231,7,b	;volatile
  3436  00201E                     
  3437                           ; BSR set to: 14
  3438  00201E  0012               	return		;funcret
  3439  002020                     __end_of_initUSART4:
  3440                           	callstack 0
  3441                           
  3442 ;; *************** function ___lwdiv *****************
  3443 ;; Defined at:
  3444 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;  dividend        2   10[COMRAM] unsigned int 
  3447 ;;  divisor         2   12[COMRAM] unsigned int 
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;  quotient        2   14[COMRAM] unsigned int 
  3450 ;;  counter         1   16[COMRAM] unsigned char 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  2   10[COMRAM] unsigned int 
  3453 ;; Registers used:
  3454 ;;		wreg, status,2, status,0
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3460 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3461 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3463 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3464 ;;Total ram usage:        7 bytes
  3465 ;; Hardware stack levels used: 1
  3466 ;; This function calls:
  3467 ;;		Nothing
  3468 ;; This function is called by:
  3469 ;;		_main
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text20
  3474  001C3A                     __ptext20:
  3475                           	callstack 0
  3476  001C3A                     ___lwdiv:
  3477                           	callstack 30
  3478  001C3A  0E00               	movlw	0
  3479  001C3C  6E10               	movwf	(___lwdiv@quotient+1)^0,c
  3480  001C3E  0E00               	movlw	0
  3481  001C40  6E0F               	movwf	___lwdiv@quotient^0,c
  3482  001C42  500D               	movf	___lwdiv@divisor^0,w,c
  3483  001C44  100E               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3484  001C46  B4D8               	btfsc	status,2,c
  3485  001C48  EF28  F00E         	goto	u1581
  3486  001C4C  EF2A  F00E         	goto	u1580
  3487  001C50                     u1581:
  3488  001C50  EF52  F00E         	goto	l701
  3489  001C54                     u1580:
  3490  001C54  0E01               	movlw	1
  3491  001C56  6E11               	movwf	___lwdiv@counter^0,c
  3492  001C58  EF32  F00E         	goto	l2221
  3493  001C5C                     l2219:
  3494  001C5C  90D8               	bcf	status,0,c
  3495  001C5E  360D               	rlcf	___lwdiv@divisor^0,f,c
  3496  001C60  360E               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3497  001C62  2A11               	incf	___lwdiv@counter^0,f,c
  3498  001C64                     l2221:
  3499  001C64  AE0E               	btfss	(___lwdiv@divisor+1)^0,7,c
  3500  001C66  EF37  F00E         	goto	u1591
  3501  001C6A  EF39  F00E         	goto	u1590
  3502  001C6E                     u1591:
  3503  001C6E  EF2E  F00E         	goto	l2219
  3504  001C72                     u1590:
  3505  001C72                     l2223:
  3506  001C72  90D8               	bcf	status,0,c
  3507  001C74  360F               	rlcf	___lwdiv@quotient^0,f,c
  3508  001C76  3610               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3509  001C78  500D               	movf	___lwdiv@divisor^0,w,c
  3510  001C7A  5C0B               	subwf	___lwdiv@dividend^0,w,c
  3511  001C7C  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  3512  001C7E  580C               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3513  001C80  A0D8               	btfss	status,0,c
  3514  001C82  EF45  F00E         	goto	u1601
  3515  001C86  EF47  F00E         	goto	u1600
  3516  001C8A                     u1601:
  3517  001C8A  EF4C  F00E         	goto	l2231
  3518  001C8E                     u1600:
  3519  001C8E  500D               	movf	___lwdiv@divisor^0,w,c
  3520  001C90  5E0B               	subwf	___lwdiv@dividend^0,f,c
  3521  001C92  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  3522  001C94  5A0C               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3523  001C96  800F               	bsf	___lwdiv@quotient^0,0,c
  3524  001C98                     l2231:
  3525  001C98  90D8               	bcf	status,0,c
  3526  001C9A  320E               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3527  001C9C  320D               	rrcf	___lwdiv@divisor^0,f,c
  3528  001C9E  2E11               	decfsz	___lwdiv@counter^0,f,c
  3529  001CA0  EF39  F00E         	goto	l2223
  3530  001CA4                     l701:
  3531  001CA4  C00F  F00B         	movff	___lwdiv@quotient,?___lwdiv
  3532  001CA8  C010  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3533  001CAC  0012               	return		;funcret
  3534  001CAE                     __end_of___lwdiv:
  3535                           	callstack 0
  3536                           
  3537 ;; *************** function _LCD_sendstring *****************
  3538 ;; Defined at:
  3539 ;;		line 144 in file "LCD.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;  string          2    4[COMRAM] PTR unsigned char 
  3542 ;;		 -> main@buf(10), 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  i               2    0        unsigned int 
  3545 ;;  count           2    0        unsigned int 
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  1    wreg      void 
  3548 ;; Registers used:
  3549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3555 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3558 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3559 ;;Total ram usage:        2 bytes
  3560 ;; Hardware stack levels used: 1
  3561 ;; Hardware stack levels required when called: 3
  3562 ;; This function calls:
  3563 ;;		_LCD_sendbyte
  3564 ;; This function is called by:
  3565 ;;		_main
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text21
  3570  001F48                     __ptext21:
  3571                           	callstack 0
  3572  001F48                     _LCD_sendstring:
  3573                           	callstack 27
  3574  001F48                     
  3575                           ;LCD.c: 151:     while(*string != 0){
  3576  001F48  EFB1  F00F         	goto	l2155
  3577  001F4C                     l2151:
  3578                           
  3579                           ;LCD.c: 152:         LCD_sendbyte(*string++, 1);
  3580  001F4C  0E01               	movlw	1
  3581  001F4E  6E02               	movwf	LCD_sendbyte@type^0,c
  3582  001F50  C005  FFD9         	movff	LCD_sendstring@string,fsr2l
  3583  001F54  C006  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  3584  001F58  50DF               	movf	indf2,w,c
  3585  001F5A  EC89  F00F         	call	_LCD_sendbyte
  3586  001F5E  4A05               	infsnz	LCD_sendstring@string^0,f,c
  3587  001F60  2A06               	incf	(LCD_sendstring@string+1)^0,f,c
  3588  001F62                     l2155:
  3589                           
  3590                           ;LCD.c: 151:     while(*string != 0){
  3591  001F62  C005  FFD9         	movff	LCD_sendstring@string,fsr2l
  3592  001F66  C006  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  3593  001F6A  50DF               	movf	indf2,w,c
  3594  001F6C  A4D8               	btfss	status,2,c
  3595  001F6E  EFBB  F00F         	goto	u1531
  3596  001F72  EFBD  F00F         	goto	u1530
  3597  001F76                     u1531:
  3598  001F76  EFA6  F00F         	goto	l2151
  3599  001F7A                     u1530:
  3600  001F7A  0012               	return		;funcret
  3601  001F7C                     __end_of_LCD_sendstring:
  3602                           	callstack 0
  3603                           
  3604 ;; *************** function _LCD_Init *****************
  3605 ;; Defined at:
  3606 ;;		line 73 in file "LCD.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;		None
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;		None
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  1    wreg      void 
  3613 ;; Registers used:
  3614 ;;		wreg, status,2, status,0, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3622 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3623 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3624 ;;Total ram usage:        2 bytes
  3625 ;; Hardware stack levels used: 1
  3626 ;; Hardware stack levels required when called: 3
  3627 ;; This function calls:
  3628 ;;		_LCD_sendbyte
  3629 ;;		_LCD_sendnibble
  3630 ;; This function is called by:
  3631 ;;		_main
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text22
  3636  001BA2                     __ptext22:
  3637                           	callstack 0
  3638  001BA2                     _LCD_Init:
  3639                           	callstack 27
  3640  001BA2                     
  3641                           ;LCD.c: 80:     TRISCbits.TRISC6 = 0;
  3642  001BA2  9C83               	bcf	131,6,c	;volatile
  3643                           
  3644                           ;LCD.c: 81:     TRISCbits.TRISC2 = 0;
  3645  001BA4  9483               	bcf	131,2,c	;volatile
  3646                           
  3647                           ;LCD.c: 82:     TRISBbits.TRISB3 = 0;
  3648  001BA6  9682               	bcf	130,3,c	;volatile
  3649                           
  3650                           ;LCD.c: 83:     TRISBbits.TRISB2 = 0;
  3651  001BA8  9482               	bcf	130,2,c	;volatile
  3652                           
  3653                           ;LCD.c: 84:     TRISEbits.TRISE3 = 0;
  3654  001BAA  9685               	bcf	133,3,c	;volatile
  3655                           
  3656                           ;LCD.c: 85:     TRISEbits.TRISE1 = 0;
  3657  001BAC  9285               	bcf	133,1,c	;volatile
  3658                           
  3659                           ;LCD.c: 88:     LATCbits.LATC6 = 0;
  3660  001BAE  9C7B               	bcf	123,6,c	;volatile
  3661                           
  3662                           ;LCD.c: 89:     LATCbits.LATC2 = 0;
  3663  001BB0  947B               	bcf	123,2,c	;volatile
  3664                           
  3665                           ;LCD.c: 90:     LATBbits.LATB3 = 0;
  3666  001BB2  967A               	bcf	122,3,c	;volatile
  3667                           
  3668                           ;LCD.c: 91:     LATBbits.LATB2 = 0;
  3669  001BB4  947A               	bcf	122,2,c	;volatile
  3670                           
  3671                           ;LCD.c: 92:     LATEbits.LATE3 = 0;
  3672  001BB6  967D               	bcf	125,3,c	;volatile
  3673                           
  3674                           ;LCD.c: 93:     LATEbits.LATE1 = 0;
  3675  001BB8  927D               	bcf	125,1,c	;volatile
  3676  001BBA                     
  3677                           ;LCD.c: 102:     _delay((unsigned long)((41)*(64000000/4000.0)));
  3678  001BBA  0E04               	movlw	4
  3679  001BBC  6E06               	movwf	(??_LCD_Init+1)^0,c
  3680  001BBE  0E54               	movlw	84
  3681  001BC0  6E05               	movwf	??_LCD_Init^0,c
  3682  001BC2  0EEE               	movlw	238
  3683  001BC4                     u1707:
  3684  001BC4  2EE8               	decfsz	wreg,f,c
  3685  001BC6  D7FE               	bra	u1707
  3686  001BC8  2E05               	decfsz	??_LCD_Init^0,f,c
  3687  001BCA  D7FC               	bra	u1707
  3688  001BCC  2E06               	decfsz	(??_LCD_Init+1)^0,f,c
  3689  001BCE  D7FA               	bra	u1707
  3690  001BD0  D000               	nop2	
  3691  001BD2                     
  3692                           ;LCD.c: 104:     LCD_sendnibble(0b0011);
  3693  001BD2  0E03               	movlw	3
  3694  001BD4  EC57  F00E         	call	_LCD_sendnibble
  3695  001BD8                     
  3696                           ;LCD.c: 105:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  3697  001BD8  0ED5               	movlw	213
  3698  001BDA                     u1717:
  3699  001BDA  2EE8               	decfsz	wreg,f,c
  3700  001BDC  D7FE               	bra	u1717
  3701  001BDE  F000               	nop	
  3702  001BE0                     
  3703                           ;LCD.c: 106:     LCD_sendbyte(0b00101000,0);
  3704  001BE0  0E00               	movlw	0
  3705  001BE2  6E02               	movwf	LCD_sendbyte@type^0,c
  3706  001BE4  0E28               	movlw	40
  3707  001BE6  EC89  F00F         	call	_LCD_sendbyte
  3708  001BEA                     
  3709                           ;LCD.c: 107:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  3710  001BEA  0ED5               	movlw	213
  3711  001BEC                     u1727:
  3712  001BEC  2EE8               	decfsz	wreg,f,c
  3713  001BEE  D7FE               	bra	u1727
  3714  001BF0  F000               	nop	
  3715  001BF2                     
  3716                           ;LCD.c: 108:     LCD_sendbyte(0b00101000,0);
  3717  001BF2  0E00               	movlw	0
  3718  001BF4  6E02               	movwf	LCD_sendbyte@type^0,c
  3719  001BF6  0E28               	movlw	40
  3720  001BF8  EC89  F00F         	call	_LCD_sendbyte
  3721  001BFC                     
  3722                           ;LCD.c: 109:     _delay((unsigned long)((38)*(64000000/4000000.0)));
  3723  001BFC  0ECA               	movlw	202
  3724  001BFE                     u1737:
  3725  001BFE  2EE8               	decfsz	wreg,f,c
  3726  001C00  D7FE               	bra	u1737
  3727  001C02  D000               	nop2	
  3728  001C04                     
  3729                           ;LCD.c: 110:     LCD_sendbyte(0b00001110,0);
  3730  001C04  0E00               	movlw	0
  3731  001C06  6E02               	movwf	LCD_sendbyte@type^0,c
  3732  001C08  0E0E               	movlw	14
  3733  001C0A  EC89  F00F         	call	_LCD_sendbyte
  3734  001C0E                     
  3735                           ;LCD.c: 111:     _delay((unsigned long)((38)*(64000000/4000000.0)));
  3736  001C0E  0ECA               	movlw	202
  3737  001C10                     u1747:
  3738  001C10  2EE8               	decfsz	wreg,f,c
  3739  001C12  D7FE               	bra	u1747
  3740  001C14  D000               	nop2	
  3741  001C16                     
  3742                           ;LCD.c: 112:     LCD_sendbyte(0b00000001,0);
  3743  001C16  0E00               	movlw	0
  3744  001C18  6E02               	movwf	LCD_sendbyte@type^0,c
  3745  001C1A  0E01               	movlw	1
  3746  001C1C  EC89  F00F         	call	_LCD_sendbyte
  3747  001C20                     
  3748                           ;LCD.c: 113:     _delay((unsigned long)((1.55)*(64000000/4000.0)));
  3749  001C20  0E21               	movlw	33
  3750  001C22  6E05               	movwf	??_LCD_Init^0,c
  3751  001C24  0E34               	movlw	52
  3752  001C26                     u1757:
  3753  001C26  2EE8               	decfsz	wreg,f,c
  3754  001C28  D7FE               	bra	u1757
  3755  001C2A  2E05               	decfsz	??_LCD_Init^0,f,c
  3756  001C2C  D7FC               	bra	u1757
  3757  001C2E                     
  3758                           ;LCD.c: 114:     LCD_sendbyte(0b00000110,0);
  3759  001C2E  0E00               	movlw	0
  3760  001C30  6E02               	movwf	LCD_sendbyte@type^0,c
  3761  001C32  0E06               	movlw	6
  3762  001C34  EC89  F00F         	call	_LCD_sendbyte
  3763  001C38  0012               	return		;funcret
  3764  001C3A                     __end_of_LCD_Init:
  3765                           	callstack 0
  3766                           
  3767 ;; *************** function _LCD_sendbyte *****************
  3768 ;; Defined at:
  3769 ;;		line 52 in file "LCD.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  Byte            1    wreg     unsigned char 
  3772 ;;  type            1    1[COMRAM] unsigned char 
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;  Byte            1    3[COMRAM] unsigned char 
  3775 ;;  highbits        1    2[COMRAM] unsigned char 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		wreg, status,2, status,0, cstack
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3785 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3786 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3788 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3789 ;;Total ram usage:        3 bytes
  3790 ;; Hardware stack levels used: 1
  3791 ;; Hardware stack levels required when called: 2
  3792 ;; This function calls:
  3793 ;;		_LCD_sendnibble
  3794 ;; This function is called by:
  3795 ;;		_LCD_Init
  3796 ;;		_LCD_sendstring
  3797 ;;		_main
  3798 ;;		_LCD_setline
  3799 ;;		_LCD_scroll
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           
  3803                           	psect	text23
  3804  001F12                     __ptext23:
  3805                           	callstack 0
  3806  001F12                     _LCD_sendbyte:
  3807                           	callstack 27
  3808                           
  3809                           ;incstack = 0
  3810                           ;LCD_sendbyte@Byte stored from wreg
  3811  001F12  6E04               	movwf	LCD_sendbyte@Byte^0,c
  3812  001F14                     
  3813                           ;LCD.c: 52: void LCD_sendbyte(unsigned char Byte, char type);LCD.c: 53: {;LCD.c: 56:    
      +                           unsigned char highbits;;LCD.c: 58:     highbits = Byte >> 4;
  3814  001F14  3804               	swapf	LCD_sendbyte@Byte^0,w,c
  3815  001F16  0B0F               	andlw	15
  3816  001F18  6E03               	movwf	LCD_sendbyte@highbits^0,c
  3817                           
  3818                           ;LCD.c: 61:     if (type == 1) {LATCbits.LATC6 = 1;} else {LATCbits.LATC6 = 0;}
  3819  001F1A  0402               	decf	LCD_sendbyte@type^0,w,c
  3820  001F1C  A4D8               	btfss	status,2,c
  3821  001F1E  EF93  F00F         	goto	u1501
  3822  001F22  EF95  F00F         	goto	u1500
  3823  001F26                     u1501:
  3824  001F26  EF98  F00F         	goto	l39
  3825  001F2A                     u1500:
  3826  001F2A  8C7B               	bsf	123,6,c	;volatile
  3827  001F2C  EF99  F00F         	goto	l2107
  3828  001F30                     l39:
  3829  001F30  9C7B               	bcf	123,6,c	;volatile
  3830  001F32                     l2107:
  3831                           
  3832                           ;LCD.c: 64:     LCD_sendnibble(highbits);
  3833  001F32  5003               	movf	LCD_sendbyte@highbits^0,w,c
  3834  001F34  EC57  F00E         	call	_LCD_sendnibble
  3835                           
  3836                           ;LCD.c: 65:     LCD_sendnibble(Byte);
  3837  001F38  5004               	movf	LCD_sendbyte@Byte^0,w,c
  3838  001F3A  EC57  F00E         	call	_LCD_sendnibble
  3839  001F3E                     
  3840                           ;LCD.c: 67:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  3841  001F3E  0EA0               	movlw	160
  3842  001F40                     u1767:
  3843  001F40  D000               	nop2	
  3844  001F42  2EE8               	decfsz	wreg,f,c
  3845  001F44  D7FD               	bra	u1767
  3846  001F46  0012               	return		;funcret
  3847  001F48                     __end_of_LCD_sendbyte:
  3848                           	callstack 0
  3849                           
  3850 ;; *************** function _LCD_sendnibble *****************
  3851 ;; Defined at:
  3852 ;;		line 34 in file "LCD.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  number          1    wreg     unsigned char 
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;  number          1    0[COMRAM] unsigned char 
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      void 
  3859 ;; Registers used:
  3860 ;;		wreg, cstack
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3867 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3869 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3870 ;;Total ram usage:        1 bytes
  3871 ;; Hardware stack levels used: 1
  3872 ;; Hardware stack levels required when called: 1
  3873 ;; This function calls:
  3874 ;;		_LCD_E_TOG
  3875 ;; This function is called by:
  3876 ;;		_LCD_sendbyte
  3877 ;;		_LCD_Init
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           	psect	text24
  3882  001CAE                     __ptext24:
  3883                           	callstack 0
  3884  001CAE                     _LCD_sendnibble:
  3885                           	callstack 27
  3886                           
  3887                           ;incstack = 0
  3888                           ;LCD_sendnibble@number stored from wreg
  3889  001CAE  6E01               	movwf	LCD_sendnibble@number^0,c
  3890  001CB0                     
  3891                           ;LCD.c: 34: void LCD_sendnibble(unsigned char number);LCD.c: 35: {;LCD.c: 38:     if (nu
      +                          mber & 0b0001) {LATBbits.LATB3 = 1;} else {LATBbits.LATB3 = 0;}
  3892  001CB0  A001               	btfss	LCD_sendnibble@number^0,0,c
  3893  001CB2  EF5D  F00E         	goto	u1351
  3894  001CB6  EF5F  F00E         	goto	u1350
  3895  001CBA                     u1351:
  3896  001CBA  EF62  F00E         	goto	l28
  3897  001CBE                     u1350:
  3898  001CBE  867A               	bsf	122,3,c	;volatile
  3899  001CC0  EF63  F00E         	goto	l1989
  3900  001CC4                     l28:
  3901  001CC4  967A               	bcf	122,3,c	;volatile
  3902  001CC6                     l1989:
  3903                           
  3904                           ;LCD.c: 39:     if (number & 0b0010) {LATBbits.LATB2 = 1;} else {LATBbits.LATB2 = 0;}
  3905  001CC6  A201               	btfss	LCD_sendnibble@number^0,1,c
  3906  001CC8  EF68  F00E         	goto	u1361
  3907  001CCC  EF6A  F00E         	goto	u1360
  3908  001CD0                     u1361:
  3909  001CD0  EF6D  F00E         	goto	l30
  3910  001CD4                     u1360:
  3911  001CD4  847A               	bsf	122,2,c	;volatile
  3912  001CD6  EF6E  F00E         	goto	l1993
  3913  001CDA                     l30:
  3914  001CDA  947A               	bcf	122,2,c	;volatile
  3915  001CDC                     l1993:
  3916                           
  3917                           ;LCD.c: 40:     if (number & 0b0100) {LATEbits.LATE3 = 1;} else {LATEbits.LATE3 = 0;}
  3918  001CDC  A401               	btfss	LCD_sendnibble@number^0,2,c
  3919  001CDE  EF73  F00E         	goto	u1371
  3920  001CE2  EF75  F00E         	goto	u1370
  3921  001CE6                     u1371:
  3922  001CE6  EF78  F00E         	goto	l32
  3923  001CEA                     u1370:
  3924  001CEA  867D               	bsf	125,3,c	;volatile
  3925  001CEC  EF79  F00E         	goto	l1997
  3926  001CF0                     l32:
  3927  001CF0  967D               	bcf	125,3,c	;volatile
  3928  001CF2                     l1997:
  3929                           
  3930                           ;LCD.c: 41:     if (number & 0b1000) {LATEbits.LATE1 = 1;} else {LATEbits.LATE1 = 0;}
  3931  001CF2  A601               	btfss	LCD_sendnibble@number^0,3,c
  3932  001CF4  EF7E  F00E         	goto	u1381
  3933  001CF8  EF80  F00E         	goto	u1380
  3934  001CFC                     u1381:
  3935  001CFC  EF83  F00E         	goto	l34
  3936  001D00                     u1380:
  3937  001D00  827D               	bsf	125,1,c	;volatile
  3938  001D02  EF84  F00E         	goto	l2001
  3939  001D06                     l34:
  3940  001D06  927D               	bcf	125,1,c	;volatile
  3941  001D08                     l2001:
  3942                           
  3943                           ;LCD.c: 43:     LCD_E_TOG();
  3944  001D08  EC32  F010         	call	_LCD_E_TOG	;wreg free
  3945  001D0C                     
  3946                           ;LCD.c: 44:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  3947  001D0C  0E1A               	movlw	26
  3948  001D0E                     u1777:
  3949  001D0E  2EE8               	decfsz	wreg,f,c
  3950  001D10  D7FE               	bra	u1777
  3951  001D12  D000               	nop2	
  3952  001D14  0012               	return		;funcret
  3953  001D16                     __end_of_LCD_sendnibble:
  3954                           	callstack 0
  3955                           
  3956 ;; *************** function _LCD_E_TOG *****************
  3957 ;; Defined at:
  3958 ;;		line 21 in file "LCD.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;		None
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		wreg
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3976 ;;Total ram usage:        0 bytes
  3977 ;; Hardware stack levels used: 1
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_LCD_sendnibble
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text25
  3986  002064                     __ptext25:
  3987                           	callstack 0
  3988  002064                     _LCD_E_TOG:
  3989                           	callstack 27
  3990  002064                     
  3991                           ;LCD.c: 25:     LATCbits.LATC2 = 1;
  3992  002064  847B               	bsf	123,2,c	;volatile
  3993  002066                     
  3994                           ;LCD.c: 26:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  3995  002066  0E0A               	movlw	10
  3996  002068                     u1787:
  3997  002068  2EE8               	decfsz	wreg,f,c
  3998  00206A  D7FE               	bra	u1787
  3999  00206C  D000               	nop2	
  4000  00206E                     
  4001                           ;LCD.c: 28:     LATCbits.LATC2 = 0;
  4002  00206E  947B               	bcf	123,2,c	;volatile
  4003  002070  0012               	return		;funcret
  4004  002072                     __end_of_LCD_E_TOG:
  4005                           	callstack 0
  4006                           
  4007 ;; *************** function _ADC_init *****************
  4008 ;; Defined at:
  4009 ;;		line 9 in file "ADC.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;		None
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;		None
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      void 
  4016 ;; Registers used:
  4017 ;;		wreg, status,2
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4027 ;;Total ram usage:        0 bytes
  4028 ;; Hardware stack levels used: 1
  4029 ;; This function calls:
  4030 ;;		Nothing
  4031 ;; This function is called by:
  4032 ;;		_main
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text26
  4037  002020                     __ptext26:
  4038                           	callstack 0
  4039  002020                     _ADC_init:
  4040                           	callstack 30
  4041  002020                     
  4042                           ;ADC.c: 11:     TRISAbits.TRISA3=1;
  4043  002020  8681               	bsf	129,3,c	;volatile
  4044                           
  4045                           ;ADC.c: 12:     ANSELAbits.ANSELA3=1;
  4046  002022  010E               	movlb	14	; () banked
  4047  002024  8792               	bsf	146,3,b	;volatile
  4048                           
  4049                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  4050  002026  010F               	movlb	15	; () banked
  4051  002028  9958               	bcf	88,4,b	;volatile
  4052  00202A                     
  4053                           ; BSR set to: 15
  4054                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  4055  00202A  0EFC               	movlw	-4
  4056  00202C  1758               	andwf	88,f,b	;volatile
  4057                           
  4058                           ;ADC.c: 17:     ADPCH=0b11;
  4059  00202E  0E03               	movlw	3
  4060  002030  6F5F               	movwf	95,b	;volatile
  4061  002032                     
  4062                           ; BSR set to: 15
  4063                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  4064  002032  9460               	bcf	96,2,c	;volatile
  4065  002034                     
  4066                           ; BSR set to: 15
  4067                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  4068  002034  8860               	bsf	96,4,c	;volatile
  4069  002036                     
  4070                           ; BSR set to: 15
  4071                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  4072  002036  8E60               	bsf	96,7,c	;volatile
  4073  002038                     
  4074                           ; BSR set to: 15
  4075  002038  0012               	return		;funcret
  4076  00203A                     __end_of_ADC_init:
  4077                           	callstack 0
  4078                           
  4079 ;; *************** function _ADC_getval *****************
  4080 ;; Defined at:
  4081 ;;		line 23 in file "ADC.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;		None
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;  tmpval          2    2[COMRAM] unsigned int 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  2    0[COMRAM] unsigned int 
  4088 ;; Registers used:
  4089 ;;		wreg, status,2, status,0
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4096 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4098 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4099 ;;Total ram usage:        4 bytes
  4100 ;; Hardware stack levels used: 1
  4101 ;; This function calls:
  4102 ;;		Nothing
  4103 ;; This function is called by:
  4104 ;;		_main
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           	psect	text27
  4109  001FAC                     __ptext27:
  4110                           	callstack 0
  4111  001FAC                     _ADC_getval:
  4112                           	callstack 30
  4113  001FAC                     
  4114                           ;ADC.c: 25:     unsigned int tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  4115  001FAC  8060               	bsf	96,0,c	;volatile
  4116  001FAE                     l204:
  4117  001FAE  B060               	btfsc	96,0,c	;volatile
  4118  001FB0  EFDC  F00F         	goto	u1541
  4119  001FB4  EFDE  F00F         	goto	u1540
  4120  001FB8                     u1541:
  4121  001FB8  EFD7  F00F         	goto	l204
  4122  001FBC                     u1540:
  4123  001FBC                     
  4124                           ;ADC.c: 31:     tmpval = ADRESH;
  4125  001FBC  CF64 F003          	movff	3940,ADC_getval@tmpval	;volatile
  4126  001FC0  6A04               	clrf	(ADC_getval@tmpval+1)^0,c
  4127  001FC2                     
  4128                           ;ADC.c: 35:     tmpval = 255 - tmpval;
  4129  001FC2  5003               	movf	ADC_getval@tmpval^0,w,c
  4130  001FC4  08FF               	sublw	255
  4131  001FC6  6E03               	movwf	ADC_getval@tmpval^0,c
  4132  001FC8  5004               	movf	(ADC_getval@tmpval+1)^0,w,c
  4133  001FCA  A0D8               	btfss	status,0,c
  4134  001FCC  2AE8               	incf	wreg,f,c
  4135  001FCE  0800               	sublw	0
  4136  001FD0  6E04               	movwf	(ADC_getval@tmpval+1)^0,c
  4137  001FD2                     
  4138                           ;ADC.c: 37:     return tmpval;
  4139  001FD2  C003  F001         	movff	ADC_getval@tmpval,?_ADC_getval
  4140  001FD6  C004  F002         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
  4141  001FDA  0012               	return		;funcret
  4142  001FDC                     __end_of_ADC_getval:
  4143                           	callstack 0
  4144                           
  4145                           	psect	rparam
  4146  0000                     
  4147                           	psect	idloc
  4148                           
  4149                           ;Config register IDLOC0 @ 0x200000
  4150                           ;	unspecified, using default values
  4151  200000                     	org	2097152
  4152  200000  0FFF               	dw	4095
  4153                           
  4154                           ;Config register IDLOC1 @ 0x200002
  4155                           ;	unspecified, using default values
  4156  200002                     	org	2097154
  4157  200002  0FFF               	dw	4095
  4158                           
  4159                           ;Config register IDLOC2 @ 0x200004
  4160                           ;	unspecified, using default values
  4161  200004                     	org	2097156
  4162  200004  0FFF               	dw	4095
  4163                           
  4164                           ;Config register IDLOC3 @ 0x200006
  4165                           ;	unspecified, using default values
  4166  200006                     	org	2097158
  4167  200006  0FFF               	dw	4095
  4168                           
  4169                           ;Config register IDLOC4 @ 0x200008
  4170                           ;	unspecified, using default values
  4171  200008                     	org	2097160
  4172  200008  0FFF               	dw	4095
  4173                           
  4174                           ;Config register IDLOC5 @ 0x20000A
  4175                           ;	unspecified, using default values
  4176  20000A                     	org	2097162
  4177  20000A  0FFF               	dw	4095
  4178                           
  4179                           ;Config register IDLOC6 @ 0x20000C
  4180                           ;	unspecified, using default values
  4181  20000C                     	org	2097164
  4182  20000C  0FFF               	dw	4095
  4183                           
  4184                           ;Config register IDLOC7 @ 0x20000E
  4185                           ;	unspecified, using default values
  4186  20000E                     	org	2097166
  4187  20000E  0FFF               	dw	4095
  4188                           
  4189                           	psect	config
  4190                           
  4191                           ;Config register CONFIG1L @ 0x300000
  4192                           ;	External Oscillator mode Selection bits
  4193                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4194                           ;	Power-up default value for COSC bits
  4195                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4196  300000                     	org	3145728
  4197  300000  AA                 	db	170
  4198                           
  4199                           ;Config register CONFIG1H @ 0x300001
  4200                           ;	unspecified, using default values
  4201                           ;	Clock Out Enable bit
  4202                           ;	CLKOUTEN = 0x1, unprogrammed default
  4203                           ;	Clock Switch Enable bit
  4204                           ;	CSWEN = 0x1, unprogrammed default
  4205                           ;	Fail-Safe Clock Monitor Enable bit
  4206                           ;	FCMEN = 0x1, unprogrammed default
  4207  300001                     	org	3145729
  4208  300001  FF                 	db	255
  4209                           
  4210                           ;Config register CONFIG2L @ 0x300002
  4211                           ;	unspecified, using default values
  4212                           ;	Master Clear Enable bit
  4213                           ;	MCLRE = 0x1, unprogrammed default
  4214                           ;	Power-up Timer Enable bit
  4215                           ;	PWRTE = 0x1, unprogrammed default
  4216                           ;	Low-power BOR enable bit
  4217                           ;	LPBOREN = 0x1, unprogrammed default
  4218                           ;	Brown-out Reset Enable bits
  4219                           ;	BOREN = 0x3, unprogrammed default
  4220  300002                     	org	3145730
  4221  300002  FF                 	db	255
  4222                           
  4223                           ;Config register CONFIG2H @ 0x300003
  4224                           ;	unspecified, using default values
  4225                           ;	Brown Out Reset Voltage selection bits
  4226                           ;	BORV = 0x3, unprogrammed default
  4227                           ;	ZCD Disable bit
  4228                           ;	ZCD = 0x1, unprogrammed default
  4229                           ;	PPSLOCK bit One-Way Set Enable bit
  4230                           ;	PPS1WAY = 0x1, unprogrammed default
  4231                           ;	Stack Full/Underflow Reset Enable bit
  4232                           ;	STVREN = 0x1, unprogrammed default
  4233                           ;	Debugger Enable bit
  4234                           ;	DEBUG = 0x1, unprogrammed default
  4235                           ;	Extended Instruction Set Enable bit
  4236                           ;	XINST = 0x1, unprogrammed default
  4237  300003                     	org	3145731
  4238  300003  FF                 	db	255
  4239                           
  4240                           ;Config register CONFIG3L @ 0x300004
  4241                           ;	WDT Period Select bits
  4242                           ;	WDTCPS = 0x1F, unprogrammed default
  4243                           ;	WDT operating mode
  4244                           ;	WDTE = OFF, WDT Disabled
  4245  300004                     	org	3145732
  4246  300004  9F                 	db	159
  4247                           
  4248                           ;Config register CONFIG3H @ 0x300005
  4249                           ;	unspecified, using default values
  4250                           ;	WDT Window Select bits
  4251                           ;	WDTCWS = 0x7, unprogrammed default
  4252                           ;	WDT input clock selector
  4253                           ;	WDTCCS = 0x7, unprogrammed default
  4254  300005                     	org	3145733
  4255  300005  FF                 	db	255
  4256                           
  4257                           ;Config register CONFIG4L @ 0x300006
  4258                           ;	unspecified, using default values
  4259                           ;	Write Protection Block 0
  4260                           ;	WRT0 = 0x1, unprogrammed default
  4261                           ;	Write Protection Block 1
  4262                           ;	WRT1 = 0x1, unprogrammed default
  4263                           ;	Write Protection Block 2
  4264                           ;	WRT2 = 0x1, unprogrammed default
  4265                           ;	Write Protection Block 3
  4266                           ;	WRT3 = 0x1, unprogrammed default
  4267                           ;	Write Protection Block 3
  4268                           ;	WRT4 = 0x1, unprogrammed default
  4269                           ;	Write Protection Block 3
  4270                           ;	WRT5 = 0x1, unprogrammed default
  4271                           ;	Write Protection Block 3
  4272                           ;	WRT6 = 0x1, unprogrammed default
  4273                           ;	Write Protection Block 3
  4274                           ;	WRT7 = 0x1, unprogrammed default
  4275  300006                     	org	3145734
  4276  300006  FF                 	db	255
  4277                           
  4278                           ;Config register CONFIG4H @ 0x300007
  4279                           ;	unspecified, using default values
  4280                           ;	Configuration Register Write Protection bit
  4281                           ;	WRTC = 0x1, unprogrammed default
  4282                           ;	Boot Block Write Protection bit
  4283                           ;	WRTB = 0x1, unprogrammed default
  4284                           ;	Data EEPROM Write Protection bit
  4285                           ;	WRTD = 0x1, unprogrammed default
  4286                           ;	Scanner Enable bit
  4287                           ;	SCANE = 0x1, unprogrammed default
  4288                           ;	Low Voltage Programming Enable bit
  4289                           ;	LVP = 0x1, unprogrammed default
  4290  300007                     	org	3145735
  4291  300007  FF                 	db	255
  4292                           
  4293                           ;Config register CONFIG5L @ 0x300008
  4294                           ;	unspecified, using default values
  4295                           ;	UserNVM Program Memory Code Protection bit
  4296                           ;	CP = 0x1, unprogrammed default
  4297                           ;	DataNVM Memory Code Protection bit
  4298                           ;	CPD = 0x1, unprogrammed default
  4299  300008                     	org	3145736
  4300  300008  FF                 	db	255
  4301                           
  4302                           ;Config register CONFIG5H @ 0x300009
  4303                           ;	unspecified, using default values
  4304  300009                     	org	3145737
  4305  300009  FF                 	db	255
  4306                           
  4307                           ;Config register CONFIG6L @ 0x30000A
  4308                           ;	unspecified, using default values
  4309                           ;	Table Read Protection Block 0
  4310                           ;	EBTR0 = 0x1, unprogrammed default
  4311                           ;	Table Read Protection Block 1
  4312                           ;	EBTR1 = 0x1, unprogrammed default
  4313                           ;	Table Read Protection Block 2
  4314                           ;	EBTR2 = 0x1, unprogrammed default
  4315                           ;	Table Read Protection Block 3
  4316                           ;	EBTR3 = 0x1, unprogrammed default
  4317                           ;	Table Read Protection Block 4
  4318                           ;	EBTR4 = 0x1, unprogrammed default
  4319                           ;	Table Read Protection Block 5
  4320                           ;	EBTR5 = 0x1, unprogrammed default
  4321                           ;	Table Read Protection Block 6
  4322                           ;	EBTR6 = 0x1, unprogrammed default
  4323                           ;	Table Read Protection Block 7
  4324                           ;	EBTR7 = 0x1, unprogrammed default
  4325  30000A                     	org	3145738
  4326  30000A  FF                 	db	255
  4327                           
  4328                           ;Config register CONFIG6H @ 0x30000B
  4329                           ;	unspecified, using default values
  4330                           ;	Boot Block Table Read Protection bit
  4331                           ;	EBTRB = 0x1, unprogrammed default
  4332  30000B                     	org	3145739
  4333  30000B  FF                 	db	255
  4334                           tosu	equ	0xFFF
  4335                           tosh	equ	0xFFE
  4336                           tosl	equ	0xFFD
  4337                           stkptr	equ	0xFFC
  4338                           pclatu	equ	0xFFB
  4339                           pclath	equ	0xFFA
  4340                           pcl	equ	0xFF9
  4341                           tblptru	equ	0xFF8
  4342                           tblptrh	equ	0xFF7
  4343                           tblptrl	equ	0xFF6
  4344                           tablat	equ	0xFF5
  4345                           prodh	equ	0xFF4
  4346                           prodl	equ	0xFF3
  4347                           indf0	equ	0xFEF
  4348                           postinc0	equ	0xFEE
  4349                           postdec0	equ	0xFED
  4350                           preinc0	equ	0xFEC
  4351                           plusw0	equ	0xFEB
  4352                           fsr0h	equ	0xFEA
  4353                           fsr0l	equ	0xFE9
  4354                           wreg	equ	0xFE8
  4355                           indf1	equ	0xFE7
  4356                           postinc1	equ	0xFE6
  4357                           postdec1	equ	0xFE5
  4358                           preinc1	equ	0xFE4
  4359                           plusw1	equ	0xFE3
  4360                           fsr1h	equ	0xFE2
  4361                           fsr1l	equ	0xFE1
  4362                           bsr	equ	0xFE0
  4363                           indf2	equ	0xFDF
  4364                           postinc2	equ	0xFDE
  4365                           postdec2	equ	0xFDD
  4366                           preinc2	equ	0xFDC
  4367                           plusw2	equ	0xFDB
  4368                           fsr2h	equ	0xFDA
  4369                           fsr2l	equ	0xFD9
  4370                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         134
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     26     160
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@buf(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@buf(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1077_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@buf(BANK0[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@buf(BANK0[10]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 10
		 -> main@buf(BANK0[10]), 

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 10
		 -> main@buf(BANK0[10]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    ___wmul->_ADC_getval
    _sendStringSerial4->_sendCharSerial4
    ___lwdiv->___wmul
    _LCD_sendstring->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   13054
                                             93 COMRAM     2     2      0
                                             16 BANK0     10    10      0
                         _ADC_getval
                           _ADC_init
                           _LCD_Init
                       _LCD_sendbyte
                     _LCD_sendstring
                            ___lwdiv
                             ___wmul
                         _initUSART4
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8    8596
                                              0 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    8243
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6    7870
                                             63 COMRAM    22    16      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1548
                                             10 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     707
                                              4 COMRAM     6     2      4
                         _ADC_getval (ARG)
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     466
                                             10 COMRAM     7     3      4
                         _ADC_getval (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_sendstring                                       6     4      2    1060
                                              4 COMRAM     2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1025
                                              4 COMRAM     2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         3     2      1     937
                                              1 COMRAM     3     2      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendnibble                                       1     1      0      88
                                              0 COMRAM     1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (4) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      46
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_getval
   _ADC_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
   _LCD_sendbyte
   _LCD_sendstring
     _LCD_sendbyte
   ___lwdiv
     _ADC_getval (ARG)
     ___wmul (ARG)
       _ADC_getval (ARG)
   ___wmul
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1A      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FF       8        0.0%
DATA                 0      0      FF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Nov 17 11:46:33 2021

                        l30 1CDA                          l32 1CF0                          l25 2070  
                        l41 1F46                          l34 1D06                          l36 1D14  
                        l28 1CC4                          l44 1C38                          l39 1F30  
                        l55 1F7A                          l99 191E         ___wmul@multiplicand 0007  
                       l201 2038                         l210 2000                         l204 1FAE  
                       l206 1FBC                         l207 1FDA                         l151 2050  
                       l139 201E                         l148 203C                         l324 17AC  
                       l157 1FAA                         l337 1910                         l701 1CA4  
                       l708 1CAC                         l922 1B64                         l930 1240  
                       l924 1BA0                         l932 1248                         l950 1480  
                       l919 1B22                         l964 0F0E                         l990 1E9A  
                       l888 1DCC                         l993 1EA2                         l985 1D72  
                       l986 1D7A                         l979 119E                         u900 1F04  
                       u901 1F00                         u910 1638                         u911 1634  
                       u920 166A                         u921 1666                         u850 1A24  
                       u931 1694                         u851 1A20                         u940 16B8  
                       u860 1A36                         u941 16B4                         u861 1A32  
                       u950 16E2                         u870 1A5E                         u951 16DE  
                       u871 1A5A                         u960 1722                         u880 1A94  
                       u961 171E                         u881 1A90                         u970 176C  
                       u890 1E62                         u971 1768                         u891 1E5E  
                       u980 17C0                         u981 17BC                         u990 17F2  
                       u991 17EE                         _abs 1E64                         _pad 1ADC  
                       wreg 000FE8         __size_of_ADC_getval 0030                        l1021 161C  
                      l1024 1624                        l2001 1D08                        l1050 1ADA  
                      l2003 1D0C                        l1027 1EDA                        l1035 1E1E  
                      l2011 0E52                        ?_abs 0013                        l1061 2072  
                      l2013 0E56                        l2005 0E0A                        l2103 1F14  
                      l2111 203C                        l2031 0E90                        l2023 0E80  
                      l2015 0E62                        l2007 0E32                        l2105 1F2A  
                      l2113 204C                        l2201 1F7C                        l2017 0E66  
                      l2041 0EFC                        l2009 0E40                        l2121 1D52  
                      l1058 1E62                        l2107 1F32                        l2131 1BE0  
                      l2123 1BA2                        l2203 1F80                        l1067 1F10  
                      l2051 0F8C                        l2043 0F1E                        l2035 0E98  
                      l2027 0E88                        l2019 0E78                        l2115 1D16  
                      l2109 1F3E                        l2141 1C0E                        l2133 1BEA  
                      l2125 1BBA                        l2221 1C64                        l2213 1C3A  
                      l2205 1F8E                        l2061 1012                        l2053 0F9A  
                      l2045 0F20                        l2117 1D1E                        l2143 1C16  
                      l2135 1BF2                        l2127 1BD2                        l2151 1F4C  
                      l2231 1C98                        l2223 1C72                        l2215 1C42  
                      l2207 1F92                        l2055 0FBA                        l2063 1024  
                      l2047 0F48                        l2039 0EA4                        l2119 1D2C  
                      l2145 1C20                        l2137 1BFC                        l2129 1BD8  
                      l2153 1F5E                        l2233 1C9E                        l2225 1C78  
                      l2217 1C54                        l2161 200C                        l2073 10F4  
                      l2065 104C                        l2057 0FC8                        l2049 0F7E  
                      l2171 2020                        l2147 1C2E                        l2139 1C04  
                      l2155 1F62                        l2227 1C8E                        l2219 1C5C  
                      l2163 200E                        l2091 118C                        l2075 111C  
                      l2083 114A                        l2067 1074                        l2181 1FAC  
                      l2173 202A                        l2157 1F7A                        l2149 1F48  
                      l2229 1C96                        l2165 2018                        l2085 1158  
                      l2077 112A                        l2069 10BC                        l2261 193E  
                      l2183 1FC2                        l2175 2032                        l2167 201A  
                      l2159 2002                        l2079 113E                        l2191 1D8E  
                      l2271 19E8                        l2263 1994                        l2255 1912  
                      l2185 1FD2                        l2177 2034                        l2169 201C  
                      l1801 17C0                        l1721 1A40                        l2089 1164  
                      l2193 1D96                        l2273 19F2                        l2265 19B8  
                      l2257 1916                        l2179 2036                        l1811 1830  
                      l1803 17E0                        l1723 1A5E                        l1715 1A12  
                      l1731 1E2C                        l2195 1D9E                        l2267 19C4  
                      l2259 191A                        l1821 18A8                        l1813 1838  
                      l1805 17E4                        l1725 1A94                        l1717 1A24  
                      l1733 1E3E                        l1741 1EEC                        l1901 1276  
                      l2365 0ECE                        l2197 1DBA                        l2189 1D7C  
                      l2269 19D0                        l2367 154A                        l1823 18BA  
                      l1815 184C                        l1807 17F2                        l1719 1A36  
                      l1735 1E42                        l1743 1F04                        l1911 1314  
                      l1903 127E                        l1761 165C                        l1753 1626  
                      l1817 185A                        l1825 18C0                        l1809 1812  
                      l1729 1E20                        l1737 1EDC                        l1841 1B1A  
                      l1833 1ADC                        l1921 13D0                        l1913 131A  
                      l1905 1286                        l1747 1FDC                        l1771 16B8  
                      l1763 166A                        l1755 162A                        l1827 18D0  
                      l1819 1888                        l1739 1EE8                        l1851 1B88  
                      l1843 1B2E                        l1835 1AEC                        l1931 1422  
                      l1923 13EA                        l1907 128C                        l1915 137E  
                      l1749 1FF8                        l1781 1722                        l1773 16C0  
                      l1765 168A                        l1757 1638                        l1829 18F0  
                      l1845 1B42                        l1837 1B00                        l1933 1434  
                      l1917 1398                        l1925 13FA                        l1909 130E  
                      l1871 1E18                        l1863 1DCE                        l1951 14BE  
                      l1943 1482                        l1791 176C                        l1783 1742  
                      l1775 16D4                        l1767 168E                        l1759 1658  
                      l1855 1E64                        l1847 1B46                        l1839 1B0E  
                      l1935 1440                        l1927 140C                        l1919 13B6  
                      l1865 1DD2                        l1961 1518                        l1953 14F8  
                      l1945 1496                        l1793 178C                        l1785 1744  
                      l1777 16E2                        l1769 169A                        l1857 1E7E  
                      l1849 1B74                        l1937 1448                        l1929 141C  
                      l1881 11A0                        l1875 2064                        l1859 1EA4  
                      l1867 1DE6                        l1971 159A                        l1963 1520  
                      l1955 14FC                        l1947 149A                        l1787 1756  
                      l1779 16F4                        l1939 1458                        l1891 121A  
                      l1883 11C0                        l1877 2066                        l1869 1E14  
                      l1965 1528                        l1949 149E                        l1789 175C  
                      l1797 17AE                        l1893 1234                        l1885 11E8  
                      ?_pad 0011                        l1879 206E                        l1991 1CD4  
                      l1975 15DC                        l1967 1560                        l1959 1502  
                      l1799 17B2                        l1895 1250                        l1887 1208  
                      l1993 1CDC                        l1985 1CB0                        l1977 15EE  
                      l1897 1262                        l1889 1218                        l1995 1CEA  
                      l1987 1CBE                        l1979 1600                        l1899 1270  
                      l1997 1CF2                        l1989 1CC6                        l1999 1D00  
                      STR_1 0E01                        u1000 1830                        u1001 182C  
                      u1010 185A                        u1011 1856                        u1100 1ED6  
                      u1020 1888                        u1021 1884                        u1110 1DE6  
                      u1030 18D0                        u1111 1DE2                        u1031 18CC  
                      u1120 1E14                        u1040 1AEC                        u1200 1398  
                      u1121 1E10                        u1041 1AE8                        u1201 1394  
                      u1050 1B0E                        u1210 13B6                        u1130 11D0  
                      u1051 1B0A                        u1211 13B2                        u1131 11CA  
                      u1300 1514                        u1060 1B64                        u1220 13D0  
                      u1140 11D2                        u1301 1510                        u1061 1B60  
                      u1221 13CC                        u1310 15D6                        u1070 1B74  
                      u1230 13EA                        u1150 11E8                        u1311 15D0  
                      u1071 1B70                        u1231 13E6                        u1151 11E4  
                      u1320 15D8                        u1080 1E7E                        u1240 13FA  
                      u1160 1218                        u1400 0F0E                        u1081 1E7A  
                      u1241 13F6                        u1161 1214                        u1401 0F0A  
                      u1090 1ED4                        u1330 15EE                        u1250 140C  
                      u1170 1234                        u1410 0F1E                        u1091 1ECE  
                      u1331 15EA                        u1251 1408                        u1171 1230  
                      u1411 0F1A                        u1500 1F2A                        u1340 1600  
                      u1260 141C                        u1180 1262                        u1420 0F48  
                      u1501 1F26                        u1341 15FC                        u1261 1418  
                      u1181 125E                        u1421 0F44                        u1350 1CBE  
                      u1510 204C                        u1270 1434                        u1190 1270  
                      u1430 0F8C                        u1351 1CBA                        u1511 2048  
                      u1271 1430                        u1191 126C                        u1431 0F88  
                      u1360 1CD4                        u1600 1C8E                        u1280 14BE  
                      u1440 100C                        u1520 1D72                _BAUD4CONbits 000EE9  
                      u1361 1CD0                        u1601 1C8A                        u1281 14BA  
                      u1441 1006                        u1521 1D6E                        u1370 1CEA  
                      u1530 1F7A                        u1290 14F8                        u1450 100E  
                      u1371 1CE6                        u1531 1F76                        u1291 14F4  
                      u1540 1FBC                        u1380 1D00                        u1460 1024  
                      u1541 1FB8                        u1381 1CFC                        u1461 1020  
                      u1550 1FAA                        u1470 104C                        u1390 0E32  
                      u1551 1FA6                        u1471 1048                        u1391 0E2E  
                      u1480 1074                        u1481 1070                        u1490 111C  
                      u1707 1BC4                        u1491 1118                        u1580 1C54  
                      u1717 1BDA                        u1581 1C50                        u1590 1C72  
                      u1727 1BEC                        u1591 1C6E                        u1737 1BFE  
                      u1747 1C10                        u1757 1C26                        u1767 1F40  
                      u1687 19DA                        u1777 1D0E                        u1697 19FC  
                      u1787 2068          __size_of_LCD_E_TOG 000E                        abs@a 0013  
                      _data 00B8                        _dbuf 00C6                        _atoi 1482  
                      _main 1912                        _dtoa 11A0                        _prec 00B4  
                      _nout 00B0                        pad@i 0018                        pad@p 0015  
                      fsr1h 000FE2                        fsr2h 000FDA                        indf2 000FDF  
                      fsr1l 000FE1                        pad@w 001A                        fsr2l 000FD9  
                      prodh 000FF4                        prodl 000FF3                        start 0000  
          __end_of_ADC_init 203A                ___param_bank 000000                       ??_abs 0015  
                     ??_pad 0017            __end_of_LCD_Init 1C3A             __end_of___aodiv 17AE  
                     ?_atoi 000B                       ?_main 0001                       ?_dtoa 001C  
           __end_of___aomod 1912                       _ADPCH 000F5F             __end_of___lwdiv 1CAE  
              vfpfcnvrt@fmt 0042     __end_of_sendCharSerial4 2052                       _flags 00B6  
                     _fputc 1A12                       _fputs 1E20             __end_of_isdigit 1EDC  
                     atoi@n 0018                       pad@fp 0011                       atoi@s 000B  
                     _width 00B2                       _putch 2072                       dtoa@d 001E  
                     dtoa@i 003E                       dtoa@n 0036                       dtoa@p 0030  
                     dtoa@s 0034                       dtoa@w 0032             __end_of_isspace 1E20  
             ?_LCD_sendbyte 0002                       tablat 000FF5                       status 000FD8  
           __end_of_sprintf 1DCE     __size_of_LCD_sendnibble 0068     __size_of_LCD_sendstring 0034  
           __initialization 2052                __end_of_atoi 1626                __end_of_main 1A12  
              __end_of_dtoa 1482           __end_of_LCD_E_TOG 2072                      ??_atoi 000D  
                    ??_main 005E                      ??_dtoa 0026               __activetblptr 000003  
                    ?_fputc 0001                      ?_fputs 000A                      _ADRESH 000F64  
            ??_LCD_sendbyte 0003                      ?_putch 0001                      _RC0PPS 000E62  
                    _RC4REG 000EE3               vfpfcnvrt@done 0052                      _RX4PPS 000E15  
                    _TX4REG 000EE4                ??_ADC_getval 0003                vfprintf@cfmt 005C  
                 ??___aodiv 0011                   ??___aomod 0011                      ___wmul 1FDC  
                 ??___lwdiv 000F                      clear_0 2058                      isa$std 000001  
                    pad@buf 0013                      dtoa@fp 001C                      _strlen 1EDC  
                    fputc@c 0001                      fputs@c 000E                      fputs@i 000F  
                    fputs@s 000A                   ??_isdigit 0003                __mediumconst 0000  
                 ??_isspace 0003                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                   ?_ADC_init 0001            ?_sendCharSerial4 0001  
                    putch@c 0001            __end_of_vfprintf 1D7C                   ??_sprintf 005E  
        __end_of_ADC_getval 1FDC                  __accesstop 0060     __end_of__initialization 205E  
                 ?_LCD_Init 0001               ___rparam_used 000001              __pcstackCOMRAM 0001  
             __end_of_fputc 1ADC               __end_of_fputs 1E64               __end_of_putch 2074  
                ??_ADC_init 0001                     ??_fputc 0005                     ??_fputs 000E  
                   ??_putch 0001                  __pbssBANK0 0060                  ??_LCD_Init 0005  
            _LCD_sendnibble 1CAE              _LCD_sendstring 1F48                     ?___wmul 0005  
      __end_of_LCD_sendbyte 1F48                     ?_strlen 0001                     _SP4BRGH 000EE6  
                   _SP4BRGL 000EE5          __size_of_vfpfcnvrt 0396      __end_of_LCD_sendnibble 1D16  
    __end_of_LCD_sendstring 1F7C                   _ADREFbits 000F58                  _initUSART4 2002  
                   __Hparam 0000                     __Lparam 0000     sendStringSerial4@string 0002  
                   ___aodiv 1626                     ___aomod 17AE             __size_of___wmul 0026  
                   ___lwdiv 1C3A                   ?_vfprintf 0056                __psmallconst 0E00  
                   __pcinit 2052                     __ramtop 0E00                     __ptext0 1912  
                   __ptext1 1D7C                     __ptext2 1D16                     __ptext3 0E0A  
                   __ptext4 11A0                     __ptext5 1ADC                     __ptext6 1EDC  
                   __ptext7 1E20                     __ptext8 1A12                     __ptext9 2072  
           __size_of_strlen 0036                __size_of_abs 0040                __size_of_pad 00C6  
                   _isdigit 1EA4                     _isspace 1DCE                   _LCD_E_TOG 2064  
                   _lowbits 00BE               _RxBufWriteCnt 00C5                     atoi@neg 0011  
                   main@buf 00F6                     _sprintf 1D7C        end_of_initialization 205E  
           ?_LCD_sendnibble 0001            ADC_getval@tmpval 0003                     fputc@fp 0003  
                   fputs@fp 000C             ?_LCD_sendstring 0005        LCD_sendbyte@highbits 0003  
         __end_of_vfpfcnvrt 11A0                     postdec2 000FDD                     postinc0 000FEE  
                   postinc1 000FE6                     postinc2 000FDE                  ??_vfprintf 005C  
                   strlen@a 0003                     strlen@s 0001                  ?_LCD_E_TOG 0001  
                 _TRISAbits 000F81                   _TRISBbits 000F82                   _TRISCbits 000F83  
                 _TRISEbits 000F85           __size_of_ADC_init 001A                _EUSART4RXbuf 009C  
              _EUSART4TXbuf 0060                 ?_initUSART4 0001   sendCharSerial4@charToSend 0001  
         __size_of_LCD_Init 0098       __size_of_LCD_sendbyte 0036                 vfpfcnvrt@ap 0044  
               vfpfcnvrt@fp 0040                 vfpfcnvrt@ll 004A              __end_of___wmul 2002  
      LCD_sendnibble@number 0001              __end_of_strlen 1F12         start_initialization 2052  
               __end_of_abs 1EA4                 __end_of_pad 1BA2               _TxBufWriteCnt 00C3  
              _LCD_sendbyte 1F12    __size_of_sendCharSerial4 0018                 vfprintf@fmt 0058  
      LCD_sendstring@string 0005                    ??___wmul 0009                    ??_strlen 0003  
               ??_LCD_E_TOG 0001         __size_of_initUSART4 001E               __pcstackBANK0 00E6  
          ___aodiv@dividend 0001                   _atoi$1195 0013                   _atoi$1196 0017  
                 _atoi$1197 0015            ___lwdiv@dividend 000B                   _dtoa$1160 002E  
                  ?___aodiv 0001                    ?___aomod 0001            ___aodiv@quotient 0013  
                  ?___lwdiv 000B                   _frac_part 00BA           __size_of_vfprintf 0066  
               __smallconst 0E00                    ?_isdigit 0001                    ?_isspace 0001  
          ??_LCD_sendnibble 0001                _RxBufReadCnt 00C4                    _ADC_init 2020  
          ___lwdiv@quotient 000F            ??_LCD_sendstring 0007                    ?_sprintf 00E6  
            __size_of_fputc 00CA              __size_of_fputs 0044              __size_of_putch 0002  
          LCD_sendbyte@Byte 0004           _sendStringSerial4 1F7C                    _LCD_Init 1BA2  
          LCD_sendbyte@type 0002              ___wmul@product 0009                    _LATBbits 000F7A  
                  _LATCbits 000F7B                    _LATEbits 000F7D          ?_sendStringSerial4 0002  
                  _PIE4bits 000E2D                    _PIR4bits 000E37           ??_sendCharSerial4 0001  
       ??_sendStringSerial4 0004                   _vfpfcnvrt 0E0A                  _ADCON0bits 000F60  
         ___wmul@multiplier 0005                _TxBufReadCnt 00C2                _isspace$1213 0007  
 __end_of_sendStringSerial4 1FAC                ??_initUSART4 0001                    __Hrparam 0000  
                _ADC_getval 1FAC                  vfprintf@ap 005A                    __Lrparam 0000  
                vfprintf@fp 0056            __size_of___aodiv 0188            __size_of___aomod 0164  
                ?_vfpfcnvrt 0040            __size_of___lwdiv 0074             ___aodiv@divisor 0009  
           ___aodiv@counter 0011                  _ANSELAbits 000E92                  sprintf@fmt 00E8  
          __size_of_isdigit 0038             ___lwdiv@divisor 000D          __end_of_initUSART4 2020  
          __size_of_isspace 0052             ___lwdiv@counter 0011                    __ptext10 1E64  
                  __ptext11 17AE                    __ptext20 1C3A                    __ptext12 1626  
                  __ptext21 1F48                    __ptext13 1482                    __ptext22 1BA2  
                  __ptext14 1DCE                    __ptext23 1F12                    __ptext15 1EA4  
                  __ptext24 1CAE                    __ptext16 1FDC                    __ptext25 2064  
                  __ptext17 1F7C                    __ptext26 2020                    __ptext18 203A  
                  __ptext27 1FAC                    __ptext19 2002                    _highbits 00C0  
          __size_of_sprintf 0052               __size_of_atoi 01A4               __size_of_main 0100  
             __size_of_dtoa 02E2                    _int_part 00BC                    isa$xinst 000000  
                _RC4STAbits 000EE7                    _vfprintf 1D16            ___aomod@dividend 0001  
            _vfpfcnvrt$1175 0054                    isdigit@c 0001  __size_of_sendStringSerial4 0030  
                 sprintf@ap 00EE                    isspace@c 0001                 ?_ADC_getval 0001  
           ___aomod@divisor 0009                 ??_vfpfcnvrt 0046             ___aomod@counter 0011  
                  sprintf@f 00F0                    sprintf@s 00E6                  _TX4STAbits 000EE8  
              ___aodiv@sign 0012             _sendCharSerial4 203A                ___aomod@sign 0012  
